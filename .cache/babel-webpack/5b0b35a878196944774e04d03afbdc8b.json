{"ast":null,"code":"import _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Component, ViewEncapsulation, ChangeDetectorRef, Input, NgModule } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputNumber, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { flatMap, debounceTime, takeUntil } from 'rxjs/operators';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * Generated from: spin.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction NzSpinComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵelement(1, \"i\", 4);\n    ɵngcc0.ɵɵelement(2, \"i\", 4);\n    ɵngcc0.ɵɵelement(3, \"i\", 4);\n    ɵngcc0.ɵɵelement(4, \"i\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NzSpinComponent_div_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NzSpinComponent_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.nzTip);\n  }\n}\n\nfunction NzSpinComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, NzSpinComponent_div_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(3, NzSpinComponent_div_2_div_3_Template, 2, 1, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-spin-spinning\", ctx_r2.isLoading)(\"ant-spin-lg\", ctx_r2.nzSize === \"large\")(\"ant-spin-sm\", ctx_r2.nzSize === \"small\")(\"ant-spin-show-text\", ctx_r2.nzTip);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.nzIndicator || _r0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.nzTip);\n  }\n}\n\nfunction NzSpinComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-spin-blur\", ctx_r3.isLoading);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar NZ_CONFIG_COMPONENT_NAME = 'spin';\n\nvar NzSpinComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} nzConfigService\n   * @param {?} cdr\n   */\n  function NzSpinComponent(nzConfigService, cdr) {\n    _classCallCheck(this, NzSpinComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.nzIndicator = null;\n    this.nzSize = 'default';\n    this.nzTip = null;\n    this.nzDelay = 0;\n    this.nzSimple = false;\n    this.nzSpinning = true;\n    this.destroy$ = new Subject();\n    this.spinning$ = new BehaviorSubject(this.nzSpinning);\n    this.delay$ = new BehaviorSubject(this.nzDelay);\n    this.isLoading = true;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NzSpinComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      /** @type {?} */\n      var loading$ = this.spinning$.pipe(flatMap(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this.delay$;\n      }), flatMap(\n      /**\n      * @param {?} delay\n      * @return {?}\n      */\n      function (delay) {\n        if (delay === 0) {\n          return _this.spinning$;\n        } else {\n          return _this.spinning$.pipe(debounceTime(delay));\n        }\n      }), takeUntil(this.destroy$));\n      loading$.subscribe(\n      /**\n      * @param {?} loading\n      * @return {?}\n      */\n      function (loading) {\n        _this.isLoading = loading;\n\n        _this.cdr.markForCheck();\n      });\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).pipe(takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this.cdr.markForCheck();\n      });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzSpinning = changes.nzSpinning,\n          nzDelay = changes.nzDelay;\n\n      if (nzSpinning) {\n        this.spinning$.next(this.nzSpinning);\n      }\n\n      if (nzDelay) {\n        this.delay$.next(this.nzDelay);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzSpinComponent;\n}();\n\nNzSpinComponent.ɵfac = function NzSpinComponent_Factory(t) {\n  return new (t || NzSpinComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzSpinComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSpinComponent,\n  selectors: [[\"nz-spin\"]],\n  hostVars: 2,\n  hostBindings: function NzSpinComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-spin-nested-loading\", !ctx.nzSimple);\n    }\n  },\n  inputs: {\n    nzIndicator: \"nzIndicator\",\n    nzSize: \"nzSize\",\n    nzTip: \"nzTip\",\n    nzDelay: \"nzDelay\",\n    nzSimple: \"nzSimple\",\n    nzSpinning: \"nzSpinning\"\n  },\n  exportAs: [\"nzSpin\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 2,\n  consts: [[\"defaultTemplate\", \"\"], [4, \"ngIf\"], [\"class\", \"ant-spin-container\", 3, \"ant-spin-blur\", 4, \"ngIf\"], [1, \"ant-spin-dot\", \"ant-spin-dot-spin\"], [1, \"ant-spin-dot-item\"], [1, \"ant-spin\"], [3, \"ngTemplateOutlet\"], [\"class\", \"ant-spin-text\", 4, \"ngIf\"], [1, \"ant-spin-text\"], [1, \"ant-spin-container\"]],\n  template: function NzSpinComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzSpinComponent_ng_template_0_Template, 5, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NzSpinComponent_div_2_Template, 4, 10, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(3, NzSpinComponent_div_3_Template, 2, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.nzSimple);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nNzSpinComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNzSpinComponent.propDecorators = {\n  nzIndicator: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzTip: [{\n    type: Input\n  }],\n  nzDelay: [{\n    type: Input\n  }],\n  nzSimple: [{\n    type: Input\n  }],\n  nzSpinning: [{\n    type: Input\n  }]\n};\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), __metadata(\"design:type\", Object)], NzSpinComponent.prototype, \"nzIndicator\", void 0);\n\n__decorate([InputNumber(), __metadata(\"design:type\", Object)], NzSpinComponent.prototype, \"nzDelay\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSpinComponent.prototype, \"nzSimple\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSpinComponent.prototype, \"nzSpinning\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSpinComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-spin',\n      exportAs: 'nzSpin',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-template #defaultTemplate>\\n      <span class=\\\"ant-spin-dot ant-spin-dot-spin\\\">\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n        <i class=\\\"ant-spin-dot-item\\\"></i>\\n      </span>\\n    </ng-template>\\n    <div *ngIf=\\\"isLoading\\\">\\n      <div\\n        class=\\\"ant-spin\\\"\\n        [class.ant-spin-spinning]=\\\"isLoading\\\"\\n        [class.ant-spin-lg]=\\\"nzSize === 'large'\\\"\\n        [class.ant-spin-sm]=\\\"nzSize === 'small'\\\"\\n        [class.ant-spin-show-text]=\\\"nzTip\\\"\\n      >\\n        <ng-template [ngTemplateOutlet]=\\\"nzIndicator || defaultTemplate\\\"></ng-template>\\n        <div class=\\\"ant-spin-text\\\" *ngIf=\\\"nzTip\\\">{{ nzTip }}</div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!nzSimple\\\" class=\\\"ant-spin-container\\\" [class.ant-spin-blur]=\\\"isLoading\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      host: {\n        '[class.ant-spin-nested-loading]': '!nzSimple'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    nzIndicator: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzTip: [{\n      type: Input\n    }],\n    nzDelay: [{\n      type: Input\n    }],\n    nzSimple: [{\n      type: Input\n    }],\n    nzSpinning: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzSpinComponent.ngAcceptInputType_nzDelay;\n  /** @type {?} */\n\n  NzSpinComponent.ngAcceptInputType_nzSimple;\n  /** @type {?} */\n\n  NzSpinComponent.ngAcceptInputType_nzSpinning;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.nzIndicator;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.nzSize;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.nzTip;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.nzDelay;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.nzSimple;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.nzSpinning;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSpinComponent.prototype.destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSpinComponent.prototype.spinning$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSpinComponent.prototype.delay$;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.isLoading;\n  /** @type {?} */\n\n  NzSpinComponent.prototype.nzConfigService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSpinComponent.prototype.cdr;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: spin.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzSpinModule = /*#__PURE__*/_createClass(function NzSpinModule() {\n  _classCallCheck(this, NzSpinModule);\n});\n\nNzSpinModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzSpinModule\n});\nNzSpinModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzSpinModule_Factory(t) {\n    return new (t || NzSpinModule)();\n  },\n  imports: [[CommonModule, ObserversModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzSpinModule, {\n    declarations: function declarations() {\n      return [NzSpinComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, ObserversModule];\n    },\n    exports: function exports() {\n      return [NzSpinComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSpinModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSpinComponent],\n      declarations: [NzSpinComponent],\n      imports: [CommonModule, ObserversModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-spin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzSpinComponent, NzSpinModule };","map":{"version":3,"sources":["ng-zorro-antd/spin/spin.component.ts","ng-zorro-antd/spin/spin.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NumberInput, NzSafeAny, NzSizeLDSType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, InputNumber } from 'ng-zorro-antd/core/util';\n\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { debounceTime, flatMap, takeUntil } from 'rxjs/operators';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'spin';\n\n@Component({\n  selector: 'nz-spin',\n  exportAs: 'nzSpin',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ng-template #defaultTemplate>\n      <span class=\"ant-spin-dot ant-spin-dot-spin\">\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n        <i class=\"ant-spin-dot-item\"></i>\n      </span>\n    </ng-template>\n    <div *ngIf=\"isLoading\">\n      <div\n        class=\"ant-spin\"\n        [class.ant-spin-spinning]=\"isLoading\"\n        [class.ant-spin-lg]=\"nzSize === 'large'\"\n        [class.ant-spin-sm]=\"nzSize === 'small'\"\n        [class.ant-spin-show-text]=\"nzTip\"\n      >\n        <ng-template [ngTemplateOutlet]=\"nzIndicator || defaultTemplate\"></ng-template>\n        <div class=\"ant-spin-text\" *ngIf=\"nzTip\">{{ nzTip }}</div>\n      </div>\n    </div>\n    <div *ngIf=\"!nzSimple\" class=\"ant-spin-container\" [class.ant-spin-blur]=\"isLoading\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.ant-spin-nested-loading]': '!nzSimple'\n  }\n})\nexport class NzSpinComponent implements OnChanges, OnDestroy, OnInit {\n  static ngAcceptInputType_nzDelay: NumberInput;\n  static ngAcceptInputType_nzSimple: BooleanInput;\n  static ngAcceptInputType_nzSpinning: BooleanInput;\n\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzIndicator: TemplateRef<NzSafeAny> | null = null;\n  @Input() nzSize: NzSizeLDSType = 'default';\n  @Input() nzTip: string | null = null;\n  @Input() @InputNumber() nzDelay = 0;\n  @Input() @InputBoolean() nzSimple = false;\n  @Input() @InputBoolean() nzSpinning = true;\n  private destroy$ = new Subject<void>();\n  private spinning$ = new BehaviorSubject(this.nzSpinning);\n  private delay$ = new BehaviorSubject(this.nzDelay);\n  isLoading = true;\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    const loading$ = this.spinning$.pipe(\n      flatMap(() => this.delay$),\n      flatMap(delay => {\n        if (delay === 0) {\n          return this.spinning$;\n        } else {\n          return this.spinning$.pipe(debounceTime(delay));\n        }\n      }),\n      takeUntil(this.destroy$)\n    );\n    loading$.subscribe(loading => {\n      this.isLoading = loading;\n      this.cdr.markForCheck();\n    });\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.cdr.markForCheck());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzSpinning, nzDelay } = changes;\n    if (nzSpinning) {\n      this.spinning$.next(this.nzSpinning);\n    }\n    if (nzDelay) {\n      this.delay$.next(this.nzDelay);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzSpinComponent } from './spin.component';\n\n@NgModule({\n  exports: [NzSpinComponent],\n  declarations: [NzSpinComponent],\n  imports: [CommonModule, ObserversModule]\n})\nexport class NzSpinModule {}\n"]},"metadata":{},"sourceType":"module"}