{"ast":null,"code":"import _assertThisInitialized from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { __decorate, __metadata, __rest } from 'tslib';\nimport { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { OverlayConfig, Overlay, OverlayKeyboardDispatcher, OverlayModule } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { EventEmitter, TemplateRef, Type, Component, ChangeDetectionStrategy, Optional, Inject, Renderer2, Injector, ChangeDetectorRef, ViewContainerRef, Input, Output, ViewChild, NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { toCssPixel, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * @fileoverview added by tsickle\n * Generated from: drawer-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * @abstract\n * @template T, R\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc5 from '@angular/common';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc8 from 'ng-zorro-antd/icon';\nvar _c0 = [\"drawerTemplate\"];\n\nfunction NzDrawerComponent_ng_template_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function NzDrawerComponent_ng_template_0_div_1_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.maskClick();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r2.nzMaskStyle);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"div\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(4);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r11.nzTitle, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_div_1_ng_container_1_Template, 2, 1, \"ng-container\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r9.nzTitle);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NzDrawerComponent_ng_template_0_div_5_button_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r12.closeClick();\n    });\n    ɵngcc0.ɵɵelement(1, \"i\", 16);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_5_div_1_Template, 2, 1, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(2, NzDrawerComponent_ng_template_0_div_5_button_2_Template, 2, 0, \"button\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-drawer-header\", !!ctx_r3.nzTitle)(\"ant-drawer-header-no-title\", !ctx_r3.nzTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.nzTitle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.nzClosable);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_template_7_Template(rf, ctx) {}\n\nfunction NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_ng_container_8_ng_container_1_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.nzContent)(\"ngTemplateOutletContext\", ctx_r5.templateContext);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_ng_content_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngIf\", \"!nzContent\"]);\n  }\n}\n\nfunction NzDrawerComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NzDrawerComponent_ng_template_0_div_1_Template, 1, 1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(5, NzDrawerComponent_ng_template_0_div_5_Template, 3, 6, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(7, NzDrawerComponent_ng_template_0_ng_template_7_Template, 0, 0, \"ng-template\", 7);\n    ɵngcc0.ɵɵtemplate(8, NzDrawerComponent_ng_template_0_ng_container_8_Template, 2, 2, \"ng-container\", 8);\n    ɵngcc0.ɵɵtemplate(9, NzDrawerComponent_ng_template_0_ng_content_9_Template, 1, 0, \"ng-content\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"transform\", ctx_r1.offsetTransform)(\"transition\", ctx_r1.placementChanging ? \"none\" : null)(\"z-index\", ctx_r1.nzZIndex);\n    ɵngcc0.ɵɵclassProp(\"ant-drawer-open\", ctx_r1.isOpen)(\"no-mask\", !ctx_r1.nzMask)(\"ant-drawer-top\", ctx_r1.nzPlacement === \"top\")(\"ant-drawer-bottom\", ctx_r1.nzPlacement === \"bottom\")(\"ant-drawer-right\", ctx_r1.nzPlacement === \"right\")(\"ant-drawer-left\", ctx_r1.nzPlacement === \"left\");\n    ɵngcc0.ɵɵproperty(\"nzNoAnimation\", ctx_r1.nzNoAnimation);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzMask);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"ant-drawer-content-wrapper \", ctx_r1.nzWrapClassName, \"\");\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r1.width)(\"height\", ctx_r1.height)(\"transform\", ctx_r1.transform)(\"transition\", ctx_r1.placementChanging ? \"none\" : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r1.isLeftOrRight ? \"100%\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.nzTitle || ctx_r1.nzClosable);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1.nzBodyStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isTemplateRef(ctx_r1.nzContent));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.nzContent);\n  }\n}\n\nvar _c1 = [\"*\"];\n\nvar NzDrawerRef = /*#__PURE__*/_createClass(function NzDrawerRef() {\n  _classCallCheck(this, NzDrawerRef);\n});\n\nif (false) {\n  /** @type {?} */\n  NzDrawerRef.prototype.afterClose;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.afterOpen;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzClosable;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzNoAnimation;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzMaskClosable;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzKeyboard;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzMask;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzTitle;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzPlacement;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzMaskStyle;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzBodyStyle;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzWrapClassName;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzWidth;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzHeight;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzZIndex;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzOffsetX;\n  /** @type {?} */\n\n  NzDrawerRef.prototype.nzOffsetY;\n  /**\n   * @abstract\n   * @param {?=} result\n   * @return {?}\n   */\n\n  NzDrawerRef.prototype.close = function (result) {};\n  /**\n   * @abstract\n   * @return {?}\n   */\n\n\n  NzDrawerRef.prototype.open = function () {};\n  /**\n   * @abstract\n   * @return {?}\n   */\n\n\n  NzDrawerRef.prototype.getContentComponent = function () {};\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: drawer.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar DRAWER_ANIMATE_DURATION = 300;\n/** @type {?} */\n\nvar NZ_CONFIG_COMPONENT_NAME = 'drawer';\n/**\n * @template T, R, D\n */\n\nvar NzDrawerComponent = /*#__PURE__*/function (_NzDrawerRef) {\n  _inherits(NzDrawerComponent, _NzDrawerRef);\n\n  var _super = _createSuper(NzDrawerComponent);\n\n  /**\n   * @param {?} document\n   * @param {?} nzConfigService\n   * @param {?} renderer\n   * @param {?} overlay\n   * @param {?} injector\n   * @param {?} changeDetectorRef\n   * @param {?} focusTrapFactory\n   * @param {?} viewContainerRef\n   * @param {?} overlayKeyboardDispatcher\n   */\n  function NzDrawerComponent(document, nzConfigService, renderer, overlay, injector, changeDetectorRef, focusTrapFactory, viewContainerRef, overlayKeyboardDispatcher) {\n    var _this;\n\n    _classCallCheck(this, NzDrawerComponent);\n\n    _this = _super.call(this);\n    _this.document = document;\n    _this.nzConfigService = nzConfigService;\n    _this.renderer = renderer;\n    _this.overlay = overlay;\n    _this.injector = injector;\n    _this.changeDetectorRef = changeDetectorRef;\n    _this.focusTrapFactory = focusTrapFactory;\n    _this.viewContainerRef = viewContainerRef;\n    _this.overlayKeyboardDispatcher = overlayKeyboardDispatcher;\n    _this.nzClosable = true;\n    _this.nzMaskClosable = true;\n    _this.nzMask = true;\n    _this.nzCloseOnNavigation = true;\n    _this.nzNoAnimation = false;\n    _this.nzKeyboard = true;\n    _this.nzPlacement = 'right';\n    _this.nzMaskStyle = {};\n    _this.nzBodyStyle = {};\n    _this.nzWidth = 256;\n    _this.nzHeight = 256;\n    _this.nzZIndex = 1000;\n    _this.nzOffsetX = 0;\n    _this.nzOffsetY = 0;\n    _this.componentInstance = null;\n    _this.nzOnViewInit = new EventEmitter();\n    _this.nzOnClose = new EventEmitter();\n    _this.destroy$ = new Subject();\n    _this.placementChanging = false;\n    _this.placementChangeTimeoutId = -1;\n    _this.isOpen = false;\n    _this.templateContext = {\n      $implicit: undefined,\n      drawerRef:\n      /** @type {?} */\n      _assertThisInitialized(_this)\n    };\n    _this.nzAfterOpen = new Subject();\n    _this.nzAfterClose = new Subject();\n    return _this;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(NzDrawerComponent, [{\n    key: \"nzVisible\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this.isOpen;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this.isOpen = value;\n    }\n  }, {\n    key: \"offsetTransform\",\n    get: function get() {\n      if (!this.isOpen || this.nzOffsetX + this.nzOffsetY === 0) {\n        return null;\n      }\n\n      switch (this.nzPlacement) {\n        case 'left':\n          return \"translateX(\".concat(this.nzOffsetX, \"px)\");\n\n        case 'right':\n          return \"translateX(-\".concat(this.nzOffsetX, \"px)\");\n\n        case 'top':\n          return \"translateY(\".concat(this.nzOffsetY, \"px)\");\n\n        case 'bottom':\n          return \"translateY(-\".concat(this.nzOffsetY, \"px)\");\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"transform\",\n    get: function get() {\n      if (this.isOpen) {\n        return null;\n      }\n\n      switch (this.nzPlacement) {\n        case 'left':\n          return \"translateX(-100%)\";\n\n        case 'right':\n          return \"translateX(100%)\";\n\n        case 'top':\n          return \"translateY(-100%)\";\n\n        case 'bottom':\n          return \"translateY(100%)\";\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.isLeftOrRight ? toCssPixel(this.nzWidth) : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"height\",\n    get: function get() {\n      return !this.isLeftOrRight ? toCssPixel(this.nzHeight) : null;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isLeftOrRight\",\n    get: function get() {\n      return this.nzPlacement === 'left' || this.nzPlacement === 'right';\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"afterOpen\",\n    get: function get() {\n      return this.nzAfterOpen.asObservable();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"afterClose\",\n    get: function get() {\n      return this.nzAfterClose.asObservable();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"isTemplateRef\",\n    value: function isTemplateRef(value) {\n      return value instanceof TemplateRef;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.attachOverlay();\n      this.updateOverlayStyle();\n      this.updateBodyOverflow();\n      this.templateContext = {\n        $implicit: this.nzContentParams,\n        drawerRef:\n        /** @type {?} */\n        this\n      };\n      this.changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      this.attachBodyContent();\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this2.nzOnViewInit.emit();\n      });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzPlacement = changes.nzPlacement,\n          nzVisible = changes.nzVisible;\n\n      if (nzVisible) {\n        /** @type {?} */\n        var value = changes.nzVisible.currentValue;\n\n        if (value) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      if (nzPlacement && !nzPlacement.isFirstChange()) {\n        this.triggerPlacementChangeCycleOnce();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      clearTimeout(this.placementChangeTimeoutId);\n      this.disposeOverlay();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"getAnimationDuration\",\n    value: function getAnimationDuration() {\n      return this.nzNoAnimation ? 0 : DRAWER_ANIMATE_DURATION;\n    } // Disable the transition animation temporarily when the placement changing\n\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"triggerPlacementChangeCycleOnce\",\n    value: function triggerPlacementChangeCycleOnce() {\n      var _this3 = this;\n\n      if (!this.nzNoAnimation) {\n        this.placementChanging = true;\n        this.changeDetectorRef.markForCheck();\n        clearTimeout(this.placementChangeTimeoutId);\n        this.placementChangeTimeoutId = setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this3.placementChanging = false;\n\n          _this3.changeDetectorRef.markForCheck();\n        }, this.getAnimationDuration());\n      }\n    }\n    /**\n     * @param {?=} result\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(result) {\n      var _this4 = this;\n\n      this.isOpen = false;\n      this.updateOverlayStyle();\n      this.overlayKeyboardDispatcher.remove(\n      /** @type {?} */\n      this.overlayRef);\n      this.changeDetectorRef.detectChanges();\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this4.updateBodyOverflow();\n\n        _this4.restoreFocus();\n\n        _this4.nzAfterClose.next(result);\n\n        _this4.nzAfterClose.complete();\n\n        _this4.componentInstance = null;\n      }, this.getAnimationDuration());\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this5 = this;\n\n      this.attachOverlay();\n      this.isOpen = true;\n      this.overlayKeyboardDispatcher.add(\n      /** @type {?} */\n      this.overlayRef);\n      this.updateOverlayStyle();\n      this.updateBodyOverflow();\n      this.savePreviouslyFocusedElement();\n      this.trapFocus();\n      this.changeDetectorRef.detectChanges();\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this5.nzAfterOpen.next();\n      }, this.getAnimationDuration());\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getContentComponent\",\n    value: function getContentComponent() {\n      return this.componentInstance;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"closeClick\",\n    value: function closeClick() {\n      this.nzOnClose.emit();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"maskClick\",\n    value: function maskClick() {\n      if (this.nzMaskClosable && this.nzMask) {\n        this.nzOnClose.emit();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"attachBodyContent\",\n    value: function attachBodyContent() {\n      /** @type {?} */\n      this.bodyPortalOutlet.dispose();\n\n      if (this.nzContent instanceof Type) {\n        /** @type {?} */\n        var childInjector = new PortalInjector(this.injector, new WeakMap([[NzDrawerRef, this]]));\n        /** @type {?} */\n\n        var componentPortal = new ComponentPortal(this.nzContent, null, childInjector);\n        /** @type {?} */\n\n        var componentRef =\n        /** @type {?} */\n        this.bodyPortalOutlet.attachComponentPortal(componentPortal);\n        this.componentInstance = componentRef.instance;\n        Object.assign(componentRef.instance, this.nzContentParams);\n        componentRef.changeDetectorRef.detectChanges();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"attachOverlay\",\n    value: function attachOverlay() {\n      var _this6 = this;\n\n      if (!this.overlayRef) {\n        this.portal = new TemplatePortal(this.drawerTemplate, this.viewContainerRef);\n        this.overlayRef = this.overlay.create(this.getOverlayConfig());\n      }\n\n      if (this.overlayRef && !this.overlayRef.hasAttached()) {\n        this.overlayRef.attach(this.portal);\n\n        /** @type {?} */\n        this.overlayRef.keydownEvents().pipe(takeUntil(this.destroy$)).subscribe(\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        function (event) {\n          if (event.keyCode === ESCAPE && _this6.isOpen && _this6.nzKeyboard) {\n            _this6.nzOnClose.emit();\n          }\n        });\n        this.overlayRef.detachments().pipe(takeUntil(this.destroy$)).subscribe(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this6.disposeOverlay();\n        });\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"disposeOverlay\",\n    value: function disposeOverlay() {\n      var _a;\n\n      (_a = this.overlayRef) === null || _a === void 0 ? void 0 : _a.dispose();\n      this.overlayRef = null;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"getOverlayConfig\",\n    value: function getOverlayConfig() {\n      return new OverlayConfig({\n        disposeOnNavigation: this.nzCloseOnNavigation,\n        positionStrategy: this.overlay.position().global(),\n        scrollStrategy: this.overlay.scrollStrategies.block()\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateOverlayStyle\",\n    value: function updateOverlayStyle() {\n      if (this.overlayRef && this.overlayRef.overlayElement) {\n        this.renderer.setStyle(this.overlayRef.overlayElement, 'pointer-events', this.isOpen ? 'auto' : 'none');\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateBodyOverflow\",\n    value: function updateBodyOverflow() {\n      if (this.overlayRef) {\n        if (this.isOpen) {\n          /** @type {?} */\n          this.overlayRef.getConfig().scrollStrategy.enable();\n        } else {\n          /** @type {?} */\n          this.overlayRef.getConfig().scrollStrategy.disable();\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"savePreviouslyFocusedElement\",\n    value: function savePreviouslyFocusedElement() {\n      if (this.document && !this.previouslyFocusedElement) {\n        this.previouslyFocusedElement =\n        /** @type {?} */\n        this.document.activeElement; // We need the extra check, because IE's svg element has no blur method.\n\n        if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.blur === 'function') {\n          this.previouslyFocusedElement.blur();\n        }\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"trapFocus\",\n    value: function trapFocus() {\n      if (!this.focusTrap && this.overlayRef && this.overlayRef.overlayElement) {\n        this.focusTrap = this.focusTrapFactory.create(\n        /** @type {?} */\n        this.overlayRef.overlayElement);\n        this.focusTrap.focusInitialElement();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"restoreFocus\",\n    value: function restoreFocus() {\n      // We need the extra check, because IE can set the `activeElement` to null in some cases.\n      if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\n        this.previouslyFocusedElement.focus();\n      }\n\n      if (this.focusTrap) {\n        this.focusTrap.destroy();\n      }\n    }\n  }]);\n\n  return NzDrawerComponent;\n}(NzDrawerRef);\n\nNzDrawerComponent.ɵfac = function NzDrawerComponent_Factory(t) {\n  return new (t || NzDrawerComponent)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ConfigurableFocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OverlayKeyboardDispatcher));\n};\n\nNzDrawerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzDrawerComponent,\n  selectors: [[\"nz-drawer\"]],\n  viewQuery: function NzDrawerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n      ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.drawerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.bodyPortalOutlet = _t.first);\n    }\n  },\n  inputs: {\n    nzClosable: \"nzClosable\",\n    nzMaskClosable: \"nzMaskClosable\",\n    nzMask: \"nzMask\",\n    nzCloseOnNavigation: \"nzCloseOnNavigation\",\n    nzNoAnimation: \"nzNoAnimation\",\n    nzKeyboard: \"nzKeyboard\",\n    nzPlacement: \"nzPlacement\",\n    nzMaskStyle: \"nzMaskStyle\",\n    nzBodyStyle: \"nzBodyStyle\",\n    nzWidth: \"nzWidth\",\n    nzHeight: \"nzHeight\",\n    nzZIndex: \"nzZIndex\",\n    nzOffsetX: \"nzOffsetX\",\n    nzOffsetY: \"nzOffsetY\",\n    nzVisible: \"nzVisible\",\n    nzContent: \"nzContent\",\n    nzTitle: \"nzTitle\",\n    nzWrapClassName: \"nzWrapClassName\"\n  },\n  outputs: {\n    nzOnViewInit: \"nzOnViewInit\",\n    nzOnClose: \"nzOnClose\"\n  },\n  exportAs: [\"nzDrawer\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 0,\n  consts: [[\"drawerTemplate\", \"\"], [1, \"ant-drawer\", 3, \"nzNoAnimation\"], [\"class\", \"ant-drawer-mask\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [1, \"ant-drawer-content\"], [1, \"ant-drawer-wrapper-body\"], [3, \"ant-drawer-header\", \"ant-drawer-header-no-title\", 4, \"ngIf\"], [1, \"ant-drawer-body\", 3, \"ngStyle\"], [\"cdkPortalOutlet\", \"\"], [4, \"ngIf\"], [1, \"ant-drawer-mask\", 3, \"ngStyle\", \"click\"], [\"class\", \"ant-drawer-title\", 4, \"ngIf\"], [\"aria-label\", \"Close\", \"class\", \"ant-drawer-close\", \"style\", \"--scroll-bar: 0px;\", 3, \"click\", 4, \"ngIf\"], [1, \"ant-drawer-title\"], [4, \"nzStringTemplateOutlet\"], [3, \"innerHTML\"], [\"aria-label\", \"Close\", 1, \"ant-drawer-close\", 2, \"--scroll-bar\", \"0px\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"close\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NzDrawerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzDrawerComponent_ng_template_0_Template, 10, 37, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n  },\n  directives: [ɵngcc4.NzNoAnimationDirective, ɵngcc5.NgIf, ɵngcc5.NgStyle, ɵngcc6.CdkPortalOutlet, ɵngcc7.NzStringTemplateOutletDirective, ɵngcc8.NzIconDirective, ɵngcc5.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzDrawerComponent.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NzConfigService\n  }, {\n    type: Renderer2\n  }, {\n    type: Overlay\n  }, {\n    type: Injector\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ConfigurableFocusTrapFactory\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: OverlayKeyboardDispatcher\n  }];\n};\n\nNzDrawerComponent.propDecorators = {\n  nzContent: [{\n    type: Input\n  }],\n  nzClosable: [{\n    type: Input\n  }],\n  nzMaskClosable: [{\n    type: Input\n  }],\n  nzMask: [{\n    type: Input\n  }],\n  nzCloseOnNavigation: [{\n    type: Input\n  }],\n  nzNoAnimation: [{\n    type: Input\n  }],\n  nzKeyboard: [{\n    type: Input\n  }],\n  nzTitle: [{\n    type: Input\n  }],\n  nzPlacement: [{\n    type: Input\n  }],\n  nzMaskStyle: [{\n    type: Input\n  }],\n  nzBodyStyle: [{\n    type: Input\n  }],\n  nzWrapClassName: [{\n    type: Input\n  }],\n  nzWidth: [{\n    type: Input\n  }],\n  nzHeight: [{\n    type: Input\n  }],\n  nzZIndex: [{\n    type: Input\n  }],\n  nzOffsetX: [{\n    type: Input\n  }],\n  nzOffsetY: [{\n    type: Input\n  }],\n  nzVisible: [{\n    type: Input\n  }],\n  nzOnViewInit: [{\n    type: Output\n  }],\n  nzOnClose: [{\n    type: Output\n  }],\n  drawerTemplate: [{\n    type: ViewChild,\n    args: ['drawerTemplate', {\n      static: true\n    }]\n  }],\n  bodyPortalOutlet: [{\n    type: ViewChild,\n    args: [CdkPortalOutlet, {\n      static: false\n    }]\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzDrawerComponent.prototype, \"nzClosable\", void 0);\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), InputBoolean(), __metadata(\"design:type\", Boolean)], NzDrawerComponent.prototype, \"nzMaskClosable\", void 0);\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), InputBoolean(), __metadata(\"design:type\", Boolean)], NzDrawerComponent.prototype, \"nzMask\", void 0);\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), InputBoolean(), __metadata(\"design:type\", Boolean)], NzDrawerComponent.prototype, \"nzCloseOnNavigation\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzDrawerComponent.prototype, \"nzNoAnimation\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzDrawerComponent.prototype, \"nzKeyboard\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDrawerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-drawer',\n      exportAs: 'nzDrawer',\n      template: \"\\n    <ng-template #drawerTemplate>\\n      <div\\n        class=\\\"ant-drawer\\\"\\n        [nzNoAnimation]=\\\"nzNoAnimation\\\"\\n        [class.ant-drawer-open]=\\\"isOpen\\\"\\n        [class.no-mask]=\\\"!nzMask\\\"\\n        [class.ant-drawer-top]=\\\"nzPlacement === 'top'\\\"\\n        [class.ant-drawer-bottom]=\\\"nzPlacement === 'bottom'\\\"\\n        [class.ant-drawer-right]=\\\"nzPlacement === 'right'\\\"\\n        [class.ant-drawer-left]=\\\"nzPlacement === 'left'\\\"\\n        [style.transform]=\\\"offsetTransform\\\"\\n        [style.transition]=\\\"placementChanging ? 'none' : null\\\"\\n        [style.zIndex]=\\\"nzZIndex\\\"\\n      >\\n        <div class=\\\"ant-drawer-mask\\\" (click)=\\\"maskClick()\\\" *ngIf=\\\"nzMask\\\" [ngStyle]=\\\"nzMaskStyle\\\"></div>\\n        <div\\n          class=\\\"ant-drawer-content-wrapper {{ nzWrapClassName }}\\\"\\n          [style.width]=\\\"width\\\"\\n          [style.height]=\\\"height\\\"\\n          [style.transform]=\\\"transform\\\"\\n          [style.transition]=\\\"placementChanging ? 'none' : null\\\"\\n        >\\n          <div class=\\\"ant-drawer-content\\\">\\n            <div class=\\\"ant-drawer-wrapper-body\\\" [style.height]=\\\"isLeftOrRight ? '100%' : null\\\">\\n              <div *ngIf=\\\"nzTitle || nzClosable\\\" [class.ant-drawer-header]=\\\"!!nzTitle\\\" [class.ant-drawer-header-no-title]=\\\"!nzTitle\\\">\\n                <div *ngIf=\\\"nzTitle\\\" class=\\\"ant-drawer-title\\\">\\n                  <ng-container *nzStringTemplateOutlet=\\\"nzTitle\\\"><div [innerHTML]=\\\"nzTitle\\\"></div></ng-container>\\n                </div>\\n                <button *ngIf=\\\"nzClosable\\\" (click)=\\\"closeClick()\\\" aria-label=\\\"Close\\\" class=\\\"ant-drawer-close\\\" style=\\\"--scroll-bar: 0px;\\\">\\n                  <i nz-icon nzType=\\\"close\\\"></i>\\n                </button>\\n              </div>\\n              <div class=\\\"ant-drawer-body\\\" [ngStyle]=\\\"nzBodyStyle\\\">\\n                <ng-template cdkPortalOutlet></ng-template>\\n                <ng-container *ngIf=\\\"isTemplateRef(nzContent)\\\">\\n                  <ng-container *ngTemplateOutlet=\\\"$any(nzContent); context: templateContext\\\"></ng-container>\\n                </ng-container>\\n                <ng-content *ngIf=\\\"!nzContent\\\"></ng-content>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \",\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc2.Overlay\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc3.ConfigurableFocusTrapFactory\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc2.OverlayKeyboardDispatcher\n    }];\n  }, {\n    nzClosable: [{\n      type: Input\n    }],\n    nzMaskClosable: [{\n      type: Input\n    }],\n    nzMask: [{\n      type: Input\n    }],\n    nzCloseOnNavigation: [{\n      type: Input\n    }],\n    nzNoAnimation: [{\n      type: Input\n    }],\n    nzKeyboard: [{\n      type: Input\n    }],\n    nzPlacement: [{\n      type: Input\n    }],\n    nzMaskStyle: [{\n      type: Input\n    }],\n    nzBodyStyle: [{\n      type: Input\n    }],\n    nzWidth: [{\n      type: Input\n    }],\n    nzHeight: [{\n      type: Input\n    }],\n    nzZIndex: [{\n      type: Input\n    }],\n    nzOffsetX: [{\n      type: Input\n    }],\n    nzOffsetY: [{\n      type: Input\n    }],\n    nzOnViewInit: [{\n      type: Output\n    }],\n    nzOnClose: [{\n      type: Output\n    }],\n    nzVisible: [{\n      type: Input\n    }],\n    nzContent: [{\n      type: Input\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzWrapClassName: [{\n      type: Input\n    }],\n    drawerTemplate: [{\n      type: ViewChild,\n      args: ['drawerTemplate', {\n        static: true\n      }]\n    }],\n    bodyPortalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzDrawerComponent.ngAcceptInputType_nzClosable;\n  /** @type {?} */\n\n  NzDrawerComponent.ngAcceptInputType_nzMaskClosable;\n  /** @type {?} */\n\n  NzDrawerComponent.ngAcceptInputType_nzMask;\n  /** @type {?} */\n\n  NzDrawerComponent.ngAcceptInputType_nzNoAnimation;\n  /** @type {?} */\n\n  NzDrawerComponent.ngAcceptInputType_nzKeyboard;\n  /** @type {?} */\n\n  NzDrawerComponent.ngAcceptInputType_nzCloseOnNavigation;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzContent;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzClosable;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzMaskClosable;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzMask;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzCloseOnNavigation;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzNoAnimation;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzKeyboard;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzTitle;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzPlacement;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzMaskStyle;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzBodyStyle;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzWrapClassName;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzWidth;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzHeight;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzZIndex;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzOffsetX;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzOffsetY;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.componentInstance;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzOnViewInit;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzOnClose;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.drawerTemplate;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.bodyPortalOutlet;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.destroy$;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.previouslyFocusedElement;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.placementChanging;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.placementChangeTimeoutId;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzContentParams;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.overlayRef;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.portal;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.focusTrap;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.isOpen;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.templateContext;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzAfterOpen;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzAfterClose;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.document;\n  /** @type {?} */\n\n  NzDrawerComponent.prototype.nzConfigService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.overlay;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.injector;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.changeDetectorRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.focusTrapFactory;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.viewContainerRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzDrawerComponent.prototype.overlayKeyboardDispatcher;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: drawer.service.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzDrawerServiceModule = /*#__PURE__*/_createClass(function NzDrawerServiceModule() {\n  _classCallCheck(this, NzDrawerServiceModule);\n});\n\nNzDrawerServiceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzDrawerServiceModule\n});\nNzDrawerServiceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzDrawerServiceModule_Factory(t) {\n    return new (t || NzDrawerServiceModule)();\n  }\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDrawerServiceModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: drawer.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzDrawerModule = /*#__PURE__*/_createClass(function NzDrawerModule() {\n  _classCallCheck(this, NzDrawerModule);\n});\n\nNzDrawerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzDrawerModule\n});\nNzDrawerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzDrawerModule_Factory(t) {\n    return new (t || NzDrawerModule)();\n  },\n  imports: [[CommonModule, OverlayModule, PortalModule, NzIconModule, NzOutletModule, NzNoAnimationModule, NzDrawerServiceModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzDrawerModule, {\n    declarations: function declarations() {\n      return [NzDrawerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, PortalModule, NzIconModule, NzOutletModule, NzNoAnimationModule, NzDrawerServiceModule];\n    },\n    exports: function exports() {\n      return [NzDrawerComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDrawerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, PortalModule, NzIconModule, NzOutletModule, NzNoAnimationModule, NzDrawerServiceModule],\n      exports: [NzDrawerComponent],\n      declarations: [NzDrawerComponent],\n      entryComponents: [NzDrawerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: drawer.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T, R\n */\n\n\nvar DrawerBuilderForService = /*#__PURE__*/function () {\n  /**\n   * @param {?} overlay\n   * @param {?} options\n   */\n  function DrawerBuilderForService(overlay, options) {\n    var _this7 = this;\n\n    _classCallCheck(this, DrawerBuilderForService);\n\n    this.overlay = overlay;\n    this.options = options;\n    this.unsubscribe$ = new Subject();\n    /**\n     * pick {\\@link NzDrawerOptions.nzOnCancel} and omit this option\n     */\n\n    var _a = this.options,\n        nzOnCancel = _a.nzOnCancel,\n        componentOption = __rest(_a, [\"nzOnCancel\"]);\n\n    this.overlayRef = this.overlay.create();\n    this.drawerRef = this.overlayRef.attach(new ComponentPortal(NzDrawerComponent)).instance;\n    this.updateOptions(componentOption); // Prevent repeatedly open drawer when tap focus element.\n\n    this.drawerRef.savePreviouslyFocusedElement();\n    this.drawerRef.nzOnViewInit.pipe(takeUntil(this.unsubscribe$)).subscribe(\n    /**\n    * @return {?}\n    */\n    function () {\n      /** @type {?} */\n      _this7.drawerRef.open();\n    });\n    this.drawerRef.nzOnClose.subscribe(\n    /**\n    * @return {?}\n    */\n    function () {\n      if (nzOnCancel) {\n        nzOnCancel().then(\n        /**\n        * @param {?} canClose\n        * @return {?}\n        */\n        function (canClose) {\n          if (canClose !== false) {\n            /** @type {?} */\n            _this7.drawerRef.close();\n          }\n        });\n      } else {\n        /** @type {?} */\n        _this7.drawerRef.close();\n      }\n    });\n    this.drawerRef.afterClose.pipe(takeUntil(this.unsubscribe$)).subscribe(\n    /**\n    * @return {?}\n    */\n    function () {\n      _this7.overlayRef.dispose();\n\n      _this7.drawerRef = null;\n\n      _this7.unsubscribe$.next();\n\n      _this7.unsubscribe$.complete();\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(DrawerBuilderForService, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      return (\n        /** @type {?} */\n        this.drawerRef\n      );\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions(options) {\n      Object.assign(\n      /** @type {?} */\n      this.drawerRef, options);\n    }\n  }]);\n\n  return DrawerBuilderForService;\n}();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  DrawerBuilderForService.prototype.drawerRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DrawerBuilderForService.prototype.overlayRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DrawerBuilderForService.prototype.unsubscribe$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DrawerBuilderForService.prototype.overlay;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DrawerBuilderForService.prototype.options;\n}\n\nvar NzDrawerService = /*#__PURE__*/function () {\n  /**\n   * @param {?} overlay\n   */\n  function NzDrawerService(overlay) {\n    _classCallCheck(this, NzDrawerService);\n\n    this.overlay = overlay;\n  }\n  /**\n   * @template T, D, R\n   * @param {?} options\n   * @return {?}\n   */\n\n\n  _createClass(NzDrawerService, [{\n    key: \"create\",\n    value: function create(options) {\n      return new DrawerBuilderForService(this.overlay, options).getInstance();\n    }\n  }]);\n\n  return NzDrawerService;\n}();\n\nNzDrawerService.ɵfac = function NzDrawerService_Factory(t) {\n  return new (t || NzDrawerService)(ɵngcc0.ɵɵinject(ɵngcc2.Overlay));\n};\n/** @nocollapse */\n\n\nNzDrawerService.ctorParameters = function () {\n  return [{\n    type: Overlay\n  }];\n};\n/** @nocollapse */\n\n\nNzDrawerService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzDrawerService_Factory() {\n    return new NzDrawerService(ɵɵinject(Overlay));\n  },\n  token: NzDrawerService,\n  providedIn: NzDrawerServiceModule\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzDrawerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: NzDrawerServiceModule\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc2.Overlay\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  NzDrawerService.prototype.overlay;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: drawer-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * @record\n * @template T, D\n */\n\n\nfunction NzDrawerOptionsOfComponent() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  NzDrawerOptionsOfComponent.prototype.nzClosable;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzMaskClosable;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzCloseOnNavigation;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzMask;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzKeyboard;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzNoAnimation;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzTitle;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzContent;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzContentParams;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzMaskStyle;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzBodyStyle;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzWrapClassName;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzWidth;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzHeight;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzPlacement;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzZIndex;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzOffsetX;\n  /** @type {?|undefined} */\n\n  NzDrawerOptionsOfComponent.prototype.nzOffsetY;\n}\n/**\n * @record\n * @template T, D\n */\n\n\nfunction NzDrawerOptions() {}\n\nif (false) {\n  /**\n   * @return {?}\n   */\n  NzDrawerOptions.prototype.nzOnCancel = function () {};\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { DRAWER_ANIMATE_DURATION, DrawerBuilderForService, NzDrawerComponent, NzDrawerModule, NzDrawerRef, NzDrawerService, NzDrawerServiceModule };","map":{"version":3,"sources":["ng-zorro-antd/drawer/drawer-ref.ts","ng-zorro-antd/drawer/drawer.component.ts","ng-zorro-antd/drawer/drawer.service.module.ts","ng-zorro-antd/drawer/drawer.module.ts","ng-zorro-antd/drawer/drawer.service.ts","ng-zorro-antd/drawer/drawer-options.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable } from 'rxjs';\nimport { NzDrawerPlacement } from './drawer-options';\n\nexport abstract class NzDrawerRef<T = NzSafeAny, R = NzSafeAny> {\n  abstract afterClose: Observable<R>;\n  abstract afterOpen: Observable<void>;\n  abstract close(result?: R): void;\n  abstract open(): void;\n  abstract getContentComponent(): T | null;\n\n  abstract nzClosable?: boolean;\n  abstract nzNoAnimation?: boolean;\n  abstract nzMaskClosable?: boolean;\n  abstract nzKeyboard?: boolean;\n  abstract nzMask?: boolean;\n  abstract nzTitle?: string | TemplateRef<{}>;\n  abstract nzPlacement?: NzDrawerPlacement;\n  abstract nzMaskStyle?: object;\n  abstract nzBodyStyle?: object;\n  abstract nzWrapClassName?: string;\n  abstract nzWidth?: number | string;\n  abstract nzHeight?: number | string;\n  abstract nzZIndex?: number | string;\n  abstract nzOffsetX?: number | string;\n  abstract nzOffsetY?: number | string;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ConfigurableFocusTrapFactory, FocusTrap } from '@angular/cdk/a11y';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { Overlay, OverlayConfig, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortalOutlet, ComponentPortal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, toCssPixel } from 'ng-zorro-antd/core/util';\n\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzDrawerOptionsOfComponent, NzDrawerPlacement } from './drawer-options';\nimport { NzDrawerRef } from './drawer-ref';\n\nexport const DRAWER_ANIMATE_DURATION = 300;\n\nconst NZ_CONFIG_COMPONENT_NAME = 'drawer';\n\n@Component({\n  selector: 'nz-drawer',\n  exportAs: 'nzDrawer',\n  template: `\n    <ng-template #drawerTemplate>\n      <div\n        class=\"ant-drawer\"\n        [nzNoAnimation]=\"nzNoAnimation\"\n        [class.ant-drawer-open]=\"isOpen\"\n        [class.no-mask]=\"!nzMask\"\n        [class.ant-drawer-top]=\"nzPlacement === 'top'\"\n        [class.ant-drawer-bottom]=\"nzPlacement === 'bottom'\"\n        [class.ant-drawer-right]=\"nzPlacement === 'right'\"\n        [class.ant-drawer-left]=\"nzPlacement === 'left'\"\n        [style.transform]=\"offsetTransform\"\n        [style.transition]=\"placementChanging ? 'none' : null\"\n        [style.zIndex]=\"nzZIndex\"\n      >\n        <div class=\"ant-drawer-mask\" (click)=\"maskClick()\" *ngIf=\"nzMask\" [ngStyle]=\"nzMaskStyle\"></div>\n        <div\n          class=\"ant-drawer-content-wrapper {{ nzWrapClassName }}\"\n          [style.width]=\"width\"\n          [style.height]=\"height\"\n          [style.transform]=\"transform\"\n          [style.transition]=\"placementChanging ? 'none' : null\"\n        >\n          <div class=\"ant-drawer-content\">\n            <div class=\"ant-drawer-wrapper-body\" [style.height]=\"isLeftOrRight ? '100%' : null\">\n              <div *ngIf=\"nzTitle || nzClosable\" [class.ant-drawer-header]=\"!!nzTitle\" [class.ant-drawer-header-no-title]=\"!nzTitle\">\n                <div *ngIf=\"nzTitle\" class=\"ant-drawer-title\">\n                  <ng-container *nzStringTemplateOutlet=\"nzTitle\"><div [innerHTML]=\"nzTitle\"></div></ng-container>\n                </div>\n                <button *ngIf=\"nzClosable\" (click)=\"closeClick()\" aria-label=\"Close\" class=\"ant-drawer-close\" style=\"--scroll-bar: 0px;\">\n                  <i nz-icon nzType=\"close\"></i>\n                </button>\n              </div>\n              <div class=\"ant-drawer-body\" [ngStyle]=\"nzBodyStyle\">\n                <ng-template cdkPortalOutlet></ng-template>\n                <ng-container *ngIf=\"isTemplateRef(nzContent)\">\n                  <ng-container *ngTemplateOutlet=\"$any(nzContent); context: templateContext\"></ng-container>\n                </ng-container>\n                <ng-content *ngIf=\"!nzContent\"></ng-content>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzDrawerComponent<T = NzSafeAny, R = NzSafeAny, D = NzSafeAny> extends NzDrawerRef<T, R>\n  implements OnInit, OnDestroy, AfterViewInit, OnChanges, NzDrawerOptionsOfComponent {\n  static ngAcceptInputType_nzClosable: BooleanInput;\n  static ngAcceptInputType_nzMaskClosable: BooleanInput;\n  static ngAcceptInputType_nzMask: BooleanInput;\n  static ngAcceptInputType_nzNoAnimation: BooleanInput;\n  static ngAcceptInputType_nzKeyboard: BooleanInput;\n  static ngAcceptInputType_nzCloseOnNavigation: BooleanInput;\n\n  @Input() nzContent!: TemplateRef<{ $implicit: D; drawerRef: NzDrawerRef<R> }> | Type<T>;\n  @Input() @InputBoolean() nzClosable: boolean = true;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMaskClosable: boolean = true;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMask: boolean = true;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzCloseOnNavigation: boolean = true;\n  @Input() @InputBoolean() nzNoAnimation = false;\n  @Input() @InputBoolean() nzKeyboard: boolean = true;\n  @Input() nzTitle?: string | TemplateRef<{}>;\n  @Input() nzPlacement: NzDrawerPlacement = 'right';\n  @Input() nzMaskStyle: NgStyleInterface = {};\n  @Input() nzBodyStyle: NgStyleInterface = {};\n  @Input() nzWrapClassName?: string;\n  @Input() nzWidth: number | string = 256;\n  @Input() nzHeight: number | string = 256;\n  @Input() nzZIndex = 1000;\n  @Input() nzOffsetX = 0;\n  @Input() nzOffsetY = 0;\n  private componentInstance: T | null = null;\n\n  @Input()\n  set nzVisible(value: boolean) {\n    this.isOpen = value;\n  }\n\n  get nzVisible(): boolean {\n    return this.isOpen;\n  }\n\n  @Output() readonly nzOnViewInit = new EventEmitter<void>();\n  @Output() readonly nzOnClose = new EventEmitter<MouseEvent>();\n\n  @ViewChild('drawerTemplate', { static: true }) drawerTemplate!: TemplateRef<void>;\n  @ViewChild(CdkPortalOutlet, { static: false }) bodyPortalOutlet?: CdkPortalOutlet;\n\n  destroy$ = new Subject<void>();\n  previouslyFocusedElement?: HTMLElement;\n  placementChanging = false;\n  placementChangeTimeoutId = -1;\n  nzContentParams?: D; // only service\n  overlayRef?: OverlayRef | null;\n  portal?: TemplatePortal;\n  focusTrap?: FocusTrap;\n  isOpen = false;\n  templateContext: { $implicit: D | undefined; drawerRef: NzDrawerRef<R> } = {\n    $implicit: undefined,\n    drawerRef: this as NzDrawerRef<R>\n  };\n\n  get offsetTransform(): string | null {\n    if (!this.isOpen || this.nzOffsetX + this.nzOffsetY === 0) {\n      return null;\n    }\n    switch (this.nzPlacement) {\n      case 'left':\n        return `translateX(${this.nzOffsetX}px)`;\n      case 'right':\n        return `translateX(-${this.nzOffsetX}px)`;\n      case 'top':\n        return `translateY(${this.nzOffsetY}px)`;\n      case 'bottom':\n        return `translateY(-${this.nzOffsetY}px)`;\n    }\n  }\n\n  get transform(): string | null {\n    if (this.isOpen) {\n      return null;\n    }\n\n    switch (this.nzPlacement) {\n      case 'left':\n        return `translateX(-100%)`;\n      case 'right':\n        return `translateX(100%)`;\n      case 'top':\n        return `translateY(-100%)`;\n      case 'bottom':\n        return `translateY(100%)`;\n    }\n  }\n\n  get width(): string | null {\n    return this.isLeftOrRight ? toCssPixel(this.nzWidth) : null;\n  }\n\n  get height(): string | null {\n    return !this.isLeftOrRight ? toCssPixel(this.nzHeight) : null;\n  }\n\n  get isLeftOrRight(): boolean {\n    return this.nzPlacement === 'left' || this.nzPlacement === 'right';\n  }\n\n  nzAfterOpen = new Subject<void>();\n  nzAfterClose = new Subject<R>();\n\n  get afterOpen(): Observable<void> {\n    return this.nzAfterOpen.asObservable();\n  }\n\n  get afterClose(): Observable<R> {\n    return this.nzAfterClose.asObservable();\n  }\n\n  isTemplateRef(value: {}): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  constructor(\n    @Optional() @Inject(DOCUMENT) private document: NzSafeAny,\n    public nzConfigService: NzConfigService,\n    private renderer: Renderer2,\n    private overlay: Overlay,\n    private injector: Injector,\n    private changeDetectorRef: ChangeDetectorRef,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    private viewContainerRef: ViewContainerRef,\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.attachOverlay();\n    this.updateOverlayStyle();\n    this.updateBodyOverflow();\n    this.templateContext = { $implicit: this.nzContentParams, drawerRef: this as NzDrawerRef<R> };\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngAfterViewInit(): void {\n    this.attachBodyContent();\n    setTimeout(() => {\n      this.nzOnViewInit.emit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzPlacement, nzVisible } = changes;\n    if (nzVisible) {\n      const value = changes.nzVisible.currentValue;\n      if (value) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n    if (nzPlacement && !nzPlacement.isFirstChange()) {\n      this.triggerPlacementChangeCycleOnce();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    clearTimeout(this.placementChangeTimeoutId);\n    this.disposeOverlay();\n  }\n\n  private getAnimationDuration(): number {\n    return this.nzNoAnimation ? 0 : DRAWER_ANIMATE_DURATION;\n  }\n\n  // Disable the transition animation temporarily when the placement changing\n  private triggerPlacementChangeCycleOnce(): void {\n    if (!this.nzNoAnimation) {\n      this.placementChanging = true;\n      this.changeDetectorRef.markForCheck();\n      clearTimeout(this.placementChangeTimeoutId);\n      this.placementChangeTimeoutId = setTimeout(() => {\n        this.placementChanging = false;\n        this.changeDetectorRef.markForCheck();\n      }, this.getAnimationDuration());\n    }\n  }\n\n  close(result?: R): void {\n    this.isOpen = false;\n    this.updateOverlayStyle();\n    this.overlayKeyboardDispatcher.remove(this.overlayRef!);\n    this.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.updateBodyOverflow();\n      this.restoreFocus();\n      this.nzAfterClose.next(result);\n      this.nzAfterClose.complete();\n      this.componentInstance = null;\n    }, this.getAnimationDuration());\n  }\n\n  open(): void {\n    this.attachOverlay();\n    this.isOpen = true;\n    this.overlayKeyboardDispatcher.add(this.overlayRef!);\n    this.updateOverlayStyle();\n    this.updateBodyOverflow();\n    this.savePreviouslyFocusedElement();\n    this.trapFocus();\n    this.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.nzAfterOpen.next();\n    }, this.getAnimationDuration());\n  }\n\n  getContentComponent(): T | null {\n    return this.componentInstance;\n  }\n\n  closeClick(): void {\n    this.nzOnClose.emit();\n  }\n\n  maskClick(): void {\n    if (this.nzMaskClosable && this.nzMask) {\n      this.nzOnClose.emit();\n    }\n  }\n\n  private attachBodyContent(): void {\n    this.bodyPortalOutlet!.dispose();\n\n    if (this.nzContent instanceof Type) {\n      const childInjector = new PortalInjector(this.injector, new WeakMap([[NzDrawerRef, this]]));\n      const componentPortal = new ComponentPortal<T>(this.nzContent, null, childInjector);\n      const componentRef = this.bodyPortalOutlet!.attachComponentPortal(componentPortal);\n      this.componentInstance = componentRef.instance;\n      Object.assign(componentRef.instance, this.nzContentParams);\n      componentRef.changeDetectorRef.detectChanges();\n    }\n  }\n\n  private attachOverlay(): void {\n    if (!this.overlayRef) {\n      this.portal = new TemplatePortal(this.drawerTemplate, this.viewContainerRef);\n      this.overlayRef = this.overlay.create(this.getOverlayConfig());\n    }\n\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.overlayRef.attach(this.portal);\n      this.overlayRef!.keydownEvents()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((event: KeyboardEvent) => {\n          if (event.keyCode === ESCAPE && this.isOpen && this.nzKeyboard) {\n            this.nzOnClose.emit();\n          }\n        });\n      this.overlayRef\n        .detachments()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.disposeOverlay();\n        });\n    }\n  }\n\n  private disposeOverlay(): void {\n    this.overlayRef?.dispose();\n    this.overlayRef = null;\n  }\n\n  private getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      disposeOnNavigation: this.nzCloseOnNavigation,\n      positionStrategy: this.overlay.position().global(),\n      scrollStrategy: this.overlay.scrollStrategies.block()\n    });\n  }\n\n  private updateOverlayStyle(): void {\n    if (this.overlayRef && this.overlayRef.overlayElement) {\n      this.renderer.setStyle(this.overlayRef.overlayElement, 'pointer-events', this.isOpen ? 'auto' : 'none');\n    }\n  }\n\n  private updateBodyOverflow(): void {\n    if (this.overlayRef) {\n      if (this.isOpen) {\n        this.overlayRef.getConfig().scrollStrategy!.enable();\n      } else {\n        this.overlayRef.getConfig().scrollStrategy!.disable();\n      }\n    }\n  }\n\n  savePreviouslyFocusedElement(): void {\n    if (this.document && !this.previouslyFocusedElement) {\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\n      // We need the extra check, because IE's svg element has no blur method.\n      if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.blur === 'function') {\n        this.previouslyFocusedElement.blur();\n      }\n    }\n  }\n\n  private trapFocus(): void {\n    if (!this.focusTrap && this.overlayRef && this.overlayRef.overlayElement) {\n      this.focusTrap = this.focusTrapFactory.create(this.overlayRef!.overlayElement);\n      this.focusTrap.focusInitialElement();\n    }\n  }\n\n  private restoreFocus(): void {\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\n      this.previouslyFocusedElement.focus();\n    }\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzDrawerServiceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzDrawerComponent } from './drawer.component';\nimport { NzDrawerServiceModule } from './drawer.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule, NzIconModule, NzOutletModule, NzNoAnimationModule, NzDrawerServiceModule],\n  exports: [NzDrawerComponent],\n  declarations: [NzDrawerComponent],\n  entryComponents: [NzDrawerComponent]\n})\nexport class NzDrawerModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzDrawerOptions, NzDrawerOptionsOfComponent } from './drawer-options';\nimport { NzDrawerRef } from './drawer-ref';\nimport { NzDrawerComponent } from './drawer.component';\nimport { NzDrawerServiceModule } from './drawer.service.module';\n\nexport class DrawerBuilderForService<T, R> {\n  private drawerRef: NzDrawerComponent<T, R> | null;\n  private overlayRef: OverlayRef;\n  private unsubscribe$ = new Subject<void>();\n\n  constructor(private overlay: Overlay, private options: NzDrawerOptions) {\n    /** pick {@link NzDrawerOptions.nzOnCancel} and omit this option */\n    const { nzOnCancel, ...componentOption } = this.options;\n    this.overlayRef = this.overlay.create();\n    this.drawerRef = this.overlayRef.attach(new ComponentPortal(NzDrawerComponent)).instance;\n    this.updateOptions(componentOption);\n    // Prevent repeatedly open drawer when tap focus element.\n    this.drawerRef.savePreviouslyFocusedElement();\n    this.drawerRef.nzOnViewInit.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.drawerRef!.open();\n    });\n    this.drawerRef.nzOnClose.subscribe(() => {\n      if (nzOnCancel) {\n        nzOnCancel().then(canClose => {\n          if (canClose !== false) {\n            this.drawerRef!.close();\n          }\n        });\n      } else {\n        this.drawerRef!.close();\n      }\n    });\n\n    this.drawerRef.afterClose.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.overlayRef.dispose();\n      this.drawerRef = null;\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    });\n  }\n\n  getInstance(): NzDrawerRef<T, R> {\n    return this.drawerRef!;\n  }\n\n  updateOptions(options: NzDrawerOptionsOfComponent): void {\n    Object.assign(this.drawerRef!, options);\n  }\n}\n\n@Injectable({ providedIn: NzDrawerServiceModule })\nexport class NzDrawerService {\n  constructor(private overlay: Overlay) {}\n\n  create<T = NzSafeAny, D = undefined, R = NzSafeAny>(options: NzDrawerOptions<T, D extends undefined ? {} : D>): NzDrawerRef<T, R> {\n    return new DrawerBuilderForService<T, R>(this.overlay, options).getInstance();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef, Type } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDrawerRef } from './drawer-ref';\n\nexport type NzDrawerPlacement = 'left' | 'right' | 'top' | 'bottom';\n\nexport interface NzDrawerOptionsOfComponent<T = NzSafeAny, D = NzSafeAny> {\n  nzClosable?: boolean;\n  nzMaskClosable?: boolean;\n  nzCloseOnNavigation?: boolean;\n  nzMask?: boolean;\n  nzKeyboard?: boolean;\n  nzNoAnimation?: boolean;\n  nzTitle?: string | TemplateRef<{}>;\n  nzContent?: TemplateRef<{ $implicit: D; drawerRef: NzDrawerRef }> | Type<T>;\n  nzContentParams?: Partial<T & D>;\n  nzMaskStyle?: object;\n  nzBodyStyle?: object;\n  nzWrapClassName?: string;\n  nzWidth?: number | string;\n  nzHeight?: number | string;\n  nzPlacement?: NzDrawerPlacement;\n  nzZIndex?: number;\n  nzOffsetX?: number;\n  nzOffsetY?: number;\n}\n\nexport interface NzDrawerOptions<T = NzSafeAny, D = NzSafeAny> extends NzDrawerOptionsOfComponent<T, D> {\n  nzOnCancel?(): Promise<NzSafeAny>;\n}\n"]},"metadata":{},"sourceType":"module"}