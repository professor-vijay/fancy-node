{"ast":null,"code":"import _toConsumableArray from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, BACKSPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ElementRef, Renderer2, Input, Injectable, EventEmitter, forwardRef, Host, Optional, ViewChild, ViewChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { DEFAULT_CASCADER_POSITIONS, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { isNotNil, arraysEqual, toArray, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { CommonModule } from '@angular/common';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n/**\n * @fileoverview added by tsickle\n * Generated from: typings.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @deprecated Use the prefixed version.\n * @record\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/icon';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/highlight';\nimport * as ɵngcc4 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc6 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc9 from 'ng-zorro-antd/input';\nimport * as ɵngcc10 from '@angular/forms';\nimport * as ɵngcc11 from 'ng-zorro-antd/empty';\nvar _c0 = [\"nz-cascader-option\", \"\"];\n\nfunction NzCascaderOptionComponent_ng_container_0_ng_template_1_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction NzCascaderOptionComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzCascaderOptionComponent_ng_container_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.optionTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c1, ctx_r0.option, ctx_r0.columnIndex));\n  }\n}\n\nfunction NzCascaderOptionComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 4);\n    ɵngcc0.ɵɵpipe(1, \"nzHighlight\");\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind4(1, 1, ctx_r2.optionLabel, ctx_r2.highlightText, \"g\", \"ant-cascader-menu-item-keyword\"), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction NzCascaderOptionComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵelement(1, \"i\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r3.option.loading ? \"loading\" : \"right\");\n  }\n}\n\nvar _c2 = [\"input\"];\nvar _c3 = [\"menu\"];\n\nfunction NzCascaderComponent_div_3_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"i\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NzCascaderComponent_div_3_i_3_Template_i_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.clearSelection($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NzCascaderComponent_div_3_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-picker-arrow-expand\", ctx_r6.menuVisible);\n  }\n}\n\nfunction NzCascaderComponent_div_3_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 14);\n  }\n}\n\nfunction NzCascaderComponent_div_3_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.labelRenderText);\n  }\n}\n\nfunction NzCascaderComponent_div_3_ng_template_8_ng_template_0_Template(rf, ctx) {}\n\nfunction NzCascaderComponent_div_3_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzCascaderComponent_div_3_ng_template_8_ng_template_0_Template, 0, 0, \"ng-template\", 15);\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r10.nzLabelRender)(\"ngTemplateOutletContext\", ctx_r10.labelRenderContext);\n  }\n}\n\nfunction NzCascaderComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"input\", 4, 5);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzCascaderComponent_div_3_Template_input_ngModelChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.inputValue = $event;\n    })(\"blur\", function NzCascaderComponent_div_3_Template_input_blur_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.handleInputBlur();\n    })(\"focus\", function NzCascaderComponent_div_3_Template_input_focus_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.handleInputFocus();\n    })(\"change\", function NzCascaderComponent_div_3_Template_input_change_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NzCascaderComponent_div_3_i_3_Template, 1, 0, \"i\", 6);\n    ɵngcc0.ɵɵtemplate(4, NzCascaderComponent_div_3_i_4_Template, 1, 2, \"i\", 7);\n    ɵngcc0.ɵɵtemplate(5, NzCascaderComponent_div_3_i_5_Template, 1, 0, \"i\", 8);\n    ɵngcc0.ɵɵelementStart(6, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(7, NzCascaderComponent_div_3_ng_container_7_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵtemplate(8, NzCascaderComponent_div_3_ng_template_8_Template, 1, 2, \"ng-template\", null, 11, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r9 = ɵngcc0.ɵɵreference(9);\n\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-input-disabled\", ctx_r2.nzDisabled)(\"ant-cascader-input-lg\", ctx_r2.nzSize === \"large\")(\"ant-cascader-input-sm\", ctx_r2.nzSize === \"small\");\n    ɵngcc0.ɵɵproperty(\"readonly\", !ctx_r2.nzShowSearch)(\"disabled\", ctx_r2.nzDisabled)(\"nzSize\", ctx_r2.nzSize)(\"ngModel\", ctx_r2.inputValue);\n    ɵngcc0.ɵɵattribute(\"autoComplete\", \"off\")(\"placeholder\", ctx_r2.showPlaceholder ? ctx_r2.nzPlaceHolder || (ctx_r2.locale == null ? null : ctx_r2.locale.placeholder) : null)(\"autofocus\", ctx_r2.nzAutoFocus ? \"autofocus\" : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.clearIconVisible);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.nzShowArrow && !ctx_r2.isLoading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isLoading);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-show-search\", !!ctx_r2.nzShowSearch)(\"ant-focusd\", !!ctx_r2.nzShowSearch && ctx_r2.isFocused && !ctx_r2.inputValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.isLabelRenderTemplate)(\"ngIfElse\", _r9);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ul_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"li\", 21);\n    ɵngcc0.ɵɵelement(2, \"nz-embed-empty\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r20.dropdownWidthStyle)(\"height\", ctx_r20.dropdownHeightStyle);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"nzComponentName\", \"cascader\")(\"specificContent\", ctx_r20.nzNotFoundContent);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r30 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 26);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template_li_mouseenter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r30);\n      var option_r27 = ctx.$implicit;\n      var i_r25 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r28 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r28.onOptionMouseEnter(option_r27, i_r25, $event);\n    })(\"mouseleave\", function NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template_li_mouseleave_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r30);\n      var option_r27 = ctx.$implicit;\n      var i_r25 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r31 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r31.onOptionMouseLeave(option_r27, i_r25, $event);\n    })(\"click\", function NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template_li_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r30);\n      var option_r27 = ctx.$implicit;\n      var i_r25 = ɵngcc0.ɵɵnextContext().index;\n      var ctx_r33 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r33.onOptionClick(option_r27, i_r25, $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r27 = ctx.$implicit;\n    var i_r25 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r26 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"columnIndex\", i_r25)(\"nzLabelProperty\", ctx_r26.nzLabelProperty)(\"optionTemplate\", ctx_r26.nzOptionRender)(\"activated\", ctx_r26.isOptionActivated(option_r27, i_r25))(\"highlightText\", ctx_r26.inSearchingMode ? ctx_r26.inputValue : \"\")(\"option\", option_r27);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_3_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 24);\n    ɵngcc0.ɵɵtemplate(1, NzCascaderComponent_ng_template_5_ng_template_3_ul_0_li_1_Template, 1, 6, \"li\", 25);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var options_r24 = ctx.$implicit;\n    var ctx_r23 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r23.dropdownHeightStyle)(\"width\", ctx_r23.dropdownWidthStyle);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r23.menuColumnCls);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", options_r24);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzCascaderComponent_ng_template_5_ng_template_3_ul_0_Template, 2, 6, \"ul\", 23);\n  }\n\n  if (rf & 2) {\n    var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r22.cascaderService.columns);\n  }\n}\n\nfunction NzCascaderComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r37 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16, 17);\n    ɵngcc0.ɵɵlistener(\"mouseleave\", function NzCascaderComponent_ng_template_5_Template_div_mouseleave_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r37);\n      var ctx_r36 = ɵngcc0.ɵɵnextContext();\n      return ctx_r36.onTriggerMouseLeave($event);\n    });\n    ɵngcc0.ɵɵtemplate(2, NzCascaderComponent_ng_template_5_ul_2_Template, 3, 6, \"ul\", 18);\n    ɵngcc0.ɵɵtemplate(3, NzCascaderComponent_ng_template_5_ng_template_3_Template, 1, 1, \"ng-template\", null, 19, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r21 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ant-cascader-menus-hidden\", !ctx_r3.menuVisible);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.menuCls)(\"ngStyle\", ctx_r3.nzMenuStyle)(\"@.disabled\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r3.noAnimation == null ? null : ctx_r3.noAnimation.nzNoAnimation)(\"@slideMotion\", \"enter\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.shouldShowEmpty)(\"ngIfElse\", _r21);\n  }\n}\n\nvar _c4 = [\"*\"];\n\nfunction CascaderOption() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  CascaderOption.prototype.value;\n  /** @type {?|undefined} */\n\n  CascaderOption.prototype.label;\n  /** @type {?|undefined} */\n\n  CascaderOption.prototype.title;\n  /** @type {?|undefined} */\n\n  CascaderOption.prototype.disabled;\n  /** @type {?|undefined} */\n\n  CascaderOption.prototype.loading;\n  /** @type {?|undefined} */\n\n  CascaderOption.prototype.isLeaf;\n  /** @type {?|undefined} */\n\n  CascaderOption.prototype.parent;\n  /** @type {?|undefined} */\n\n  CascaderOption.prototype.children;\n  /* Skipping unhandled member: [key: string]: NzSafeAny;*/\n}\n/**\n * @deprecated Use the prefixed version.\n * @record\n */\n\n\nfunction CascaderSearchOption() {}\n\nif (false) {\n  /** @type {?} */\n  CascaderSearchOption.prototype.path;\n}\n/**\n * @record\n */\n\n\nfunction NzShowSearchOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  NzShowSearchOptions.prototype.filter;\n  /** @type {?|undefined} */\n\n  NzShowSearchOptions.prototype.sorter;\n}\n/**\n * @param {?} options\n * @return {?}\n */\n\n\nfunction isShowSearchObject(options) {\n  return typeof options !== 'boolean';\n}\n/**\n * To avoid circular dependency, provide an interface of `NzCascaderComponent`\n * for `NzCascaderService`.\n * @record\n */\n\n\nfunction NzCascaderComponentAsSource() {}\n\nif (false) {\n  /** @type {?} */\n  NzCascaderComponentAsSource.prototype.inputValue;\n  /** @type {?} */\n\n  NzCascaderComponentAsSource.prototype.nzShowSearch;\n  /** @type {?} */\n\n  NzCascaderComponentAsSource.prototype.nzLabelProperty;\n  /** @type {?} */\n\n  NzCascaderComponentAsSource.prototype.nzValueProperty;\n  /** @type {?} */\n\n  NzCascaderComponentAsSource.prototype.nzChangeOnSelect;\n  /**\n   * @param {?} option\n   * @param {?} level\n   * @return {?}\n   */\n\n  NzCascaderComponentAsSource.prototype.nzChangeOn = function (option, level) {};\n  /**\n   * @param {?} node\n   * @param {?} index\n   * @return {?}\n   */\n\n\n  NzCascaderComponentAsSource.prototype.nzLoadData = function (node, index) {};\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * @param {?} o\n * @return {?}\n */\n\n\nfunction isChildOption(o) {\n  return o.isLeaf || !o.children || !o.children.length;\n}\n/**\n * @param {?} o\n * @return {?}\n */\n\n\nfunction isParentOption(o) {\n  return !!o.children && !!o.children.length && !o.isLeaf;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: cascader-li.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzCascaderOptionComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} cdr\n   * @param {?} elementRef\n   * @param {?} renderer\n   */\n  function NzCascaderOptionComponent(cdr, elementRef, renderer) {\n    _classCallCheck(this, NzCascaderOptionComponent);\n\n    this.cdr = cdr;\n    this.optionTemplate = null;\n    this.activated = false;\n    this.nzLabelProperty = 'label';\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item');\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NzCascaderOptionComponent, [{\n    key: \"optionLabel\",\n    get: function get() {\n      return this.option[this.nzLabelProperty];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"markForCheck\",\n    value: function markForCheck() {\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzCascaderOptionComponent;\n}();\n\nNzCascaderOptionComponent.ɵfac = function NzCascaderOptionComponent_Factory(t) {\n  return new (t || NzCascaderOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNzCascaderOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzCascaderOptionComponent,\n  selectors: [[\"\", \"nz-cascader-option\", \"\"]],\n  hostVars: 7,\n  hostBindings: function NzCascaderOptionComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"title\", ctx.option.title || ctx.optionLabel);\n      ɵngcc0.ɵɵclassProp(\"ant-cascader-menu-item-active\", ctx.activated)(\"ant-cascader-menu-item-expand\", !ctx.option.isLeaf)(\"ant-cascader-menu-item-disabled\", ctx.option.disabled);\n    }\n  },\n  inputs: {\n    optionTemplate: \"optionTemplate\",\n    activated: \"activated\",\n    nzLabelProperty: \"nzLabelProperty\",\n    option: \"option\",\n    highlightText: \"highlightText\",\n    columnIndex: \"columnIndex\"\n  },\n  exportAs: [\"nzCascaderOption\"],\n  attrs: _c0,\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"defaultOptionTemplate\", \"\"], [\"class\", \"ant-cascader-menu-item-expand-icon\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"], [1, \"ant-cascader-menu-item-expand-icon\"], [\"nz-icon\", \"\", 3, \"nzType\"]],\n  template: function NzCascaderOptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzCascaderOptionComponent_ng_container_0_Template, 2, 5, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzCascaderOptionComponent_ng_template_1_Template, 2, 6, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(3, NzCascaderOptionComponent_span_3_Template, 2, 1, \"span\", 2);\n    }\n\n    if (rf & 2) {\n      var _r1 = ɵngcc0.ɵɵreference(2);\n\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optionTemplate)(\"ngIfElse\", _r1);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.option.isLeaf || (ctx.option.children == null ? null : ctx.option.children.length) || ctx.option.loading);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc2.NzIconDirective],\n  pipes: [ɵngcc3.NzHighlightPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzCascaderOptionComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nNzCascaderOptionComponent.propDecorators = {\n  optionTemplate: [{\n    type: Input\n  }],\n  option: [{\n    type: Input\n  }],\n  activated: [{\n    type: Input\n  }],\n  highlightText: [{\n    type: Input\n  }],\n  nzLabelProperty: [{\n    type: Input\n  }],\n  columnIndex: [{\n    type: Input\n  }]\n};\n\nif (false) {\n  /** @type {?} */\n  NzCascaderOptionComponent.prototype.optionTemplate;\n  /** @type {?} */\n\n  NzCascaderOptionComponent.prototype.option;\n  /** @type {?} */\n\n  NzCascaderOptionComponent.prototype.activated;\n  /** @type {?} */\n\n  NzCascaderOptionComponent.prototype.highlightText;\n  /** @type {?} */\n\n  NzCascaderOptionComponent.prototype.nzLabelProperty;\n  /** @type {?} */\n\n  NzCascaderOptionComponent.prototype.columnIndex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderOptionComponent.prototype.cdr;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: cascader.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * All data is stored and parsed in NzCascaderService.\n */\n\n\nvar NzCascaderService = /*#__PURE__*/function () {\n  function NzCascaderService() {\n    _classCallCheck(this, NzCascaderService);\n\n    /**\n     * Activated options in each column.\n     */\n    this.activatedOptions = [];\n    /**\n     * An array to store cascader items arranged in different layers.\n     */\n\n    this.columns = [];\n    /**\n     * If user has entered searching mode.\n     */\n\n    this.inSearchingMode = false;\n    /**\n     * Selected options would be output to user.\n     */\n\n    this.selectedOptions = [];\n    this.values = [];\n    this.$loading = new BehaviorSubject(false);\n    /**\n     * Emit an event to notify cascader it needs to redraw because activated or\n     * selected options are changed.\n     */\n\n    this.$redraw = new Subject();\n    /**\n     * Emit an event when an option gets selected.\n     * Emit true if a leaf options is selected.\n     */\n\n    this.$optionSelected = new Subject();\n    /**\n     * Emit an event to notify cascader it needs to quit searching mode.\n     * Only emit when user do select a searching option.\n     */\n\n    this.$quitSearching = new Subject();\n    /**\n     * To hold columns before entering searching mode.\n     */\n\n    this.columnsSnapshot = [[]];\n    /**\n     * To hold activated options before entering searching mode.\n     */\n\n    this.activatedOptionsSnapshot = [];\n  }\n  /**\n   * Return cascader options in the first layer.\n   * @return {?}\n   */\n\n\n  _createClass(NzCascaderService, [{\n    key: \"nzOptions\",\n    get: function get() {\n      return this.columns[0];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.$redraw.complete();\n      this.$quitSearching.complete();\n      this.$optionSelected.complete();\n      this.$loading.complete();\n    }\n    /**\n     * Make sure that value matches what is displayed in the dropdown.\n     * @param {?=} first\n     * @return {?}\n     */\n\n  }, {\n    key: \"syncOptions\",\n    value: function syncOptions() {\n      var _this = this;\n\n      var first = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      /** @type {?} */\n      var values = this.values;\n      /** @type {?} */\n\n      var hasValue = values && values.length;\n      /** @type {?} */\n\n      var lastColumnIndex = values.length - 1;\n      /** @type {?} */\n\n      var initColumnWithIndex =\n      /**\n      * @param {?} columnIndex\n      * @return {?}\n      */\n      function initColumnWithIndex(columnIndex) {\n        /** @type {?} */\n        var activatedOptionSetter =\n        /**\n        * @return {?}\n        */\n        function activatedOptionSetter() {\n          var _ref;\n\n          /** @type {?} */\n          var currentValue = values[columnIndex];\n\n          if (!isNotNil(currentValue)) {\n            _this.$redraw.next();\n\n            return;\n          }\n          /** @type {?} */\n\n\n          var option = _this.findOptionWithValue(columnIndex, values[columnIndex]) || (typeof currentValue === 'object' ? currentValue : (_ref = {}, _defineProperty(_ref, \"\".concat(_this.cascaderComponent.nzValueProperty), currentValue), _defineProperty(_ref, \"\".concat(_this.cascaderComponent.nzLabelProperty), currentValue), _ref));\n\n          _this.setOptionActivated(option, columnIndex, false, false);\n\n          if (columnIndex < lastColumnIndex) {\n            initColumnWithIndex(columnIndex + 1);\n          } else {\n            _this.dropBehindColumns(columnIndex);\n\n            _this.selectedOptions = _toConsumableArray(_this.activatedOptions);\n\n            _this.$redraw.next();\n          }\n        };\n\n        if (_this.isLoaded(columnIndex) || !_this.cascaderComponent.nzLoadData) {\n          activatedOptionSetter();\n        } else {\n          /** @type {?} */\n          var option = _this.activatedOptions[columnIndex - 1] || {};\n\n          _this.loadChildren(option, columnIndex - 1, activatedOptionSetter);\n        }\n      };\n\n      this.activatedOptions = [];\n      this.selectedOptions = [];\n\n      if (first && this.cascaderComponent.nzLoadData && !hasValue) {\n        // Should also notify the component that value changes. Fix #3480.\n        this.$redraw.next();\n        return;\n      } else {\n        initColumnWithIndex(0);\n      }\n    }\n    /**\n     * Bind cascader component so this service could use inputs.\n     * @param {?} cascaderComponent\n     * @return {?}\n     */\n\n  }, {\n    key: \"withComponent\",\n    value: function withComponent(cascaderComponent) {\n      this.cascaderComponent = cascaderComponent;\n    }\n    /**\n     * Reset all options. Rebuild searching options if in searching mode.\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      this.columnsSnapshot = this.columns = options && options.length ? [options] : [];\n\n      if (this.inSearchingMode) {\n        this.prepareSearchOptions(this.cascaderComponent.inputValue);\n      } else if (this.columns.length) {\n        this.syncOptions();\n      }\n    }\n    /**\n     * Try to set a option as activated.\n     * @param {?} option Cascader option\n     * @param {?} columnIndex Of which column this option is in\n     * @param {?=} performSelect Select\n     * @param {?=} loadingChildren Try to load children asynchronously.\n     * @return {?}\n     */\n\n  }, {\n    key: \"setOptionActivated\",\n    value: function setOptionActivated(option, columnIndex) {\n      var performSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var loadingChildren = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n      if (option.disabled) {\n        return;\n      }\n\n      this.activatedOptions[columnIndex] = option;\n      this.trackAncestorActivatedOptions(columnIndex);\n      this.dropBehindActivatedOptions(columnIndex);\n      /** @type {?} */\n\n      var isParent = isParentOption(option);\n\n      if (isParent) {\n        // Parent option that has children.\n        this.setColumnData(\n        /** @type {?} */\n        option.children, columnIndex + 1, option);\n      } else if (!option.isLeaf && loadingChildren) {\n        // Parent option that should try to load children asynchronously.\n        this.loadChildren(option, columnIndex);\n      } else if (option.isLeaf) {\n        // Leaf option.\n        this.dropBehindColumns(columnIndex);\n      } // Actually perform selection to make an options not only activated but also selected.\n\n\n      if (performSelect) {\n        this.setOptionSelected(option, columnIndex);\n      }\n\n      this.$redraw.next();\n    }\n    /**\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"setOptionSelected\",\n    value: function setOptionSelected(option, index) {\n      /** @type {?} */\n      var changeOn = this.cascaderComponent.nzChangeOn;\n      /** @type {?} */\n\n      var shouldPerformSelection =\n      /**\n      * @param {?} o\n      * @param {?} i\n      * @return {?}\n      */\n      function shouldPerformSelection(o, i) {\n        return typeof changeOn === 'function' ? changeOn(o, i) : false;\n      };\n\n      if (option.isLeaf || this.cascaderComponent.nzChangeOnSelect || shouldPerformSelection(option, index)) {\n        this.selectedOptions = _toConsumableArray(this.activatedOptions);\n        this.prepareEmitValue();\n        this.$redraw.next();\n        this.$optionSelected.next({\n          option: option,\n          index: index\n        });\n      }\n    }\n    /**\n     * @param {?} column\n     * @return {?}\n     */\n\n  }, {\n    key: \"setOptionDeactivatedSinceColumn\",\n    value: function setOptionDeactivatedSinceColumn(column) {\n      this.dropBehindActivatedOptions(column - 1);\n      this.dropBehindColumns(column);\n      this.$redraw.next();\n    }\n    /**\n     * Set a searching option as selected, finishing up things.\n     * @param {?} option\n     * @return {?}\n     */\n\n  }, {\n    key: \"setSearchOptionSelected\",\n    value: function setSearchOptionSelected(option) {\n      var _this2 = this;\n\n      this.activatedOptions = [option];\n      this.selectedOptions = _toConsumableArray(option.path);\n      this.prepareEmitValue();\n      this.$redraw.next();\n      this.$optionSelected.next({\n        option: option,\n        index: 0\n      });\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        // Reset data and tell UI only to remove input and reset dropdown width style.\n        _this2.$quitSearching.next();\n\n        _this2.$redraw.next();\n\n        _this2.inSearchingMode = false;\n        _this2.columns = _toConsumableArray(_this2.columnsSnapshot);\n        _this2.activatedOptions = _toConsumableArray(_this2.selectedOptions);\n      }, 200);\n    }\n    /**\n     * Filter cascader options to reset `columns`.\n     * @param {?} searchValue The string user wants to search.\n     * @return {?}\n     */\n\n  }, {\n    key: \"prepareSearchOptions\",\n    value: function prepareSearchOptions(searchValue) {\n      var _this3 = this;\n\n      /** @type {?} */\n      var results = []; // Search results only have one layer.\n\n      /** @type {?} */\n\n      var path = [];\n      /** @type {?} */\n\n      var defaultFilter =\n      /**\n      * @param {?} i\n      * @param {?} p\n      * @return {?}\n      */\n      function defaultFilter(i, p) {\n        return p.some(\n        /**\n        * @param {?} o\n        * @return {?}\n        */\n        function (o) {\n          /** @type {?} */\n          var label = _this3.getOptionLabel(o);\n\n          return !!label && label.indexOf(i) !== -1;\n        });\n      };\n      /** @type {?} */\n\n\n      var showSearch = this.cascaderComponent.nzShowSearch;\n      /** @type {?} */\n\n      var filter = isShowSearchObject(showSearch) && showSearch.filter ? showSearch.filter : defaultFilter;\n      /** @type {?} */\n\n      var sorter = isShowSearchObject(showSearch) && showSearch.sorter ? showSearch.sorter : null;\n      /** @type {?} */\n\n      var loopChild =\n      /**\n      * @param {?} node\n      * @param {?=} forceDisabled\n      * @return {?}\n      */\n      function loopChild(node) {\n        var forceDisabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        path.push(node);\n        /** @type {?} */\n\n        var cPath = Array.from(path);\n\n        if (filter(searchValue, cPath)) {\n          /** @type {?} */\n          var disabled = forceDisabled || node.disabled;\n          /** @type {?} */\n\n          var option = _defineProperty({\n            disabled: disabled,\n            isLeaf: true,\n            path: cPath\n          }, _this3.cascaderComponent.nzLabelProperty, cPath.map(\n          /**\n          * @param {?} p\n          * @return {?}\n          */\n          function (p) {\n            return _this3.getOptionLabel(p);\n          }).join(' / '));\n\n          results.push(option);\n        }\n\n        path.pop();\n      };\n      /** @type {?} */\n\n\n      var loopParent =\n      /**\n      * @param {?} node\n      * @param {?=} forceDisabled\n      * @return {?}\n      */\n      function loopParent(node) {\n        var forceDisabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        /** @type {?} */\n        var disabled = forceDisabled || node.disabled;\n        path.push(node);\n\n        /** @type {?} */\n        node.children.forEach(\n        /**\n        * @param {?} sNode\n        * @return {?}\n        */\n        function (sNode) {\n          if (!sNode.parent) {\n            sNode.parent = node;\n          }\n\n          if (!sNode.isLeaf) {\n            loopParent(sNode, disabled);\n          }\n\n          if (sNode.isLeaf || !sNode.children || !sNode.children.length) {\n            loopChild(sNode, disabled);\n          }\n        });\n        path.pop();\n      };\n\n      if (!this.columnsSnapshot.length) {\n        this.columns = [[]];\n        return;\n      }\n\n      this.columnsSnapshot[0].forEach(\n      /**\n      * @param {?} o\n      * @return {?}\n      */\n      function (o) {\n        return isChildOption(o) ? loopChild(o) : loopParent(o);\n      });\n\n      if (sorter) {\n        results.sort(\n        /**\n        * @param {?} a\n        * @param {?} b\n        * @return {?}\n        */\n        function (a, b) {\n          return sorter(a.path, b.path, searchValue);\n        });\n      }\n\n      this.columns = [results];\n      this.$redraw.next(); // Search results may be empty, so should redraw.\n    }\n    /**\n     * Toggle searching mode by UI. It deals with things not directly related to UI.\n     * @param {?} toSearching If this cascader is entering searching mode\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggleSearchingMode\",\n    value: function toggleSearchingMode(toSearching) {\n      this.inSearchingMode = toSearching;\n\n      if (toSearching) {\n        this.activatedOptionsSnapshot = _toConsumableArray(this.activatedOptions);\n        this.activatedOptions = [];\n        this.selectedOptions = [];\n        this.$redraw.next();\n      } else {\n        // User quit searching mode without selecting an option.\n        this.activatedOptions = _toConsumableArray(this.activatedOptionsSnapshot);\n        this.selectedOptions = _toConsumableArray(this.activatedOptions);\n        this.columns = _toConsumableArray(this.columnsSnapshot);\n        this.syncOptions();\n        this.$redraw.next();\n      }\n    }\n    /**\n     * Clear selected options.\n     * @return {?}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.values = [];\n      this.selectedOptions = [];\n      this.activatedOptions = [];\n      this.dropBehindColumns(0);\n      this.prepareEmitValue();\n      this.$redraw.next();\n      this.$optionSelected.next(null);\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n\n  }, {\n    key: \"getOptionLabel\",\n    value: function getOptionLabel(o) {\n      return (\n        /** @type {?} */\n        o[this.cascaderComponent.nzLabelProperty || 'label']\n      );\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n\n  }, {\n    key: \"getOptionValue\",\n    value: function getOptionValue(o) {\n      return o[this.cascaderComponent.nzValueProperty || 'value'];\n    }\n    /**\n     * Try to insert options into a column.\n     * @private\n     * @param {?} options Options to insert\n     * @param {?} columnIndex Position\n     * @param {?} parent\n     * @return {?}\n     */\n\n  }, {\n    key: \"setColumnData\",\n    value: function setColumnData(options, columnIndex, parent) {\n      /** @type {?} */\n      var existingOptions = this.columns[columnIndex];\n\n      if (!arraysEqual(existingOptions, options)) {\n        options.forEach(\n        /**\n        * @param {?} o\n        * @return {?}\n        */\n        function (o) {\n          return o.parent = parent;\n        });\n        this.columns[columnIndex] = options;\n        this.dropBehindColumns(columnIndex);\n      }\n    }\n    /**\n     * Set all ancestor options as activated.\n     * @private\n     * @param {?} startIndex\n     * @return {?}\n     */\n\n  }, {\n    key: \"trackAncestorActivatedOptions\",\n    value: function trackAncestorActivatedOptions(startIndex) {\n      for (var i = startIndex - 1; i >= 0; i--) {\n        if (!this.activatedOptions[i]) {\n          this.activatedOptions[i] =\n          /** @type {?} */\n          this.activatedOptions[i + 1].parent;\n        }\n      }\n    }\n    /**\n     * @private\n     * @param {?} lastReserveIndex\n     * @return {?}\n     */\n\n  }, {\n    key: \"dropBehindActivatedOptions\",\n    value: function dropBehindActivatedOptions(lastReserveIndex) {\n      this.activatedOptions = this.activatedOptions.splice(0, lastReserveIndex + 1);\n    }\n    /**\n     * @private\n     * @param {?} lastReserveIndex\n     * @return {?}\n     */\n\n  }, {\n    key: \"dropBehindColumns\",\n    value: function dropBehindColumns(lastReserveIndex) {\n      if (lastReserveIndex < this.columns.length - 1) {\n        this.columns = this.columns.slice(0, lastReserveIndex + 1);\n      }\n    }\n    /**\n     * Load children of an option asynchronously.\n     * @param {?} option\n     * @param {?} columnIndex\n     * @param {?=} success\n     * @param {?=} failure\n     * @return {?}\n     */\n\n  }, {\n    key: \"loadChildren\",\n    value: function loadChildren(option, columnIndex, success, failure) {\n      var _this4 = this;\n\n      /** @type {?} */\n      var loadFn = this.cascaderComponent.nzLoadData;\n\n      if (loadFn) {\n        // If there isn't any option in columns.\n        this.$loading.next(columnIndex < 0);\n\n        if (typeof option === 'object') {\n          option.loading = true;\n        }\n\n        loadFn(option, columnIndex).then(\n        /**\n        * @return {?}\n        */\n        function () {\n          option.loading = false;\n\n          if (option.children) {\n            _this4.setColumnData(option.children, columnIndex + 1, option);\n          }\n\n          if (success) {\n            success();\n          }\n\n          _this4.$loading.next(false);\n\n          _this4.$redraw.next();\n        },\n        /**\n        * @return {?}\n        */\n        function () {\n          option.loading = false;\n          option.isLeaf = true;\n\n          if (failure) {\n            failure();\n          }\n\n          _this4.$redraw.next();\n        });\n      }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"isLoaded\",\n    value: function isLoaded(index) {\n      return this.columns[index] && this.columns[index].length > 0;\n    }\n    /**\n     * Find a option that has a given value in a given column.\n     * @private\n     * @param {?} columnIndex\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"findOptionWithValue\",\n    value: function findOptionWithValue(columnIndex, value) {\n      var _this5 = this;\n\n      /** @type {?} */\n      var targetColumn = this.columns[columnIndex];\n\n      if (targetColumn) {\n        /** @type {?} */\n        var v = typeof value === 'object' ? this.getOptionValue(value) : value;\n        return (\n          /** @type {?} */\n          targetColumn.find(\n          /**\n          * @param {?} o\n          * @return {?}\n          */\n          function (o) {\n            return v === _this5.getOptionValue(o);\n          })\n        );\n      }\n\n      return null;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"prepareEmitValue\",\n    value: function prepareEmitValue() {\n      var _this6 = this;\n\n      this.values = this.selectedOptions.map(\n      /**\n      * @param {?} o\n      * @return {?}\n      */\n      function (o) {\n        return _this6.getOptionValue(o);\n      });\n    }\n  }]);\n\n  return NzCascaderService;\n}();\n\nNzCascaderService.ɵfac = function NzCascaderService_Factory(t) {\n  return new (t || NzCascaderService)();\n};\n\nNzCascaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NzCascaderService,\n  factory: NzCascaderService.ɵfac\n});\n\nif (false) {\n  /**\n   * Activated options in each column.\n   * @type {?}\n   */\n  NzCascaderService.prototype.activatedOptions;\n  /**\n   * An array to store cascader items arranged in different layers.\n   * @type {?}\n   */\n\n  NzCascaderService.prototype.columns;\n  /**\n   * If user has entered searching mode.\n   * @type {?}\n   */\n\n  NzCascaderService.prototype.inSearchingMode;\n  /**\n   * Selected options would be output to user.\n   * @type {?}\n   */\n\n  NzCascaderService.prototype.selectedOptions;\n  /** @type {?} */\n\n  NzCascaderService.prototype.values;\n  /** @type {?} */\n\n  NzCascaderService.prototype.$loading;\n  /**\n   * Emit an event to notify cascader it needs to redraw because activated or\n   * selected options are changed.\n   * @type {?}\n   */\n\n  NzCascaderService.prototype.$redraw;\n  /**\n   * Emit an event when an option gets selected.\n   * Emit true if a leaf options is selected.\n   * @type {?}\n   */\n\n  NzCascaderService.prototype.$optionSelected;\n  /**\n   * Emit an event to notify cascader it needs to quit searching mode.\n   * Only emit when user do select a searching option.\n   * @type {?}\n   */\n\n  NzCascaderService.prototype.$quitSearching;\n  /**\n   * To hold columns before entering searching mode.\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderService.prototype.columnsSnapshot;\n  /**\n   * To hold activated options before entering searching mode.\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderService.prototype.activatedOptionsSnapshot;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderService.prototype.cascaderComponent;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: cascader.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar NZ_CONFIG_COMPONENT_NAME = 'cascader';\n/** @type {?} */\n\nvar defaultDisplayRender =\n/**\n* @param {?} labels\n* @return {?}\n*/\nfunction defaultDisplayRender(labels) {\n  return labels.join(' / ');\n};\n\nvar ɵ0 = defaultDisplayRender;\n\nvar NzCascaderComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} cascaderService\n   * @param {?} i18nService\n   * @param {?} nzConfigService\n   * @param {?} cdr\n   * @param {?} elementRef\n   * @param {?} renderer\n   * @param {?=} noAnimation\n   */\n  function NzCascaderComponent(cascaderService, i18nService, nzConfigService, cdr, elementRef, renderer, noAnimation) {\n    _classCallCheck(this, NzCascaderComponent);\n\n    this.cascaderService = cascaderService;\n    this.i18nService = i18nService;\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.noAnimation = noAnimation;\n    this.nzOptionRender = null;\n    this.nzShowInput = true;\n    this.nzShowArrow = true;\n    this.nzAllowClear = true;\n    this.nzAutoFocus = false;\n    this.nzChangeOnSelect = false;\n    this.nzDisabled = false;\n    this.nzExpandTrigger = 'click';\n    this.nzValueProperty = 'value';\n    this.nzLabelRender = null;\n    this.nzLabelProperty = 'label';\n    this.nzSize = 'default';\n    this.nzShowSearch = false;\n    this.nzPlaceHolder = '';\n    this.nzMenuStyle = null;\n    this.nzMouseEnterDelay = 150; // ms\n    // ms\n\n    this.nzMouseLeaveDelay = 150; // ms\n    // ms\n\n    this.nzTriggerAction =\n    /** @type {?} */\n    ['click'];\n    this.nzVisibleChange = new EventEmitter();\n    this.nzSelectionChange = new EventEmitter();\n    this.nzSelect = new EventEmitter();\n    this.nzClear = new EventEmitter();\n    /**\n     * If the dropdown should show the empty content.\n     * `true` if there's no options.\n     */\n\n    this.shouldShowEmpty = false;\n    this.menuVisible = false;\n    this.isLoading = false;\n    this.labelRenderContext = {};\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.positions = _toConsumableArray(DEFAULT_CASCADER_POSITIONS);\n    this.dropdownHeightStyle = '';\n    this.isFocused = false;\n    this.destroy$ = new Subject();\n    this.inputString = '';\n    this.isOpening = false;\n    this.delayMenuTimer = null;\n    this.delaySelectTimer = null;\n    this.el = elementRef.nativeElement;\n    this.cascaderService.withComponent(this);\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader');\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-picker');\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NzCascaderComponent, [{\n    key: \"nzOptions\",\n    get: function get() {\n      return this.cascaderService.nzOptions;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    ,\n    set: function set(options) {\n      this.cascaderService.withOptions(options);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"inSearchingMode\",\n    get: function get() {\n      return this.cascaderService.inSearchingMode;\n    }\n    /**\n     * @param {?} inputValue\n     * @return {?}\n     */\n\n  }, {\n    key: \"inputValue\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this.inputString;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    set: function set(inputValue) {\n      this.inputString = inputValue;\n      this.toggleSearchingMode(!!inputValue);\n    }\n  }, {\n    key: \"menuCls\",\n    get: function get() {\n      return _defineProperty({}, \"\".concat(this.nzMenuClassName), !!this.nzMenuClassName);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"menuColumnCls\",\n    get: function get() {\n      return _defineProperty({}, \"\".concat(this.nzColumnClassName), !!this.nzColumnClassName);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasInput\",\n    get: function get() {\n      return !!this.inputValue;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasValue\",\n    get: function get() {\n      return this.cascaderService.values && this.cascaderService.values.length > 0;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"showPlaceholder\",\n    get: function get() {\n      return !(this.hasInput || this.hasValue);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearIconVisible\",\n    get: function get() {\n      return this.nzAllowClear && !this.nzDisabled && (this.hasValue || this.hasInput);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isLabelRenderTemplate\",\n    get: function get() {\n      return !!this.nzLabelRender;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this7 = this;\n\n      /** @type {?} */\n      var srv = this.cascaderService;\n      srv.$redraw.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        // These operations would not mutate data.\n        _this7.checkChildren();\n\n        _this7.setDisplayLabel();\n\n        _this7.reposition();\n\n        _this7.setDropdownStyles();\n\n        _this7.cdr.markForCheck();\n      });\n      srv.$loading.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\n      * @param {?} loading\n      * @return {?}\n      */\n      function (loading) {\n        _this7.isLoading = loading;\n      });\n      srv.$optionSelected.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\n      * @param {?} data\n      * @return {?}\n      */\n      function (data) {\n        if (!data) {\n          _this7.onChange([]);\n\n          _this7.nzSelect.emit(null);\n\n          _this7.nzSelectionChange.emit([]);\n        } else {\n          var option = data.option,\n              index = data.index;\n          /** @type {?} */\n\n          var shouldClose = option.isLeaf;\n\n          if (shouldClose) {\n            _this7.delaySetMenuVisible(false);\n          }\n\n          _this7.onChange(_this7.cascaderService.values);\n\n          _this7.nzSelectionChange.emit(_this7.cascaderService.selectedOptions);\n\n          _this7.nzSelect.emit({\n            option: option,\n            index: index\n          });\n\n          _this7.cdr.markForCheck();\n        }\n      });\n      srv.$quitSearching.pipe(takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this7.inputString = '';\n        _this7.dropdownWidthStyle = '';\n      });\n      this.i18nService.localeChange.pipe(startWith(), takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this7.setLocale();\n      });\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).pipe(takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this7.cdr.markForCheck();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n      this.clearDelayMenuTimer();\n      this.clearDelaySelectTimer();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.cascaderService.values = toArray(value);\n      this.cascaderService.syncOptions(true);\n    }\n    /**\n     * @param {?} visible\n     * @param {?=} delay\n     * @param {?=} setOpening\n     * @return {?}\n     */\n\n  }, {\n    key: \"delaySetMenuVisible\",\n    value: function delaySetMenuVisible(visible) {\n      var _this8 = this;\n\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      var setOpening = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.clearDelayMenuTimer();\n\n      if (delay) {\n        if (visible && setOpening) {\n          this.isOpening = true;\n        }\n\n        this.delayMenuTimer = setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this8.setMenuVisible(visible);\n\n          _this8.cdr.detectChanges();\n\n          _this8.clearDelayMenuTimer();\n\n          if (visible) {\n            setTimeout(\n            /**\n            * @return {?}\n            */\n            function () {\n              _this8.isOpening = false;\n            }, 100);\n          }\n        }, delay);\n      } else {\n        this.setMenuVisible(visible);\n      }\n    }\n    /**\n     * @param {?} visible\n     * @return {?}\n     */\n\n  }, {\n    key: \"setMenuVisible\",\n    value: function setMenuVisible(visible) {\n      if (this.nzDisabled || this.menuVisible === visible) {\n        return;\n      }\n\n      if (visible) {\n        this.cascaderService.syncOptions();\n      }\n\n      this.menuVisible = visible;\n      this.nzVisibleChange.emit(visible);\n      this.cdr.detectChanges();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearDelayMenuTimer\",\n    value: function clearDelayMenuTimer() {\n      if (this.delayMenuTimer) {\n        clearTimeout(this.delayMenuTimer);\n        this.delayMenuTimer = null;\n      }\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection(event) {\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      this.labelRenderText = '';\n      this.labelRenderContext = {};\n      this.inputValue = '';\n      this.setMenuVisible(false);\n      this.cascaderService.clear();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getSubmitValue\",\n    value: function getSubmitValue() {\n      var _this9 = this;\n\n      return this.cascaderService.selectedOptions.map(\n      /**\n      * @param {?} o\n      * @return {?}\n      */\n      function (o) {\n        return _this9.cascaderService.getOptionValue(o);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.isFocused) {\n        (this.input ? this.input.nativeElement : this.el).focus();\n        this.isFocused = true;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (this.isFocused) {\n        (this.input ? this.input.nativeElement : this.el).blur();\n        this.isFocused = false;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleInputBlur\",\n    value: function handleInputBlur() {\n      this.menuVisible ? this.focus() : this.blur();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleInputFocus\",\n    value: function handleInputFocus() {\n      this.focus();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      /** @type {?} */\n      var keyCode = event.keyCode;\n\n      if (keyCode !== DOWN_ARROW && keyCode !== UP_ARROW && keyCode !== LEFT_ARROW && keyCode !== RIGHT_ARROW && keyCode !== ENTER && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n        return;\n      } // Press any keys above to reopen menu.\n\n\n      if (!this.menuVisible && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n        return this.setMenuVisible(true);\n      } // Make these keys work as default in searching mode.\n\n\n      if (this.inSearchingMode && (keyCode === BACKSPACE || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW)) {\n        return;\n      } // Interact with the component.\n\n\n      if (this.menuVisible) {\n        event.preventDefault();\n\n        if (keyCode === DOWN_ARROW) {\n          this.moveUpOrDown(false);\n        } else if (keyCode === UP_ARROW) {\n          this.moveUpOrDown(true);\n        } else if (keyCode === LEFT_ARROW) {\n          this.moveLeft();\n        } else if (keyCode === RIGHT_ARROW) {\n          this.moveRight();\n        } else if (keyCode === ENTER) {\n          this.onEnter();\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onTriggerClick\",\n    value: function onTriggerClick() {\n      if (this.nzDisabled) {\n        return;\n      }\n\n      if (this.nzShowSearch) {\n        this.focus();\n      }\n\n      if (this.isActionTrigger('click')) {\n        this.delaySetMenuVisible(!this.menuVisible, 100);\n      }\n\n      this.onTouched();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onTriggerMouseEnter\",\n    value: function onTriggerMouseEnter() {\n      if (this.nzDisabled || !this.isActionTrigger('hover')) {\n        return;\n      }\n\n      this.delaySetMenuVisible(true, this.nzMouseEnterDelay, true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onTriggerMouseLeave\",\n    value: function onTriggerMouseLeave(event) {\n      if (this.nzDisabled || !this.menuVisible || this.isOpening || !this.isActionTrigger('hover')) {\n        event.preventDefault();\n        return;\n      }\n      /** @type {?} */\n\n\n      var mouseTarget =\n      /** @type {?} */\n      event.relatedTarget;\n      /** @type {?} */\n\n      var hostEl = this.el;\n      /** @type {?} */\n\n      var menuEl = this.menu &&\n      /** @type {?} */\n      this.menu.nativeElement;\n\n      if (hostEl.contains(mouseTarget) || menuEl && menuEl.contains(mouseTarget)) {\n        return;\n      }\n\n      this.delaySetMenuVisible(false, this.nzMouseLeaveDelay);\n    }\n    /**\n     * @param {?} option\n     * @param {?} columnIndex\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onOptionMouseEnter\",\n    value: function onOptionMouseEnter(option, columnIndex, event) {\n      event.preventDefault();\n\n      if (this.nzExpandTrigger === 'hover') {\n        if (!option.isLeaf) {\n          this.delaySetOptionActivated(option, columnIndex, false);\n        } else {\n          this.cascaderService.setOptionDeactivatedSinceColumn(columnIndex);\n        }\n      }\n    }\n    /**\n     * @param {?} option\n     * @param {?} _columnIndex\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onOptionMouseLeave\",\n    value: function onOptionMouseLeave(option, _columnIndex, event) {\n      event.preventDefault();\n\n      if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n        this.clearDelaySelectTimer();\n      }\n    }\n    /**\n     * @param {?} option\n     * @param {?} columnIndex\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onOptionClick\",\n    value: function onOptionClick(option, columnIndex, event) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      if (option && option.disabled) {\n        return;\n      }\n\n      this.el.focus();\n      this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(\n      /** @type {?} */\n      option) : this.cascaderService.setOptionActivated(option, columnIndex, true);\n    }\n    /**\n     * @private\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"isActionTrigger\",\n    value: function isActionTrigger(action) {\n      return typeof this.nzTriggerAction === 'string' ? this.nzTriggerAction === action : this.nzTriggerAction.indexOf(action) !== -1;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      /** @type {?} */\n      var columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n      /** @type {?} */\n\n      var option = this.cascaderService.activatedOptions[columnIndex];\n\n      if (option && !option.disabled) {\n        this.inSearchingMode ? this.cascaderService.setSearchOptionSelected(\n        /** @type {?} */\n        option) : this.cascaderService.setOptionActivated(option, columnIndex, true);\n      }\n    }\n    /**\n     * @private\n     * @param {?} isUp\n     * @return {?}\n     */\n\n  }, {\n    key: \"moveUpOrDown\",\n    value: function moveUpOrDown(isUp) {\n      /** @type {?} */\n      var columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n      /** @type {?} */\n\n      var activeOption = this.cascaderService.activatedOptions[columnIndex];\n      /** @type {?} */\n\n      var options = this.cascaderService.columns[columnIndex] || [];\n      /** @type {?} */\n\n      var length = options.length;\n      /** @type {?} */\n\n      var nextIndex = -1;\n\n      if (!activeOption) {\n        // Not selected options in this column\n        nextIndex = isUp ? length : -1;\n      } else {\n        nextIndex = options.indexOf(activeOption);\n      }\n\n      while (true) {\n        nextIndex = isUp ? nextIndex - 1 : nextIndex + 1;\n\n        if (nextIndex < 0 || nextIndex >= length) {\n          break;\n        }\n        /** @type {?} */\n\n\n        var nextOption = options[nextIndex];\n\n        if (!nextOption || nextOption.disabled) {\n          continue;\n        }\n\n        this.cascaderService.setOptionActivated(nextOption, columnIndex);\n        break;\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"moveLeft\",\n    value: function moveLeft() {\n      /** @type {?} */\n      var options = this.cascaderService.activatedOptions;\n\n      if (options.length) {\n        options.pop(); // Remove the last one\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"moveRight\",\n    value: function moveRight() {\n      /** @type {?} */\n      var length = this.cascaderService.activatedOptions.length;\n      /** @type {?} */\n\n      var options = this.cascaderService.columns[length];\n\n      if (options && options.length) {\n        /** @type {?} */\n        var nextOpt = options.find(\n        /**\n        * @param {?} o\n        * @return {?}\n        */\n        function (o) {\n          return !o.disabled;\n        });\n\n        if (nextOpt) {\n          this.cascaderService.setOptionActivated(nextOpt, length);\n        }\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearDelaySelectTimer\",\n    value: function clearDelaySelectTimer() {\n      if (this.delaySelectTimer) {\n        clearTimeout(this.delaySelectTimer);\n        this.delaySelectTimer = null;\n      }\n    }\n    /**\n     * @private\n     * @param {?} option\n     * @param {?} columnIndex\n     * @param {?} performSelect\n     * @return {?}\n     */\n\n  }, {\n    key: \"delaySetOptionActivated\",\n    value: function delaySetOptionActivated(option, columnIndex, performSelect) {\n      var _this10 = this;\n\n      this.clearDelaySelectTimer();\n      this.delaySelectTimer = setTimeout(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this10.cascaderService.setOptionActivated(option, columnIndex, performSelect);\n\n        _this10.delaySelectTimer = null;\n      }, 150);\n    }\n    /**\n     * @private\n     * @param {?} toSearching\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggleSearchingMode\",\n    value: function toggleSearchingMode(toSearching) {\n      if (this.inSearchingMode !== toSearching) {\n        this.cascaderService.toggleSearchingMode(toSearching);\n      }\n\n      if (this.inSearchingMode) {\n        this.cascaderService.prepareSearchOptions(this.inputValue);\n      }\n    }\n    /**\n     * @param {?} option\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"isOptionActivated\",\n    value: function isOptionActivated(option, index) {\n      /** @type {?} */\n      var activeOpt = this.cascaderService.activatedOptions[index];\n      return activeOpt === option;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      if (isDisabled) {\n        this.closeMenu();\n      }\n\n      this.nzDisabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"closeMenu\",\n    value: function closeMenu() {\n      this.blur();\n      this.clearDelayMenuTimer();\n      this.setMenuVisible(false);\n    }\n    /**\n     * Reposition the cascader panel. When a menu opens, the cascader expands\n     * and may exceed the boundary of browser's window.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"reposition\",\n    value: function reposition() {\n      var _this11 = this;\n\n      if (this.overlay && this.overlay.overlayRef && this.menuVisible) {\n        Promise.resolve().then(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this11.overlay.overlayRef.updatePosition();\n        });\n      }\n    }\n    /**\n     * When a cascader options is changed, a child needs to know that it should re-render.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkChildren\",\n    value: function checkChildren() {\n      if (this.cascaderItems) {\n        this.cascaderItems.forEach(\n        /**\n        * @param {?} item\n        * @return {?}\n        */\n        function (item) {\n          return item.markForCheck();\n        });\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisplayLabel\",\n    value: function setDisplayLabel() {\n      var _this12 = this;\n\n      /** @type {?} */\n      var selectedOptions = this.cascaderService.selectedOptions;\n      /** @type {?} */\n\n      var labels = selectedOptions.map(\n      /**\n      * @param {?} o\n      * @return {?}\n      */\n      function (o) {\n        return _this12.cascaderService.getOptionLabel(o);\n      });\n\n      if (this.isLabelRenderTemplate) {\n        this.labelRenderContext = {\n          labels: labels,\n          selectedOptions: selectedOptions\n        };\n      } else {\n        this.labelRenderText = defaultDisplayRender.call(this, labels, selectedOptions);\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDropdownStyles\",\n    value: function setDropdownStyles() {\n      /** @type {?} */\n      var firstColumn = this.cascaderService.columns[0];\n      this.shouldShowEmpty = this.inSearchingMode && (!firstColumn || !firstColumn.length) || // Should show empty when there's no searching result\n      !(this.nzOptions && this.nzOptions.length) && !this.nzLoadData; // Should show when there's no options and developer does not use nzLoadData\n\n      this.dropdownHeightStyle = this.shouldShowEmpty ? 'auto' : '';\n\n      if (this.input) {\n        this.dropdownWidthStyle = this.inSearchingMode || this.shouldShowEmpty ? \"\".concat(this.input.nativeElement.offsetWidth, \"px\") : '';\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"setLocale\",\n    value: function setLocale() {\n      this.locale = this.i18nService.getLocaleData('global');\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzCascaderComponent;\n}();\n\nNzCascaderComponent.ɵfac = function NzCascaderComponent_Factory(t) {\n  return new (t || NzCascaderComponent)(ɵngcc0.ɵɵdirectiveInject(NzCascaderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NzI18nService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.NzNoAnimationDirective, 9));\n};\n\nNzCascaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzCascaderComponent,\n  selectors: [[\"nz-cascader\"], [\"\", \"nz-cascader\", \"\"]],\n  viewQuery: function NzCascaderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c2, true);\n      ɵngcc0.ɵɵviewQuery(_c3, true);\n      ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n      ɵngcc0.ɵɵviewQuery(NzCascaderOptionComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlay = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cascaderItems = _t);\n    }\n  },\n  hostVars: 13,\n  hostBindings: function NzCascaderComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function NzCascaderComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      })(\"click\", function NzCascaderComponent_click_HostBindingHandler() {\n        return ctx.onTriggerClick();\n      })(\"mouseenter\", function NzCascaderComponent_mouseenter_HostBindingHandler() {\n        return ctx.onTriggerMouseEnter();\n      })(\"mouseleave\", function NzCascaderComponent_mouseleave_HostBindingHandler($event) {\n        return ctx.onTriggerMouseLeave($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabIndex\", \"0\");\n      ɵngcc0.ɵɵclassProp(\"ant-cascader-lg\", ctx.nzSize === \"large\")(\"ant-cascader-sm\", ctx.nzSize === \"small\")(\"ant-cascader-picker-disabled\", ctx.nzDisabled)(\"ant-cascader-picker-open\", ctx.menuVisible)(\"ant-cascader-picker-with-value\", !!ctx.inputValue)(\"ant-cascader-focused\", ctx.isFocused);\n    }\n  },\n  inputs: {\n    nzOptionRender: \"nzOptionRender\",\n    nzShowInput: \"nzShowInput\",\n    nzShowArrow: \"nzShowArrow\",\n    nzAllowClear: \"nzAllowClear\",\n    nzAutoFocus: \"nzAutoFocus\",\n    nzChangeOnSelect: \"nzChangeOnSelect\",\n    nzDisabled: \"nzDisabled\",\n    nzExpandTrigger: \"nzExpandTrigger\",\n    nzValueProperty: \"nzValueProperty\",\n    nzLabelRender: \"nzLabelRender\",\n    nzLabelProperty: \"nzLabelProperty\",\n    nzSize: \"nzSize\",\n    nzShowSearch: \"nzShowSearch\",\n    nzPlaceHolder: \"nzPlaceHolder\",\n    nzMenuStyle: \"nzMenuStyle\",\n    nzMouseEnterDelay: \"nzMouseEnterDelay\",\n    nzMouseLeaveDelay: \"nzMouseLeaveDelay\",\n    nzTriggerAction: \"nzTriggerAction\",\n    nzOptions: \"nzOptions\",\n    nzColumnClassName: \"nzColumnClassName\",\n    nzNotFoundContent: \"nzNotFoundContent\",\n    nzMenuClassName: \"nzMenuClassName\",\n    nzChangeOn: \"nzChangeOn\",\n    nzLoadData: \"nzLoadData\"\n  },\n  outputs: {\n    nzVisibleChange: \"nzVisibleChange\",\n    nzSelectionChange: \"nzSelectionChange\",\n    nzSelect: \"nzSelect\",\n    nzClear: \"nzClear\"\n  },\n  exportAs: [\"nzCascader\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(\n    /**\n    * @return {?}\n    */\n    function () {\n      return NzCascaderComponent;\n    }),\n    multi: true\n  }, NzCascaderService])],\n  ngContentSelectors: _c4,\n  decls: 6,\n  vars: 5,\n  consts: [[\"cdkOverlayOrigin\", \"\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [4, \"ngIf\"], [\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", 3, \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayOpen\", \"backdropClick\", \"detach\"], [\"nz-input\", \"\", 1, \"ant-cascader-input\", 3, \"readonly\", \"disabled\", \"nzSize\", \"ngModel\", \"ngModelChange\", \"blur\", \"focus\", \"change\"], [\"input\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\", \"class\", \"ant-cascader-picker-clear\", 3, \"click\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"down\", \"class\", \"ant-cascader-picker-arrow\", 3, \"ant-cascader-picker-arrow-expand\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", \"class\", \"ant-cascader-picker-arrow\", 4, \"ngIf\"], [1, \"ant-cascader-picker-label\"], [4, \"ngIf\", \"ngIfElse\"], [\"labelTemplate\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", \"nzTheme\", \"fill\", 1, \"ant-cascader-picker-clear\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 1, \"ant-cascader-picker-arrow\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-cascader-picker-arrow\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-cascader-menus\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\", \"mouseleave\"], [\"menu\", \"\"], [\"class\", \"ant-cascader-menu\", 3, \"width\", \"height\", 4, \"ngIf\", \"ngIfElse\"], [\"hasOptionsTemplate\", \"\"], [1, \"ant-cascader-menu\"], [1, \"ant-cascader-menu-item\", \"ant-cascader-menu-item-expanded\", \"ant-cascader-menu-item-disabled\"], [3, \"nzComponentName\", \"specificContent\"], [\"class\", \"ant-cascader-menu\", 3, \"ngClass\", \"height\", \"width\", 4, \"ngFor\", \"ngForOf\"], [1, \"ant-cascader-menu\", 3, \"ngClass\"], [\"nz-cascader-option\", \"\", 3, \"columnIndex\", \"nzLabelProperty\", \"optionTemplate\", \"activated\", \"highlightText\", \"option\", \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"nz-cascader-option\", \"\", 3, \"columnIndex\", \"nzLabelProperty\", \"optionTemplate\", \"activated\", \"highlightText\", \"option\", \"mouseenter\", \"mouseleave\", \"click\"]],\n  template: function NzCascaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵtemplate(3, NzCascaderComponent_div_3_Template, 10, 22, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, NzCascaderComponent_ng_template_5_Template, 5, 9, \"ng-template\", 3);\n      ɵngcc0.ɵɵlistener(\"backdropClick\", function NzCascaderComponent_Template_ng_template_backdropClick_5_listener() {\n        return ctx.closeMenu();\n      })(\"detach\", function NzCascaderComponent_Template_ng_template_detach_5_listener() {\n        return ctx.closeMenu();\n      });\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzShowInput);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayPositions\", ctx.positions)(\"cdkConnectedOverlayTransformOriginOn\", \".ant-cascader-menus\")(\"cdkConnectedOverlayOpen\", ctx.menuVisible);\n    }\n  },\n  directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc1.NgIf, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NzConnectedOverlayDirective, ɵngcc9.NzInputDirective, ɵngcc10.DefaultValueAccessor, ɵngcc10.NgControlStatus, ɵngcc10.NgModel, ɵngcc2.NzIconDirective, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc6.NzNoAnimationDirective, ɵngcc11.NzEmbedEmptyComponent, ɵngcc1.NgForOf, NzCascaderOptionComponent],\n  encapsulation: 2,\n  data: {\n    animation: [slideMotion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzCascaderComponent.ctorParameters = function () {\n  return [{\n    type: NzCascaderService\n  }, {\n    type: NzI18nService\n  }, {\n    type: NzConfigService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzCascaderComponent.propDecorators = {\n  input: [{\n    type: ViewChild,\n    args: ['input', {\n      static: false\n    }]\n  }],\n  menu: [{\n    type: ViewChild,\n    args: ['menu', {\n      static: false\n    }]\n  }],\n  overlay: [{\n    type: ViewChild,\n    args: [CdkConnectedOverlay, {\n      static: false\n    }]\n  }],\n  cascaderItems: [{\n    type: ViewChildren,\n    args: [NzCascaderOptionComponent]\n  }],\n  nzOptionRender: [{\n    type: Input\n  }],\n  nzShowInput: [{\n    type: Input\n  }],\n  nzShowArrow: [{\n    type: Input\n  }],\n  nzAllowClear: [{\n    type: Input\n  }],\n  nzAutoFocus: [{\n    type: Input\n  }],\n  nzChangeOnSelect: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzColumnClassName: [{\n    type: Input\n  }],\n  nzExpandTrigger: [{\n    type: Input\n  }],\n  nzValueProperty: [{\n    type: Input\n  }],\n  nzLabelRender: [{\n    type: Input\n  }],\n  nzLabelProperty: [{\n    type: Input\n  }],\n  nzNotFoundContent: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzShowSearch: [{\n    type: Input\n  }],\n  nzPlaceHolder: [{\n    type: Input\n  }],\n  nzMenuClassName: [{\n    type: Input\n  }],\n  nzMenuStyle: [{\n    type: Input\n  }],\n  nzMouseEnterDelay: [{\n    type: Input\n  }],\n  nzMouseLeaveDelay: [{\n    type: Input\n  }],\n  nzTriggerAction: [{\n    type: Input\n  }],\n  nzChangeOn: [{\n    type: Input\n  }],\n  nzLoadData: [{\n    type: Input\n  }],\n  nzOptions: [{\n    type: Input\n  }],\n  nzVisibleChange: [{\n    type: Output\n  }],\n  nzSelectionChange: [{\n    type: Output\n  }],\n  nzSelect: [{\n    type: Output\n  }],\n  nzClear: [{\n    type: Output\n  }],\n  onKeyDown: [{\n    type: HostListener,\n    args: ['keydown', ['$event']]\n  }],\n  onTriggerClick: [{\n    type: HostListener,\n    args: ['click']\n  }],\n  onTriggerMouseEnter: [{\n    type: HostListener,\n    args: ['mouseenter']\n  }],\n  onTriggerMouseLeave: [{\n    type: HostListener,\n    args: ['mouseleave', ['$event']]\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzShowInput\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzShowArrow\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzAllowClear\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzAutoFocus\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzChangeOnSelect\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzCascaderComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), __metadata(\"design:type\", String)], NzCascaderComponent.prototype, \"nzSize\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCascaderOptionComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: '[nz-cascader-option]',\n      exportAs: 'nzCascaderOption',\n      template: \"\\n    <ng-container *ngIf=\\\"optionTemplate; else defaultOptionTemplate\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"optionTemplate\\\" [ngTemplateOutletContext]=\\\"{ $implicit: option, index: columnIndex }\\\"></ng-template>\\n    </ng-container>\\n    <ng-template #defaultOptionTemplate>\\n      <span [innerHTML]=\\\"optionLabel | nzHighlight: highlightText:'g':'ant-cascader-menu-item-keyword'\\\"></span>\\n    </ng-template>\\n    <span *ngIf=\\\"!option.isLeaf || option.children?.length || option.loading\\\" class=\\\"ant-cascader-menu-item-expand-icon\\\">\\n      <i nz-icon [nzType]=\\\"option.loading ? 'loading' : 'right'\\\"></i>\\n    </span>\\n  \",\n      host: {\n        '[attr.title]': 'option.title || optionLabel',\n        '[class.ant-cascader-menu-item-active]': 'activated',\n        '[class.ant-cascader-menu-item-expand]': '!option.isLeaf',\n        '[class.ant-cascader-menu-item-disabled]': 'option.disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    optionTemplate: [{\n      type: Input\n    }],\n    activated: [{\n      type: Input\n    }],\n    nzLabelProperty: [{\n      type: Input\n    }],\n    option: [{\n      type: Input\n    }],\n    highlightText: [{\n      type: Input\n    }],\n    columnIndex: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCascaderService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCascaderComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-cascader, [nz-cascader]',\n      exportAs: 'nzCascader',\n      preserveWhitespaces: false,\n      template: \"\\n    <div cdkOverlayOrigin #origin=\\\"cdkOverlayOrigin\\\" #trigger>\\n      <div *ngIf=\\\"nzShowInput\\\">\\n        <input\\n          #input\\n          nz-input\\n          class=\\\"ant-cascader-input\\\"\\n          [class.ant-cascader-input-disabled]=\\\"nzDisabled\\\"\\n          [class.ant-cascader-input-lg]=\\\"nzSize === 'large'\\\"\\n          [class.ant-cascader-input-sm]=\\\"nzSize === 'small'\\\"\\n          [attr.autoComplete]=\\\"'off'\\\"\\n          [attr.placeholder]=\\\"showPlaceholder ? nzPlaceHolder || locale?.placeholder : null\\\"\\n          [attr.autofocus]=\\\"nzAutoFocus ? 'autofocus' : null\\\"\\n          [readonly]=\\\"!nzShowSearch\\\"\\n          [disabled]=\\\"nzDisabled\\\"\\n          [nzSize]=\\\"nzSize\\\"\\n          [(ngModel)]=\\\"inputValue\\\"\\n          (blur)=\\\"handleInputBlur()\\\"\\n          (focus)=\\\"handleInputFocus()\\\"\\n          (change)=\\\"$event.stopPropagation()\\\"\\n        />\\n        <i\\n          *ngIf=\\\"clearIconVisible\\\"\\n          nz-icon\\n          nzType=\\\"close-circle\\\"\\n          nzTheme=\\\"fill\\\"\\n          class=\\\"ant-cascader-picker-clear\\\"\\n          (click)=\\\"clearSelection($event)\\\"\\n        ></i>\\n        <i\\n          *ngIf=\\\"nzShowArrow && !isLoading\\\"\\n          nz-icon\\n          nzType=\\\"down\\\"\\n          class=\\\"ant-cascader-picker-arrow\\\"\\n          [class.ant-cascader-picker-arrow-expand]=\\\"menuVisible\\\"\\n        >\\n        </i>\\n        <i *ngIf=\\\"isLoading\\\" nz-icon nzType=\\\"loading\\\" class=\\\"ant-cascader-picker-arrow\\\"></i>\\n        <span\\n          class=\\\"ant-cascader-picker-label\\\"\\n          [class.ant-cascader-show-search]=\\\"!!nzShowSearch\\\"\\n          [class.ant-focusd]=\\\"!!nzShowSearch && isFocused && !inputValue\\\"\\n        >\\n          <ng-container *ngIf=\\\"!isLabelRenderTemplate; else labelTemplate\\\">{{ labelRenderText }}</ng-container>\\n          <ng-template #labelTemplate>\\n            <ng-template [ngTemplateOutlet]=\\\"nzLabelRender\\\" [ngTemplateOutletContext]=\\\"labelRenderContext\\\"></ng-template>\\n          </ng-template>\\n        </span>\\n      </div>\\n      <ng-content></ng-content>\\n    </div>\\n    <ng-template\\n      cdkConnectedOverlay\\n      nzConnectedOverlay\\n      cdkConnectedOverlayHasBackdrop\\n      [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n      [cdkConnectedOverlayPositions]=\\\"positions\\\"\\n      [cdkConnectedOverlayTransformOriginOn]=\\\"'.ant-cascader-menus'\\\"\\n      (backdropClick)=\\\"closeMenu()\\\"\\n      (detach)=\\\"closeMenu()\\\"\\n      [cdkConnectedOverlayOpen]=\\\"menuVisible\\\"\\n    >\\n      <div\\n        #menu\\n        class=\\\"ant-cascader-menus\\\"\\n        [class.ant-cascader-menus-hidden]=\\\"!menuVisible\\\"\\n        [ngClass]=\\\"menuCls\\\"\\n        [ngStyle]=\\\"nzMenuStyle\\\"\\n        [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [@slideMotion]=\\\"'enter'\\\"\\n        (mouseleave)=\\\"onTriggerMouseLeave($event)\\\"\\n      >\\n        <ul\\n          *ngIf=\\\"shouldShowEmpty; else hasOptionsTemplate\\\"\\n          class=\\\"ant-cascader-menu\\\"\\n          [style.width]=\\\"dropdownWidthStyle\\\"\\n          [style.height]=\\\"dropdownHeightStyle\\\"\\n        >\\n          <li class=\\\"ant-cascader-menu-item ant-cascader-menu-item-expanded ant-cascader-menu-item-disabled\\\">\\n            <nz-embed-empty [nzComponentName]=\\\"'cascader'\\\" [specificContent]=\\\"nzNotFoundContent\\\"></nz-embed-empty>\\n          </li>\\n        </ul>\\n        <ng-template #hasOptionsTemplate>\\n          <ul\\n            *ngFor=\\\"let options of cascaderService.columns; let i = index\\\"\\n            class=\\\"ant-cascader-menu\\\"\\n            [ngClass]=\\\"menuColumnCls\\\"\\n            [style.height]=\\\"dropdownHeightStyle\\\"\\n            [style.width]=\\\"dropdownWidthStyle\\\"\\n          >\\n            <li\\n              nz-cascader-option\\n              *ngFor=\\\"let option of options\\\"\\n              [columnIndex]=\\\"i\\\"\\n              [nzLabelProperty]=\\\"nzLabelProperty\\\"\\n              [optionTemplate]=\\\"nzOptionRender\\\"\\n              [activated]=\\\"isOptionActivated(option, i)\\\"\\n              [highlightText]=\\\"inSearchingMode ? inputValue : ''\\\"\\n              [option]=\\\"option\\\"\\n              (mouseenter)=\\\"onOptionMouseEnter(option, i, $event)\\\"\\n              (mouseleave)=\\\"onOptionMouseLeave(option, i, $event)\\\"\\n              (click)=\\\"onOptionClick(option, i, $event)\\\"\\n            ></li>\\n          </ul>\\n        </ng-template>\\n      </div>\\n    </ng-template>\\n  \",\n      animations: [slideMotion],\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(\n        /**\n        * @return {?}\n        */\n        function () {\n          return NzCascaderComponent;\n        }),\n        multi: true\n      }, NzCascaderService],\n      host: {\n        '[attr.tabIndex]': '\"0\"',\n        '[class.ant-cascader-lg]': 'nzSize === \"large\"',\n        '[class.ant-cascader-sm]': 'nzSize === \"small\"',\n        '[class.ant-cascader-picker-disabled]': 'nzDisabled',\n        '[class.ant-cascader-picker-open]': 'menuVisible',\n        '[class.ant-cascader-picker-with-value]': '!!inputValue',\n        '[class.ant-cascader-focused]': 'isFocused'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NzCascaderService\n    }, {\n      type: ɵngcc4.NzI18nService\n    }, {\n      type: ɵngcc5.NzConfigService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc6.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzOptionRender: [{\n      type: Input\n    }],\n    nzShowInput: [{\n      type: Input\n    }],\n    nzShowArrow: [{\n      type: Input\n    }],\n    nzAllowClear: [{\n      type: Input\n    }],\n    nzAutoFocus: [{\n      type: Input\n    }],\n    nzChangeOnSelect: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzExpandTrigger: [{\n      type: Input\n    }],\n    nzValueProperty: [{\n      type: Input\n    }],\n    nzLabelRender: [{\n      type: Input\n    }],\n    nzLabelProperty: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzShowSearch: [{\n      type: Input\n    }],\n    nzPlaceHolder: [{\n      type: Input\n    }],\n    nzMenuStyle: [{\n      type: Input\n    }],\n    nzMouseEnterDelay: [{\n      type: Input\n    }],\n    nzMouseLeaveDelay: [{\n      type: Input\n    }],\n    nzTriggerAction: [{\n      type: Input\n    }],\n    nzVisibleChange: [{\n      type: Output\n    }],\n    nzSelectionChange: [{\n      type: Output\n    }],\n    nzSelect: [{\n      type: Output\n    }],\n    nzClear: [{\n      type: Output\n    }],\n    nzOptions: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n\n    /**\n     * @return {?}\n     */\n    onTriggerClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n\n    /**\n     * @return {?}\n     */\n    onTriggerMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onTriggerMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event']]\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input', {\n        static: false\n      }]\n    }],\n    menu: [{\n      type: ViewChild,\n      args: ['menu', {\n        static: false\n      }]\n    }],\n    overlay: [{\n      type: ViewChild,\n      args: [CdkConnectedOverlay, {\n        static: false\n      }]\n    }],\n    cascaderItems: [{\n      type: ViewChildren,\n      args: [NzCascaderOptionComponent]\n    }],\n    nzColumnClassName: [{\n      type: Input\n    }],\n    nzNotFoundContent: [{\n      type: Input\n    }],\n    nzMenuClassName: [{\n      type: Input\n    }],\n    nzChangeOn: [{\n      type: Input\n    }],\n    nzLoadData: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzCascaderComponent.ngAcceptInputType_nzShowInput;\n  /** @type {?} */\n\n  NzCascaderComponent.ngAcceptInputType_nzShowArrow;\n  /** @type {?} */\n\n  NzCascaderComponent.ngAcceptInputType_nzAllowClear;\n  /** @type {?} */\n\n  NzCascaderComponent.ngAcceptInputType_nzAutoFocus;\n  /** @type {?} */\n\n  NzCascaderComponent.ngAcceptInputType_nzChangeOnSelect;\n  /** @type {?} */\n\n  NzCascaderComponent.ngAcceptInputType_nzDisabled;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.input;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.menu;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.overlay;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.cascaderItems;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzOptionRender;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzShowInput;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzShowArrow;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzAllowClear;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzAutoFocus;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzChangeOnSelect;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzDisabled;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzColumnClassName;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzExpandTrigger;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzValueProperty;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzLabelRender;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzLabelProperty;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzNotFoundContent;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzSize;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzShowSearch;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzPlaceHolder;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzMenuClassName;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzMenuStyle;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzMouseEnterDelay;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzMouseLeaveDelay;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzTriggerAction;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzChangeOn;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzLoadData;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzVisibleChange;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzSelectionChange;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzSelect;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzClear;\n  /**\n   * If the dropdown should show the empty content.\n   * `true` if there's no options.\n   * @type {?}\n   */\n\n  NzCascaderComponent.prototype.shouldShowEmpty;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.el;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.menuVisible;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.isLoading;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.labelRenderText;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.labelRenderContext;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.onChange;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.onTouched;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.positions;\n  /**\n   * Dropdown's with in pixel.\n   * @type {?}\n   */\n\n  NzCascaderComponent.prototype.dropdownWidthStyle;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.dropdownHeightStyle;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.isFocused;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.locale;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderComponent.prototype.destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderComponent.prototype.inputString;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderComponent.prototype.isOpening;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderComponent.prototype.delayMenuTimer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderComponent.prototype.delaySelectTimer;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.cascaderService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderComponent.prototype.i18nService;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.nzConfigService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzCascaderComponent.prototype.cdr;\n  /** @type {?} */\n\n  NzCascaderComponent.prototype.noAnimation;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: cascader.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzCascaderModule = /*#__PURE__*/_createClass(function NzCascaderModule() {\n  _classCallCheck(this, NzCascaderModule);\n});\n\nNzCascaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzCascaderModule\n});\nNzCascaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzCascaderModule_Factory(t) {\n    return new (t || NzCascaderModule)();\n  },\n  imports: [[CommonModule, FormsModule, OverlayModule, NzOutletModule, NzEmptyModule, NzHighlightModule, NzIconModule, NzInputModule, NzNoAnimationModule, NzOverlayModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzCascaderModule, {\n    declarations: function declarations() {\n      return [NzCascaderComponent, NzCascaderOptionComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, OverlayModule, NzOutletModule, NzEmptyModule, NzHighlightModule, NzIconModule, NzInputModule, NzNoAnimationModule, NzOverlayModule];\n    },\n    exports: function exports() {\n      return [NzCascaderComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzCascaderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, OverlayModule, NzOutletModule, NzEmptyModule, NzHighlightModule, NzIconModule, NzInputModule, NzNoAnimationModule, NzOverlayModule],\n      declarations: [NzCascaderComponent, NzCascaderOptionComponent],\n      exports: [NzCascaderComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-cascader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzCascaderComponent, NzCascaderModule, NzCascaderOptionComponent, NzCascaderService, isChildOption, isParentOption, isShowSearchObject };","map":{"version":3,"sources":["ng-zorro-antd/cascader/typings.ts","ng-zorro-antd/cascader/utils.ts","ng-zorro-antd/cascader/cascader-li.component.ts","ng-zorro-antd/cascader/cascader.service.ts","ng-zorro-antd/cascader/cascader.component.ts","ng-zorro-antd/cascader/cascader.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type NzCascaderExpandTrigger = 'click' | 'hover';\nexport type NzCascaderTriggerType = 'click' | 'hover';\nexport type NzCascaderSize = 'small' | 'large' | 'default';\n\nexport type NzCascaderFilter = (searchValue: string, path: NzCascaderOption[]) => boolean;\nexport type NzCascaderSorter = (a: NzCascaderOption[], b: NzCascaderOption[], inputValue: string) => number;\n\n/**\n * @deprecated Use the prefixed version.\n */\nexport interface CascaderOption {\n  value?: NzSafeAny;\n  label?: string;\n  title?: string;\n  disabled?: boolean;\n  loading?: boolean;\n  isLeaf?: boolean;\n  parent?: NzCascaderOption;\n  children?: NzCascaderOption[];\n\n  [key: string]: NzSafeAny;\n}\n\nexport type NzCascaderOption = CascaderOption;\n\n/**\n * @deprecated Use the prefixed version.\n */\nexport interface CascaderSearchOption extends NzCascaderOption {\n  path: NzCascaderOption[];\n}\n\nexport type NzCascaderSearchOption = CascaderSearchOption;\n\nexport interface NzShowSearchOptions {\n  filter?: NzCascaderFilter;\n  sorter?: NzCascaderSorter;\n}\n\nexport function isShowSearchObject(options: NzShowSearchOptions | boolean): options is NzShowSearchOptions {\n  return typeof options !== 'boolean';\n}\n\n/**\n * To avoid circular dependency, provide an interface of `NzCascaderComponent`\n * for `NzCascaderService`.\n */\nexport interface NzCascaderComponentAsSource {\n  inputValue: string;\n  nzShowSearch: NzShowSearchOptions | boolean;\n  nzLabelProperty: string;\n  nzValueProperty: string;\n  nzChangeOnSelect: boolean;\n\n  nzChangeOn?(option: NzCascaderOption, level: number): boolean;\n\n  nzLoadData?(node: NzCascaderOption, index: number): PromiseLike<NzSafeAny>;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzCascaderOption } from './typings';\n\nexport function isChildOption(o: NzCascaderOption): boolean {\n  return o.isLeaf || !o.children || !o.children.length;\n}\n\nexport function isParentOption(o: NzCascaderOption): boolean {\n  return !!o.children && !!o.children.length && !o.isLeaf;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzCascaderOption } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: '[nz-cascader-option]',\n  exportAs: 'nzCascaderOption',\n  template: `\n    <ng-container *ngIf=\"optionTemplate; else defaultOptionTemplate\">\n      <ng-template [ngTemplateOutlet]=\"optionTemplate\" [ngTemplateOutletContext]=\"{ $implicit: option, index: columnIndex }\"></ng-template>\n    </ng-container>\n    <ng-template #defaultOptionTemplate>\n      <span [innerHTML]=\"optionLabel | nzHighlight: highlightText:'g':'ant-cascader-menu-item-keyword'\"></span>\n    </ng-template>\n    <span *ngIf=\"!option.isLeaf || option.children?.length || option.loading\" class=\"ant-cascader-menu-item-expand-icon\">\n      <i nz-icon [nzType]=\"option.loading ? 'loading' : 'right'\"></i>\n    </span>\n  `,\n  host: {\n    '[attr.title]': 'option.title || optionLabel',\n    '[class.ant-cascader-menu-item-active]': 'activated',\n    '[class.ant-cascader-menu-item-expand]': '!option.isLeaf',\n    '[class.ant-cascader-menu-item-disabled]': 'option.disabled'\n  }\n})\nexport class NzCascaderOptionComponent {\n  @Input() optionTemplate: TemplateRef<NzCascaderOption> | null = null;\n  @Input() option!: NzCascaderOption;\n  @Input() activated = false;\n  @Input() highlightText!: string;\n  @Input() nzLabelProperty = 'label';\n  @Input() columnIndex!: number;\n\n  constructor(private cdr: ChangeDetectorRef, elementRef: ElementRef, renderer: Renderer2) {\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-menu-item');\n  }\n\n  get optionLabel(): string {\n    return this.option[this.nzLabelProperty];\n  }\n\n  markForCheck(): void {\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { arraysEqual, isNotNil } from 'ng-zorro-antd/core/util';\n\nimport { isShowSearchObject, NzCascaderComponentAsSource, NzCascaderFilter, NzCascaderOption, NzCascaderSearchOption } from './typings';\nimport { isChildOption, isParentOption } from './utils';\n\n/**\n * All data is stored and parsed in NzCascaderService.\n */\n@Injectable()\nexport class NzCascaderService implements OnDestroy {\n  /** Activated options in each column. */\n  activatedOptions: NzCascaderOption[] = [];\n\n  /** An array to store cascader items arranged in different layers. */\n  columns: NzCascaderOption[][] = [];\n\n  /** If user has entered searching mode. */\n  inSearchingMode = false;\n\n  /** Selected options would be output to user. */\n  selectedOptions: NzCascaderOption[] = [];\n\n  values: NzSafeAny[] = [];\n\n  readonly $loading = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Emit an event to notify cascader it needs to redraw because activated or\n   * selected options are changed.\n   */\n  readonly $redraw = new Subject<void>();\n\n  /**\n   * Emit an event when an option gets selected.\n   * Emit true if a leaf options is selected.\n   */\n  readonly $optionSelected = new Subject<{\n    option: NzCascaderOption;\n    index: number;\n  } | null>();\n\n  /**\n   * Emit an event to notify cascader it needs to quit searching mode.\n   * Only emit when user do select a searching option.\n   */\n  readonly $quitSearching = new Subject<void>();\n\n  /** To hold columns before entering searching mode. */\n  private columnsSnapshot: NzCascaderOption[][] = [[]];\n\n  /** To hold activated options before entering searching mode. */\n  private activatedOptionsSnapshot: NzCascaderOption[] = [];\n\n  private cascaderComponent!: NzCascaderComponentAsSource;\n\n  /** Return cascader options in the first layer. */\n  get nzOptions(): NzCascaderOption[] {\n    return this.columns[0];\n  }\n\n  ngOnDestroy(): void {\n    this.$redraw.complete();\n    this.$quitSearching.complete();\n    this.$optionSelected.complete();\n    this.$loading.complete();\n  }\n\n  /**\n   * Make sure that value matches what is displayed in the dropdown.\n   */\n  syncOptions(first: boolean = false): void {\n    const values = this.values;\n    const hasValue = values && values.length;\n    const lastColumnIndex = values.length - 1;\n    const initColumnWithIndex = (columnIndex: number) => {\n      const activatedOptionSetter = () => {\n        const currentValue = values[columnIndex];\n\n        if (!isNotNil(currentValue)) {\n          this.$redraw.next();\n          return;\n        }\n\n        const option =\n          this.findOptionWithValue(columnIndex, values[columnIndex]) ||\n          (typeof currentValue === 'object'\n            ? currentValue\n            : {\n                [`${this.cascaderComponent.nzValueProperty}`]: currentValue,\n                [`${this.cascaderComponent.nzLabelProperty}`]: currentValue\n              });\n\n        this.setOptionActivated(option, columnIndex, false, false);\n\n        if (columnIndex < lastColumnIndex) {\n          initColumnWithIndex(columnIndex + 1);\n        } else {\n          this.dropBehindColumns(columnIndex);\n          this.selectedOptions = [...this.activatedOptions];\n          this.$redraw.next();\n        }\n      };\n\n      if (this.isLoaded(columnIndex) || !this.cascaderComponent.nzLoadData) {\n        activatedOptionSetter();\n      } else {\n        const option = this.activatedOptions[columnIndex - 1] || {};\n        this.loadChildren(option, columnIndex - 1, activatedOptionSetter);\n      }\n    };\n\n    this.activatedOptions = [];\n    this.selectedOptions = [];\n\n    if (first && this.cascaderComponent.nzLoadData && !hasValue) {\n      // Should also notify the component that value changes. Fix #3480.\n      this.$redraw.next();\n      return;\n    } else {\n      initColumnWithIndex(0);\n    }\n  }\n\n  /**\n   * Bind cascader component so this service could use inputs.\n   */\n  withComponent(cascaderComponent: NzCascaderComponentAsSource): void {\n    this.cascaderComponent = cascaderComponent;\n  }\n\n  /**\n   * Reset all options. Rebuild searching options if in searching mode.\n   */\n  withOptions(options: NzCascaderOption[] | null): void {\n    this.columnsSnapshot = this.columns = options && options.length ? [options] : [];\n\n    if (this.inSearchingMode) {\n      this.prepareSearchOptions(this.cascaderComponent.inputValue);\n    } else if (this.columns.length) {\n      this.syncOptions();\n    }\n  }\n\n  /**\n   * Try to set a option as activated.\n   * @param option Cascader option\n   * @param columnIndex Of which column this option is in\n   * @param performSelect Select\n   * @param loadingChildren Try to load children asynchronously.\n   */\n  setOptionActivated(option: NzCascaderOption, columnIndex: number, performSelect: boolean = false, loadingChildren: boolean = true): void {\n    if (option.disabled) {\n      return;\n    }\n\n    this.activatedOptions[columnIndex] = option;\n    this.trackAncestorActivatedOptions(columnIndex);\n    this.dropBehindActivatedOptions(columnIndex);\n\n    const isParent = isParentOption(option);\n\n    if (isParent) {\n      // Parent option that has children.\n      this.setColumnData(option.children!, columnIndex + 1, option);\n    } else if (!option.isLeaf && loadingChildren) {\n      // Parent option that should try to load children asynchronously.\n      this.loadChildren(option, columnIndex);\n    } else if (option.isLeaf) {\n      // Leaf option.\n      this.dropBehindColumns(columnIndex);\n    }\n\n    // Actually perform selection to make an options not only activated but also selected.\n    if (performSelect) {\n      this.setOptionSelected(option, columnIndex);\n    }\n\n    this.$redraw.next();\n  }\n\n  setOptionSelected(option: NzCascaderOption, index: number): void {\n    const changeOn = this.cascaderComponent.nzChangeOn;\n    const shouldPerformSelection = (o: NzCascaderOption, i: number): boolean => {\n      return typeof changeOn === 'function' ? changeOn(o, i) : false;\n    };\n\n    if (option.isLeaf || this.cascaderComponent.nzChangeOnSelect || shouldPerformSelection(option, index)) {\n      this.selectedOptions = [...this.activatedOptions];\n      this.prepareEmitValue();\n      this.$redraw.next();\n      this.$optionSelected.next({ option, index });\n    }\n  }\n\n  setOptionDeactivatedSinceColumn(column: number): void {\n    this.dropBehindActivatedOptions(column - 1);\n    this.dropBehindColumns(column);\n    this.$redraw.next();\n  }\n\n  /**\n   * Set a searching option as selected, finishing up things.\n   * @param option\n   */\n  setSearchOptionSelected(option: NzCascaderSearchOption): void {\n    this.activatedOptions = [option];\n    this.selectedOptions = [...option.path];\n    this.prepareEmitValue();\n    this.$redraw.next();\n    this.$optionSelected.next({ option, index: 0 });\n\n    setTimeout(() => {\n      // Reset data and tell UI only to remove input and reset dropdown width style.\n      this.$quitSearching.next();\n      this.$redraw.next();\n      this.inSearchingMode = false;\n      this.columns = [...this.columnsSnapshot];\n      this.activatedOptions = [...this.selectedOptions];\n    }, 200);\n  }\n\n  /**\n   * Filter cascader options to reset `columns`.\n   * @param searchValue The string user wants to search.\n   */\n  prepareSearchOptions(searchValue: string): void {\n    const results: NzCascaderOption[] = []; // Search results only have one layer.\n    const path: NzCascaderOption[] = [];\n    const defaultFilter: NzCascaderFilter = (i, p) => {\n      return p.some(o => {\n        const label = this.getOptionLabel(o);\n        return !!label && label.indexOf(i) !== -1;\n      });\n    };\n    const showSearch = this.cascaderComponent.nzShowSearch;\n    const filter = isShowSearchObject(showSearch) && showSearch.filter ? showSearch.filter : defaultFilter;\n    const sorter = isShowSearchObject(showSearch) && showSearch.sorter ? showSearch.sorter : null;\n    const loopChild = (node: NzCascaderOption, forceDisabled = false) => {\n      path.push(node);\n      const cPath = Array.from(path);\n      if (filter(searchValue, cPath)) {\n        const disabled = forceDisabled || node.disabled;\n        const option: NzCascaderSearchOption = {\n          disabled,\n          isLeaf: true,\n          path: cPath,\n          [this.cascaderComponent.nzLabelProperty]: cPath.map(p => this.getOptionLabel(p)).join(' / ')\n        };\n        results.push(option);\n      }\n      path.pop();\n    };\n    const loopParent = (node: NzCascaderOption, forceDisabled = false) => {\n      const disabled = forceDisabled || node.disabled;\n      path.push(node);\n      node.children!.forEach(sNode => {\n        if (!sNode.parent) {\n          sNode.parent = node;\n        }\n        if (!sNode.isLeaf) {\n          loopParent(sNode, disabled);\n        }\n        if (sNode.isLeaf || !sNode.children || !sNode.children.length) {\n          loopChild(sNode, disabled);\n        }\n      });\n      path.pop();\n    };\n\n    if (!this.columnsSnapshot.length) {\n      this.columns = [[]];\n      return;\n    }\n\n    this.columnsSnapshot[0].forEach(o => (isChildOption(o) ? loopChild(o) : loopParent(o)));\n\n    if (sorter) {\n      results.sort((a, b) => sorter(a.path, b.path, searchValue));\n    }\n\n    this.columns = [results];\n\n    this.$redraw.next(); // Search results may be empty, so should redraw.\n  }\n\n  /**\n   * Toggle searching mode by UI. It deals with things not directly related to UI.\n   * @param toSearching If this cascader is entering searching mode\n   */\n  toggleSearchingMode(toSearching: boolean): void {\n    this.inSearchingMode = toSearching;\n\n    if (toSearching) {\n      this.activatedOptionsSnapshot = [...this.activatedOptions];\n      this.activatedOptions = [];\n      this.selectedOptions = [];\n      this.$redraw.next();\n    } else {\n      // User quit searching mode without selecting an option.\n      this.activatedOptions = [...this.activatedOptionsSnapshot];\n      this.selectedOptions = [...this.activatedOptions];\n      this.columns = [...this.columnsSnapshot];\n      this.syncOptions();\n      this.$redraw.next();\n    }\n  }\n\n  /**\n   * Clear selected options.\n   */\n  clear(): void {\n    this.values = [];\n    this.selectedOptions = [];\n    this.activatedOptions = [];\n    this.dropBehindColumns(0);\n    this.prepareEmitValue();\n    this.$redraw.next();\n    this.$optionSelected.next(null);\n  }\n\n  getOptionLabel(o: NzCascaderOption): string {\n    return o[this.cascaderComponent.nzLabelProperty || 'label'] as string;\n  }\n\n  getOptionValue(o: NzCascaderOption): NzSafeAny {\n    return o[this.cascaderComponent.nzValueProperty || 'value'];\n  }\n\n  /**\n   * Try to insert options into a column.\n   * @param options Options to insert\n   * @param columnIndex Position\n   */\n  private setColumnData(options: NzCascaderOption[], columnIndex: number, parent: NzCascaderOption): void {\n    const existingOptions = this.columns[columnIndex];\n    if (!arraysEqual(existingOptions, options)) {\n      options.forEach(o => (o.parent = parent));\n      this.columns[columnIndex] = options;\n      this.dropBehindColumns(columnIndex);\n    }\n  }\n\n  /**\n   * Set all ancestor options as activated.\n   */\n  private trackAncestorActivatedOptions(startIndex: number): void {\n    for (let i = startIndex - 1; i >= 0; i--) {\n      if (!this.activatedOptions[i]) {\n        this.activatedOptions[i] = this.activatedOptions[i + 1].parent!;\n      }\n    }\n  }\n\n  private dropBehindActivatedOptions(lastReserveIndex: number): void {\n    this.activatedOptions = this.activatedOptions.splice(0, lastReserveIndex + 1);\n  }\n\n  private dropBehindColumns(lastReserveIndex: number): void {\n    if (lastReserveIndex < this.columns.length - 1) {\n      this.columns = this.columns.slice(0, lastReserveIndex + 1);\n    }\n  }\n\n  /**\n   * Load children of an option asynchronously.\n   */\n  loadChildren(option: NzCascaderOption | NzSafeAny, columnIndex: number, success?: VoidFunction, failure?: VoidFunction): void {\n    const loadFn = this.cascaderComponent.nzLoadData;\n\n    if (loadFn) {\n      // If there isn't any option in columns.\n      this.$loading.next(columnIndex < 0);\n\n      if (typeof option === 'object') {\n        option.loading = true;\n      }\n\n      loadFn(option, columnIndex).then(\n        () => {\n          option.loading = false;\n          if (option.children) {\n            this.setColumnData(option.children, columnIndex + 1, option);\n          }\n          if (success) {\n            success();\n          }\n          this.$loading.next(false);\n          this.$redraw.next();\n        },\n        () => {\n          option.loading = false;\n          option.isLeaf = true;\n          if (failure) {\n            failure();\n          }\n          this.$redraw.next();\n        }\n      );\n    }\n  }\n\n  private isLoaded(index: number): boolean {\n    return this.columns[index] && this.columns[index].length > 0;\n  }\n\n  /**\n   * Find a option that has a given value in a given column.\n   */\n  private findOptionWithValue(columnIndex: number, value: NzCascaderOption | NzSafeAny): NzCascaderOption | null {\n    const targetColumn = this.columns[columnIndex];\n    if (targetColumn) {\n      const v = typeof value === 'object' ? this.getOptionValue(value) : value;\n      return targetColumn.find(o => v === this.getOptionValue(o))!;\n    }\n    return null;\n  }\n\n  private prepareEmitValue(): void {\n    this.values = this.selectedOptions.map(o => this.getOptionValue(o));\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { BACKSPACE, DOWN_ARROW, ENTER, ESCAPE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { CdkConnectedOverlay, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { slideMotion } from 'ng-zorro-antd/core/animation';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { DEFAULT_CASCADER_POSITIONS } from 'ng-zorro-antd/core/overlay';\nimport { BooleanInput, NgClassType, NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, toArray } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { NzCascaderI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';\nimport { NzCascaderOptionComponent } from './cascader-li.component';\nimport { NzCascaderService } from './cascader.service';\nimport {\n  NzCascaderComponentAsSource,\n  NzCascaderExpandTrigger,\n  NzCascaderOption,\n  NzCascaderSearchOption,\n  NzCascaderSize,\n  NzCascaderTriggerType,\n  NzShowSearchOptions\n} from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'cascader';\nconst defaultDisplayRender = (labels: string[]) => labels.join(' / ');\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-cascader, [nz-cascader]',\n  exportAs: 'nzCascader',\n  preserveWhitespaces: false,\n  template: `\n    <div cdkOverlayOrigin #origin=\"cdkOverlayOrigin\" #trigger>\n      <div *ngIf=\"nzShowInput\">\n        <input\n          #input\n          nz-input\n          class=\"ant-cascader-input\"\n          [class.ant-cascader-input-disabled]=\"nzDisabled\"\n          [class.ant-cascader-input-lg]=\"nzSize === 'large'\"\n          [class.ant-cascader-input-sm]=\"nzSize === 'small'\"\n          [attr.autoComplete]=\"'off'\"\n          [attr.placeholder]=\"showPlaceholder ? nzPlaceHolder || locale?.placeholder : null\"\n          [attr.autofocus]=\"nzAutoFocus ? 'autofocus' : null\"\n          [readonly]=\"!nzShowSearch\"\n          [disabled]=\"nzDisabled\"\n          [nzSize]=\"nzSize\"\n          [(ngModel)]=\"inputValue\"\n          (blur)=\"handleInputBlur()\"\n          (focus)=\"handleInputFocus()\"\n          (change)=\"$event.stopPropagation()\"\n        />\n        <i\n          *ngIf=\"clearIconVisible\"\n          nz-icon\n          nzType=\"close-circle\"\n          nzTheme=\"fill\"\n          class=\"ant-cascader-picker-clear\"\n          (click)=\"clearSelection($event)\"\n        ></i>\n        <i\n          *ngIf=\"nzShowArrow && !isLoading\"\n          nz-icon\n          nzType=\"down\"\n          class=\"ant-cascader-picker-arrow\"\n          [class.ant-cascader-picker-arrow-expand]=\"menuVisible\"\n        >\n        </i>\n        <i *ngIf=\"isLoading\" nz-icon nzType=\"loading\" class=\"ant-cascader-picker-arrow\"></i>\n        <span\n          class=\"ant-cascader-picker-label\"\n          [class.ant-cascader-show-search]=\"!!nzShowSearch\"\n          [class.ant-focusd]=\"!!nzShowSearch && isFocused && !inputValue\"\n        >\n          <ng-container *ngIf=\"!isLabelRenderTemplate; else labelTemplate\">{{ labelRenderText }}</ng-container>\n          <ng-template #labelTemplate>\n            <ng-template [ngTemplateOutlet]=\"nzLabelRender\" [ngTemplateOutletContext]=\"labelRenderContext\"></ng-template>\n          </ng-template>\n        </span>\n      </div>\n      <ng-content></ng-content>\n    </div>\n    <ng-template\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      cdkConnectedOverlayHasBackdrop\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayPositions]=\"positions\"\n      [cdkConnectedOverlayTransformOriginOn]=\"'.ant-cascader-menus'\"\n      (backdropClick)=\"closeMenu()\"\n      (detach)=\"closeMenu()\"\n      [cdkConnectedOverlayOpen]=\"menuVisible\"\n    >\n      <div\n        #menu\n        class=\"ant-cascader-menus\"\n        [class.ant-cascader-menus-hidden]=\"!menuVisible\"\n        [ngClass]=\"menuCls\"\n        [ngStyle]=\"nzMenuStyle\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@slideMotion]=\"'enter'\"\n        (mouseleave)=\"onTriggerMouseLeave($event)\"\n      >\n        <ul\n          *ngIf=\"shouldShowEmpty; else hasOptionsTemplate\"\n          class=\"ant-cascader-menu\"\n          [style.width]=\"dropdownWidthStyle\"\n          [style.height]=\"dropdownHeightStyle\"\n        >\n          <li class=\"ant-cascader-menu-item ant-cascader-menu-item-expanded ant-cascader-menu-item-disabled\">\n            <nz-embed-empty [nzComponentName]=\"'cascader'\" [specificContent]=\"nzNotFoundContent\"></nz-embed-empty>\n          </li>\n        </ul>\n        <ng-template #hasOptionsTemplate>\n          <ul\n            *ngFor=\"let options of cascaderService.columns; let i = index\"\n            class=\"ant-cascader-menu\"\n            [ngClass]=\"menuColumnCls\"\n            [style.height]=\"dropdownHeightStyle\"\n            [style.width]=\"dropdownWidthStyle\"\n          >\n            <li\n              nz-cascader-option\n              *ngFor=\"let option of options\"\n              [columnIndex]=\"i\"\n              [nzLabelProperty]=\"nzLabelProperty\"\n              [optionTemplate]=\"nzOptionRender\"\n              [activated]=\"isOptionActivated(option, i)\"\n              [highlightText]=\"inSearchingMode ? inputValue : ''\"\n              [option]=\"option\"\n              (mouseenter)=\"onOptionMouseEnter(option, i, $event)\"\n              (mouseleave)=\"onOptionMouseLeave(option, i, $event)\"\n              (click)=\"onOptionClick(option, i, $event)\"\n            ></li>\n          </ul>\n        </ng-template>\n      </div>\n    </ng-template>\n  `,\n  animations: [slideMotion],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCascaderComponent),\n      multi: true\n    },\n    NzCascaderService\n  ],\n  host: {\n    '[attr.tabIndex]': '\"0\"',\n    '[class.ant-cascader-lg]': 'nzSize === \"large\"',\n    '[class.ant-cascader-sm]': 'nzSize === \"small\"',\n    '[class.ant-cascader-picker-disabled]': 'nzDisabled',\n    '[class.ant-cascader-picker-open]': 'menuVisible',\n    '[class.ant-cascader-picker-with-value]': '!!inputValue',\n    '[class.ant-cascader-focused]': 'isFocused'\n  }\n})\nexport class NzCascaderComponent implements NzCascaderComponentAsSource, OnInit, OnDestroy, ControlValueAccessor {\n  static ngAcceptInputType_nzShowInput: BooleanInput;\n  static ngAcceptInputType_nzShowArrow: BooleanInput;\n  static ngAcceptInputType_nzAllowClear: BooleanInput;\n  static ngAcceptInputType_nzAutoFocus: BooleanInput;\n  static ngAcceptInputType_nzChangeOnSelect: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n\n  @ViewChild('input', { static: false }) input!: ElementRef;\n  @ViewChild('menu', { static: false }) menu!: ElementRef;\n  @ViewChild(CdkConnectedOverlay, { static: false }) overlay!: CdkConnectedOverlay;\n  @ViewChildren(NzCascaderOptionComponent) cascaderItems!: QueryList<NzCascaderOptionComponent>;\n\n  @Input() nzOptionRender: TemplateRef<{ $implicit: NzCascaderOption; index: number }> | null = null;\n  @Input() @InputBoolean() nzShowInput = true;\n  @Input() @InputBoolean() nzShowArrow = true;\n  @Input() @InputBoolean() nzAllowClear = true;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() @InputBoolean() nzChangeOnSelect = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() nzColumnClassName?: string;\n  @Input() nzExpandTrigger: NzCascaderExpandTrigger = 'click';\n  @Input() nzValueProperty = 'value';\n  @Input() nzLabelRender: TemplateRef<void> | null = null;\n  @Input() nzLabelProperty = 'label';\n  @Input() nzNotFoundContent?: string | TemplateRef<void>;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: NzCascaderSize = 'default';\n  @Input() nzShowSearch: boolean | NzShowSearchOptions = false;\n  @Input() nzPlaceHolder: string = '';\n  @Input() nzMenuClassName?: string;\n  @Input() nzMenuStyle: NgStyleInterface | null = null;\n  @Input() nzMouseEnterDelay: number = 150; // ms\n  @Input() nzMouseLeaveDelay: number = 150; // ms\n  @Input() nzTriggerAction: NzCascaderTriggerType | NzCascaderTriggerType[] = ['click'] as NzCascaderTriggerType[];\n  @Input() nzChangeOn?: (option: NzCascaderOption, level: number) => boolean;\n  @Input() nzLoadData?: (node: NzCascaderOption, index: number) => PromiseLike<NzSafeAny>;\n\n  @Input()\n  get nzOptions(): NzCascaderOption[] | null {\n    return this.cascaderService.nzOptions;\n  }\n\n  set nzOptions(options: NzCascaderOption[] | null) {\n    this.cascaderService.withOptions(options);\n  }\n\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n  @Output() readonly nzSelectionChange = new EventEmitter<NzCascaderOption[]>();\n  @Output() readonly nzSelect = new EventEmitter<{ option: NzCascaderOption; index: number } | null>();\n  @Output() readonly nzClear = new EventEmitter<void>();\n\n  /**\n   * If the dropdown should show the empty content.\n   * `true` if there's no options.\n   */\n  shouldShowEmpty: boolean = false;\n\n  el: HTMLElement;\n  menuVisible = false;\n  isLoading = false;\n  labelRenderText?: string;\n  labelRenderContext = {};\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n  positions: ConnectionPositionPair[] = [...DEFAULT_CASCADER_POSITIONS];\n\n  /**\n   * Dropdown's with in pixel.\n   */\n  dropdownWidthStyle?: string;\n  dropdownHeightStyle: 'auto' | '' = '';\n  isFocused = false;\n\n  locale!: NzCascaderI18nInterface;\n\n  private destroy$ = new Subject<void>();\n  private inputString = '';\n  private isOpening = false;\n  private delayMenuTimer: number | null = null;\n  private delaySelectTimer: number | null = null;\n\n  get inSearchingMode(): boolean {\n    return this.cascaderService.inSearchingMode;\n  }\n\n  set inputValue(inputValue: string) {\n    this.inputString = inputValue;\n    this.toggleSearchingMode(!!inputValue);\n  }\n\n  get inputValue(): string {\n    return this.inputString;\n  }\n\n  get menuCls(): NgClassType {\n    return { [`${this.nzMenuClassName}`]: !!this.nzMenuClassName };\n  }\n\n  get menuColumnCls(): NgClassType {\n    return { [`${this.nzColumnClassName}`]: !!this.nzColumnClassName };\n  }\n\n  private get hasInput(): boolean {\n    return !!this.inputValue;\n  }\n\n  private get hasValue(): boolean {\n    return this.cascaderService.values && this.cascaderService.values.length > 0;\n  }\n\n  get showPlaceholder(): boolean {\n    return !(this.hasInput || this.hasValue);\n  }\n\n  get clearIconVisible(): boolean {\n    return this.nzAllowClear && !this.nzDisabled && (this.hasValue || this.hasInput);\n  }\n\n  get isLabelRenderTemplate(): boolean {\n    return !!this.nzLabelRender;\n  }\n\n  constructor(\n    public cascaderService: NzCascaderService,\n    private i18nService: NzI18nService,\n    public nzConfigService: NzConfigService,\n    private cdr: ChangeDetectorRef,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\n  ) {\n    this.el = elementRef.nativeElement;\n    this.cascaderService.withComponent(this);\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader');\n    renderer.addClass(elementRef.nativeElement, 'ant-cascader-picker');\n  }\n\n  ngOnInit(): void {\n    const srv = this.cascaderService;\n\n    srv.$redraw.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      // These operations would not mutate data.\n      this.checkChildren();\n      this.setDisplayLabel();\n      this.reposition();\n      this.setDropdownStyles();\n\n      this.cdr.markForCheck();\n    });\n\n    srv.$loading.pipe(takeUntil(this.destroy$)).subscribe(loading => {\n      this.isLoading = loading;\n    });\n\n    srv.$optionSelected.pipe(takeUntil(this.destroy$)).subscribe(data => {\n      if (!data) {\n        this.onChange([]);\n        this.nzSelect.emit(null);\n        this.nzSelectionChange.emit([]);\n      } else {\n        const { option, index } = data;\n        const shouldClose = option.isLeaf;\n        if (shouldClose) {\n          this.delaySetMenuVisible(false);\n        }\n        this.onChange(this.cascaderService.values);\n        this.nzSelectionChange.emit(this.cascaderService.selectedOptions);\n        this.nzSelect.emit({ option, index });\n        this.cdr.markForCheck();\n      }\n    });\n\n    srv.$quitSearching.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.inputString = '';\n      this.dropdownWidthStyle = '';\n    });\n\n    this.i18nService.localeChange.pipe(startWith(), takeUntil(this.destroy$)).subscribe(() => {\n      this.setLocale();\n    });\n\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.clearDelayMenuTimer();\n    this.clearDelaySelectTimer();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: NzSafeAny): void {\n    this.cascaderService.values = toArray(value);\n    this.cascaderService.syncOptions(true);\n  }\n\n  delaySetMenuVisible(visible: boolean, delay: number = 100, setOpening: boolean = false): void {\n    this.clearDelayMenuTimer();\n    if (delay) {\n      if (visible && setOpening) {\n        this.isOpening = true;\n      }\n      this.delayMenuTimer = setTimeout(() => {\n        this.setMenuVisible(visible);\n        this.cdr.detectChanges();\n        this.clearDelayMenuTimer();\n        if (visible) {\n          setTimeout(() => {\n            this.isOpening = false;\n          }, 100);\n        }\n      }, delay);\n    } else {\n      this.setMenuVisible(visible);\n    }\n  }\n\n  setMenuVisible(visible: boolean): void {\n    if (this.nzDisabled || this.menuVisible === visible) {\n      return;\n    }\n    if (visible) {\n      this.cascaderService.syncOptions();\n    }\n\n    this.menuVisible = visible;\n    this.nzVisibleChange.emit(visible);\n    this.cdr.detectChanges();\n  }\n\n  private clearDelayMenuTimer(): void {\n    if (this.delayMenuTimer) {\n      clearTimeout(this.delayMenuTimer);\n      this.delayMenuTimer = null;\n    }\n  }\n\n  clearSelection(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.labelRenderText = '';\n    this.labelRenderContext = {};\n    this.inputValue = '';\n    this.setMenuVisible(false);\n    this.cascaderService.clear();\n  }\n\n  getSubmitValue(): NzSafeAny[] {\n    return this.cascaderService.selectedOptions.map(o => this.cascaderService.getOptionValue(o));\n  }\n\n  focus(): void {\n    if (!this.isFocused) {\n      (this.input ? this.input.nativeElement : this.el).focus();\n      this.isFocused = true;\n    }\n  }\n\n  blur(): void {\n    if (this.isFocused) {\n      (this.input ? this.input.nativeElement : this.el).blur();\n      this.isFocused = false;\n    }\n  }\n\n  handleInputBlur(): void {\n    this.menuVisible ? this.focus() : this.blur();\n  }\n\n  handleInputFocus(): void {\n    this.focus();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (\n      keyCode !== DOWN_ARROW &&\n      keyCode !== UP_ARROW &&\n      keyCode !== LEFT_ARROW &&\n      keyCode !== RIGHT_ARROW &&\n      keyCode !== ENTER &&\n      keyCode !== BACKSPACE &&\n      keyCode !== ESCAPE\n    ) {\n      return;\n    }\n\n    // Press any keys above to reopen menu.\n    if (!this.menuVisible && keyCode !== BACKSPACE && keyCode !== ESCAPE) {\n      return this.setMenuVisible(true);\n    }\n\n    // Make these keys work as default in searching mode.\n    if (this.inSearchingMode && (keyCode === BACKSPACE || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW)) {\n      return;\n    }\n\n    // Interact with the component.\n    if (this.menuVisible) {\n      event.preventDefault();\n      if (keyCode === DOWN_ARROW) {\n        this.moveUpOrDown(false);\n      } else if (keyCode === UP_ARROW) {\n        this.moveUpOrDown(true);\n      } else if (keyCode === LEFT_ARROW) {\n        this.moveLeft();\n      } else if (keyCode === RIGHT_ARROW) {\n        this.moveRight();\n      } else if (keyCode === ENTER) {\n        this.onEnter();\n      }\n    }\n  }\n\n  @HostListener('click')\n  onTriggerClick(): void {\n    if (this.nzDisabled) {\n      return;\n    }\n    if (this.nzShowSearch) {\n      this.focus();\n    }\n    if (this.isActionTrigger('click')) {\n      this.delaySetMenuVisible(!this.menuVisible, 100);\n    }\n    this.onTouched();\n  }\n\n  @HostListener('mouseenter')\n  onTriggerMouseEnter(): void {\n    if (this.nzDisabled || !this.isActionTrigger('hover')) {\n      return;\n    }\n\n    this.delaySetMenuVisible(true, this.nzMouseEnterDelay, true);\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  onTriggerMouseLeave(event: MouseEvent): void {\n    if (this.nzDisabled || !this.menuVisible || this.isOpening || !this.isActionTrigger('hover')) {\n      event.preventDefault();\n      return;\n    }\n    const mouseTarget = event.relatedTarget as HTMLElement;\n    const hostEl = this.el;\n    const menuEl = this.menu && (this.menu.nativeElement as HTMLElement);\n    if (hostEl.contains(mouseTarget) || (menuEl && menuEl.contains(mouseTarget))) {\n      return;\n    }\n    this.delaySetMenuVisible(false, this.nzMouseLeaveDelay);\n  }\n\n  onOptionMouseEnter(option: NzCascaderOption, columnIndex: number, event: Event): void {\n    event.preventDefault();\n    if (this.nzExpandTrigger === 'hover') {\n      if (!option.isLeaf) {\n        this.delaySetOptionActivated(option, columnIndex, false);\n      } else {\n        this.cascaderService.setOptionDeactivatedSinceColumn(columnIndex);\n      }\n    }\n  }\n\n  onOptionMouseLeave(option: NzCascaderOption, _columnIndex: number, event: Event): void {\n    event.preventDefault();\n    if (this.nzExpandTrigger === 'hover' && !option.isLeaf) {\n      this.clearDelaySelectTimer();\n    }\n  }\n\n  onOptionClick(option: NzCascaderOption, columnIndex: number, event: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (option && option.disabled) {\n      return;\n    }\n    this.el.focus();\n    this.inSearchingMode\n      ? this.cascaderService.setSearchOptionSelected(option as NzCascaderSearchOption)\n      : this.cascaderService.setOptionActivated(option, columnIndex, true);\n  }\n\n  private isActionTrigger(action: 'click' | 'hover'): boolean {\n    return typeof this.nzTriggerAction === 'string' ? this.nzTriggerAction === action : this.nzTriggerAction.indexOf(action) !== -1;\n  }\n\n  private onEnter(): void {\n    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n    const option = this.cascaderService.activatedOptions[columnIndex];\n    if (option && !option.disabled) {\n      this.inSearchingMode\n        ? this.cascaderService.setSearchOptionSelected(option as NzCascaderSearchOption)\n        : this.cascaderService.setOptionActivated(option, columnIndex, true);\n    }\n  }\n\n  private moveUpOrDown(isUp: boolean): void {\n    const columnIndex = Math.max(this.cascaderService.activatedOptions.length - 1, 0);\n    const activeOption = this.cascaderService.activatedOptions[columnIndex];\n    const options = this.cascaderService.columns[columnIndex] || [];\n    const length = options.length;\n    let nextIndex = -1;\n    if (!activeOption) {\n      // Not selected options in this column\n      nextIndex = isUp ? length : -1;\n    } else {\n      nextIndex = options.indexOf(activeOption);\n    }\n\n    while (true) {\n      nextIndex = isUp ? nextIndex - 1 : nextIndex + 1;\n      if (nextIndex < 0 || nextIndex >= length) {\n        break;\n      }\n      const nextOption = options[nextIndex];\n      if (!nextOption || nextOption.disabled) {\n        continue;\n      }\n      this.cascaderService.setOptionActivated(nextOption, columnIndex);\n      break;\n    }\n  }\n\n  private moveLeft(): void {\n    const options = this.cascaderService.activatedOptions;\n    if (options.length) {\n      options.pop(); // Remove the last one\n    }\n  }\n\n  private moveRight(): void {\n    const length = this.cascaderService.activatedOptions.length;\n    const options = this.cascaderService.columns[length];\n    if (options && options.length) {\n      const nextOpt = options.find(o => !o.disabled);\n      if (nextOpt) {\n        this.cascaderService.setOptionActivated(nextOpt, length);\n      }\n    }\n  }\n\n  private clearDelaySelectTimer(): void {\n    if (this.delaySelectTimer) {\n      clearTimeout(this.delaySelectTimer);\n      this.delaySelectTimer = null;\n    }\n  }\n\n  private delaySetOptionActivated(option: NzCascaderOption, columnIndex: number, performSelect: boolean): void {\n    this.clearDelaySelectTimer();\n    this.delaySelectTimer = setTimeout(() => {\n      this.cascaderService.setOptionActivated(option, columnIndex, performSelect);\n      this.delaySelectTimer = null;\n    }, 150);\n  }\n\n  private toggleSearchingMode(toSearching: boolean): void {\n    if (this.inSearchingMode !== toSearching) {\n      this.cascaderService.toggleSearchingMode(toSearching);\n    }\n\n    if (this.inSearchingMode) {\n      this.cascaderService.prepareSearchOptions(this.inputValue);\n    }\n  }\n\n  isOptionActivated(option: NzCascaderOption, index: number): boolean {\n    const activeOpt = this.cascaderService.activatedOptions[index];\n    return activeOpt === option;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.closeMenu();\n    }\n    this.nzDisabled = isDisabled;\n  }\n\n  closeMenu(): void {\n    this.blur();\n    this.clearDelayMenuTimer();\n    this.setMenuVisible(false);\n  }\n\n  /**\n   * Reposition the cascader panel. When a menu opens, the cascader expands\n   * and may exceed the boundary of browser's window.\n   */\n  private reposition(): void {\n    if (this.overlay && this.overlay.overlayRef && this.menuVisible) {\n      Promise.resolve().then(() => {\n        this.overlay.overlayRef.updatePosition();\n      });\n    }\n  }\n\n  /**\n   * When a cascader options is changed, a child needs to know that it should re-render.\n   */\n  private checkChildren(): void {\n    if (this.cascaderItems) {\n      this.cascaderItems.forEach(item => item.markForCheck());\n    }\n  }\n\n  private setDisplayLabel(): void {\n    const selectedOptions = this.cascaderService.selectedOptions;\n    const labels: string[] = selectedOptions.map(o => this.cascaderService.getOptionLabel(o));\n\n    if (this.isLabelRenderTemplate) {\n      this.labelRenderContext = { labels, selectedOptions };\n    } else {\n      this.labelRenderText = defaultDisplayRender.call(this, labels, selectedOptions);\n    }\n  }\n\n  private setDropdownStyles(): void {\n    const firstColumn = this.cascaderService.columns[0];\n\n    this.shouldShowEmpty =\n      (this.inSearchingMode && (!firstColumn || !firstColumn.length)) || // Should show empty when there's no searching result\n      (!(this.nzOptions && this.nzOptions.length) && !this.nzLoadData); // Should show when there's no options and developer does not use nzLoadData\n    this.dropdownHeightStyle = this.shouldShowEmpty ? 'auto' : '';\n\n    if (this.input) {\n      this.dropdownWidthStyle = this.inSearchingMode || this.shouldShowEmpty ? `${this.input.nativeElement.offsetWidth}px` : '';\n    }\n  }\n\n  private setLocale(): void {\n    this.locale = this.i18nService.getLocaleData('global');\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NzHighlightModule } from 'ng-zorro-antd/core/highlight';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\nimport { NzCascaderOptionComponent } from './cascader-li.component';\nimport { NzCascaderComponent } from './cascader.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    OverlayModule,\n    NzOutletModule,\n    NzEmptyModule,\n    NzHighlightModule,\n    NzIconModule,\n    NzInputModule,\n    NzNoAnimationModule,\n    NzOverlayModule\n  ],\n  declarations: [NzCascaderComponent, NzCascaderOptionComponent],\n  exports: [NzCascaderComponent]\n})\nexport class NzCascaderModule {}\n"]},"metadata":{},"sourceType":"module"}