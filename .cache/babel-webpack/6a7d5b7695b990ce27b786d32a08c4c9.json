{"ast":null,"code":"import _toConsumableArray from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChildren, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { toArray, InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService, NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { Subject, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n/**\n * @fileoverview added by tsickle\n * Generated from: interface.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'ng-zorro-antd/checkbox';\nimport * as ɵngcc3 from 'ng-zorro-antd/empty';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/transition-patch';\nimport * as ɵngcc6 from 'ng-zorro-antd/icon';\nimport * as ɵngcc7 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc8 from 'ng-zorro-antd/button';\nimport * as ɵngcc9 from 'ng-zorro-antd/core/wave';\n\nfunction NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var item_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r10.title);\n  }\n}\n\nfunction NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_ng_template_3_Template(rf, ctx) {}\n\nvar _c0 = function _c0(a0) {\n  return {\n    \"ant-transfer-list-content-item-disabled\": a0\n  };\n};\n\nvar _c1 = function _c1(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r16.onItemSelect(item_r10);\n    });\n    ɵngcc0.ɵɵelementStart(1, \"label\", 16);\n    ɵngcc0.ɵɵlistener(\"nzCheckedChange\", function NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_Template_label_nzCheckedChange_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r19 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r19.onItemSelect(item_r10);\n    })(\"click\", function NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_Template_label_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵtemplate(2, NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_ng_container_2_Template, 2, 1, \"ng-container\", 7);\n    ɵngcc0.ɵɵtemplate(3, NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_ng_template_3_Template, 0, 0, \"ng-template\", 17, 18, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r13 = ɵngcc0.ɵɵreference(4);\n\n    var item_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c0, ctx_r11.disabled || item_r10.disabled));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzChecked\", item_r10.checked)(\"nzDisabled\", ctx_r11.disabled || item_r10.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r11.render)(\"ngIfElse\", _r13);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.render)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(9, _c1, item_r10));\n  }\n}\n\nfunction NzTransferListComponent_ng_template_0_ul_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵtemplate(1, NzTransferListComponent_ng_template_0_ul_0_div_1_li_1_Template, 5, 11, \"li\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !item_r10.hide);\n  }\n}\n\nfunction NzTransferListComponent_ng_template_0_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 11);\n    ɵngcc0.ɵɵtemplate(1, NzTransferListComponent_ng_template_0_ul_0_div_1_Template, 2, 1, \"div\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r7.dataSource);\n  }\n}\n\nfunction NzTransferListComponent_ng_template_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵelement(1, \"nz-embed-empty\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzComponentName\", \"transfer\")(\"specificContent\", ctx_r8.notFoundContent);\n  }\n}\n\nfunction NzTransferListComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzTransferListComponent_ng_template_0_ul_0_Template, 2, 1, \"ul\", 9);\n    ɵngcc0.ɵɵtemplate(1, NzTransferListComponent_ng_template_0_div_1_Template, 2, 2, \"div\", 10);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.stat.shownCount > 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.stat.shownCount === 0);\n  }\n}\n\nfunction NzTransferListComponent_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r24 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"label\", 21);\n    ɵngcc0.ɵɵlistener(\"nzCheckedChange\", function NzTransferListComponent_label_3_Template_label_nzCheckedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r24);\n      var ctx_r23 = ɵngcc0.ɵɵnextContext();\n      return ctx_r23.onItemSelectAll($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzChecked\", ctx_r2.stat.checkAll)(\"nzIndeterminate\", ctx_r2.stat.checkHalf)(\"nzDisabled\", ctx_r2.stat.shownCount == 0 || ctx_r2.disabled);\n  }\n}\n\nfunction NzTransferListComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 22);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.titleText);\n  }\n}\n\nfunction NzTransferListComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 24);\n    ɵngcc0.ɵɵlistener(\"valueChanged\", function NzTransferListComponent_div_9_Template_div_valueChanged_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      return ctx_r25.handleFilter($event);\n    })(\"valueClear\", function NzTransferListComponent_div_9_Template_div_valueClear_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      return ctx_r27.handleClear();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"placeholder\", ctx_r4.searchPlaceholder)(\"disabled\", ctx_r4.disabled)(\"value\", ctx_r4.filter);\n  }\n}\n\nfunction NzTransferListComponent_ng_container_10_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c2 = function _c2(a0, a1, a2, a3, a4, a5) {\n  return {\n    $implicit: a0,\n    direction: a1,\n    disabled: a2,\n    onItemSelectAll: a3,\n    onItemSelect: a4,\n    stat: a5\n  };\n};\n\nfunction NzTransferListComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 25);\n    ɵngcc0.ɵɵtemplate(2, NzTransferListComponent_ng_container_10_ng_container_2_Template, 1, 0, \"ng-container\", 26);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.renderList)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction6(2, _c2, ctx_r5.dataSource, ctx_r5.direction, ctx_r5.disabled, ctx_r5.onItemSelectAll, ctx_r5.onItemSelect, ctx_r5.stat));\n  }\n}\n\nfunction NzTransferListComponent_div_11_ng_template_1_Template(rf, ctx) {}\n\nfunction NzTransferListComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵtemplate(1, NzTransferListComponent_div_11_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.footer)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r6.direction));\n  }\n}\n\nvar _c3 = function _c3(a0) {\n  return {\n    \"ant-transfer__nodata\": a0\n  };\n};\n\nvar _c4 = [\"nz-transfer-search\", \"\"];\n\nfunction NzTransferSearchComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function NzTransferSearchComponent_a_1_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3._clear();\n    });\n    ɵngcc0.ɵɵelement(1, \"i\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NzTransferSearchComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵelement(1, \"i\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c5 = function _c5(a0) {\n  return {\n    \"ant-input-disabled\": a0\n  };\n};\n\nfunction NzTransferComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.nzOperations[1]);\n  }\n}\n\nfunction NzTransferComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.nzOperations[0]);\n  }\n}\n\nfunction TransferItem() {}\n\nif (false) {\n  /** @type {?} */\n  TransferItem.prototype.title;\n  /** @type {?|undefined} */\n\n  TransferItem.prototype.direction;\n  /** @type {?|undefined} */\n\n  TransferItem.prototype.disabled;\n  /** @type {?|undefined} */\n\n  TransferItem.prototype.checked;\n  /** @type {?|undefined} */\n\n  TransferItem.prototype.hide;\n  /* Skipping unhandled member: [key: string]: NzSafeAny;*/\n}\n/**\n * @record\n */\n\n\nfunction TransferCanMove() {}\n\nif (false) {\n  /** @type {?} */\n  TransferCanMove.prototype.direction;\n  /** @type {?} */\n\n  TransferCanMove.prototype.list;\n}\n/**\n * @record\n */\n\n\nfunction TransferChange() {}\n\nif (false) {\n  /** @type {?} */\n  TransferChange.prototype.from;\n  /** @type {?} */\n\n  TransferChange.prototype.to;\n  /** @type {?} */\n\n  TransferChange.prototype.list;\n}\n/**\n * @record\n */\n\n\nfunction TransferSearchChange() {}\n\nif (false) {\n  /** @type {?} */\n  TransferSearchChange.prototype.direction;\n  /** @type {?} */\n\n  TransferSearchChange.prototype.value;\n}\n/**\n * @record\n */\n\n\nfunction TransferSelectChange() {}\n\nif (false) {\n  /** @type {?} */\n  TransferSelectChange.prototype.direction;\n  /** @type {?} */\n\n  TransferSelectChange.prototype.checked;\n  /** @type {?} */\n\n  TransferSelectChange.prototype.list;\n  /** @type {?|undefined} */\n\n  TransferSelectChange.prototype.item;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: transfer-list.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzTransferListComponent = /*#__PURE__*/function () {\n  // #endregion\n\n  /**\n   * @param {?} cdr\n   */\n  function NzTransferListComponent(cdr) {\n    var _this = this;\n\n    _classCallCheck(this, NzTransferListComponent);\n\n    this.cdr = cdr; // #region fields\n\n    this.direction = 'left';\n    this.titleText = '';\n    this.showSelectAll = true;\n    this.dataSource = [];\n    this.itemUnit = '';\n    this.itemsUnit = '';\n    this.filter = '';\n    this.renderList = null;\n    this.render = null;\n    this.footer = null; // events\n\n    this.handleSelectAll = new EventEmitter();\n    this.handleSelect = new EventEmitter();\n    this.filterChange = new EventEmitter();\n    this.stat = {\n      checkAll: false,\n      checkHalf: false,\n      checkCount: 0,\n      shownCount: 0\n    };\n\n    this.onItemSelect =\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    function (item) {\n      if (_this.disabled || item.disabled) {\n        return;\n      }\n\n      item.checked = !item.checked;\n\n      _this.updateCheckStatus();\n\n      _this.handleSelect.emit(item);\n    };\n\n    this.onItemSelectAll =\n    /**\n    * @param {?} status\n    * @return {?}\n    */\n    function (status) {\n      _this.dataSource.forEach(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        if (!item.disabled && !item.hide) {\n          item.checked = status;\n        }\n      });\n\n      _this.updateCheckStatus();\n\n      _this.handleSelectAll.emit(status);\n    };\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _createClass(NzTransferListComponent, [{\n    key: \"updateCheckStatus\",\n    value: function updateCheckStatus() {\n      /** @type {?} */\n      var validCount = this.dataSource.filter(\n      /**\n      * @param {?} w\n      * @return {?}\n      */\n      function (w) {\n        return !w.disabled;\n      }).length;\n      this.stat.checkCount = this.dataSource.filter(\n      /**\n      * @param {?} w\n      * @return {?}\n      */\n      function (w) {\n        return w.checked && !w.disabled;\n      }).length;\n      this.stat.shownCount = this.dataSource.filter(\n      /**\n      * @param {?} w\n      * @return {?}\n      */\n      function (w) {\n        return !w.hide;\n      }).length;\n      this.stat.checkAll = validCount > 0 && validCount === this.stat.checkCount;\n      this.stat.checkHalf = this.stat.checkCount > 0 && !this.stat.checkAll;\n    } // #endregion\n    // #region search\n\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleFilter\",\n    value: function handleFilter(value) {\n      var _this2 = this;\n\n      this.filter = value;\n      this.dataSource.forEach(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        item.hide = value.length > 0 && !_this2.matchFilter(value, item);\n      });\n      this.stat.shownCount = this.dataSource.filter(\n      /**\n      * @param {?} w\n      * @return {?}\n      */\n      function (w) {\n        return !w.hide;\n      }).length;\n      this.filterChange.emit({\n        direction: this.direction,\n        value: value\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleClear\",\n    value: function handleClear() {\n      this.handleFilter('');\n    }\n    /**\n     * @private\n     * @param {?} text\n     * @param {?} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"matchFilter\",\n    value: function matchFilter(text, item) {\n      if (this.filterOption) {\n        return this.filterOption(text, item);\n      }\n\n      return item.title.includes(text);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"markForCheck\",\n    value: function markForCheck() {\n      this.updateCheckStatus();\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzTransferListComponent;\n}();\n\nNzTransferListComponent.ɵfac = function NzTransferListComponent_Factory(t) {\n  return new (t || NzTransferListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzTransferListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTransferListComponent,\n  selectors: [[\"nz-transfer-list\"]],\n  hostVars: 4,\n  hostBindings: function NzTransferListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-transfer-list\", true)(\"ant-transfer-list-with-footer\", !!ctx.footer);\n    }\n  },\n  inputs: {\n    direction: \"direction\",\n    titleText: \"titleText\",\n    showSelectAll: \"showSelectAll\",\n    dataSource: \"dataSource\",\n    itemUnit: \"itemUnit\",\n    itemsUnit: \"itemsUnit\",\n    filter: \"filter\",\n    renderList: \"renderList\",\n    render: \"render\",\n    footer: \"footer\",\n    disabled: \"disabled\",\n    showSearch: \"showSearch\",\n    searchPlaceholder: \"searchPlaceholder\",\n    notFoundContent: \"notFoundContent\",\n    filterOption: \"filterOption\"\n  },\n  outputs: {\n    handleSelectAll: \"handleSelectAll\",\n    handleSelect: \"handleSelect\",\n    filterChange: \"filterChange\"\n  },\n  exportAs: [\"nzTransferList\"],\n  decls: 12,\n  vars: 14,\n  consts: [[\"defaultRenderList\", \"\"], [1, \"ant-transfer-list-header\"], [\"nz-checkbox\", \"\", 3, \"nzChecked\", \"nzIndeterminate\", \"nzDisabled\", \"nzCheckedChange\", 4, \"ngIf\"], [1, \"ant-transfer-list-header-selected\"], [\"class\", \"ant-transfer-list-header-title\", 4, \"ngIf\"], [3, \"ngClass\"], [\"class\", \"ant-transfer-list-body-search-wrapper\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"ant-transfer-list-footer\", 4, \"ngIf\"], [\"class\", \"ant-transfer-list-content\", 4, \"ngIf\"], [\"class\", \"ant-transfer-list-body-not-found\", 4, \"ngIf\"], [1, \"ant-transfer-list-content\"], [\"class\", \"LazyLoad\", 4, \"ngFor\", \"ngForOf\"], [1, \"LazyLoad\"], [\"class\", \"ant-transfer-list-content-item\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [1, \"ant-transfer-list-content-item\", 3, \"ngClass\", \"click\"], [\"nz-checkbox\", \"\", 3, \"nzChecked\", \"nzDisabled\", \"nzCheckedChange\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"renderContainer\", \"\"], [1, \"ant-transfer-list-body-not-found\"], [3, \"nzComponentName\", \"specificContent\"], [\"nz-checkbox\", \"\", 3, \"nzChecked\", \"nzIndeterminate\", \"nzDisabled\", \"nzCheckedChange\"], [1, \"ant-transfer-list-header-title\"], [1, \"ant-transfer-list-body-search-wrapper\"], [\"nz-transfer-search\", \"\", 3, \"placeholder\", \"disabled\", \"value\", \"valueChanged\", \"valueClear\"], [1, \"ant-transfer-list-body-customize-wrapper\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ant-transfer-list-footer\"]],\n  template: function NzTransferListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzTransferListComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(3, NzTransferListComponent_label_3_Template, 1, 3, \"label\", 2);\n      ɵngcc0.ɵɵelementStart(4, \"span\", 3);\n      ɵngcc0.ɵɵelementStart(5, \"span\");\n      ɵngcc0.ɵɵtext(6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(7, NzTransferListComponent_span_7_Template, 2, 1, \"span\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"div\", 5);\n      ɵngcc0.ɵɵtemplate(9, NzTransferListComponent_div_9_Template, 2, 3, \"div\", 6);\n      ɵngcc0.ɵɵtemplate(10, NzTransferListComponent_ng_container_10_Template, 3, 9, \"ng-container\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, NzTransferListComponent_div_11_Template, 2, 4, \"div\", 8);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSelectAll);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵtextInterpolate2(\"\", (ctx.stat.checkCount > 0 ? ctx.stat.checkCount + \"/\" : \"\") + ctx.stat.shownCount, \" \", ctx.dataSource.length > 1 ? ctx.itemsUnit : ctx.itemUnit, \"\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.titleText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMap(ctx.showSearch ? \"ant-transfer-list-body ant-transfer-list-body-with-search\" : \"ant-transfer-list-body\");\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c3, ctx.stat.shownCount === 0));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSearch);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.renderList)(\"ngIfElse\", _r0);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footer);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc2.NzCheckboxComponent, ɵngcc1.NgTemplateOutlet, ɵngcc3.NzEmbedEmptyComponent, NzTransferSearchComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzTransferListComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nNzTransferListComponent.propDecorators = {\n  direction: [{\n    type: Input\n  }],\n  titleText: [{\n    type: Input\n  }],\n  showSelectAll: [{\n    type: Input\n  }],\n  dataSource: [{\n    type: Input\n  }],\n  itemUnit: [{\n    type: Input\n  }],\n  itemsUnit: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  showSearch: [{\n    type: Input\n  }],\n  searchPlaceholder: [{\n    type: Input\n  }],\n  notFoundContent: [{\n    type: Input\n  }],\n  filterOption: [{\n    type: Input\n  }],\n  renderList: [{\n    type: Input\n  }],\n  render: [{\n    type: Input\n  }],\n  footer: [{\n    type: Input\n  }],\n  handleSelectAll: [{\n    type: Output\n  }],\n  handleSelect: [{\n    type: Output\n  }],\n  filterChange: [{\n    type: Output\n  }]\n};\n\nif (false) {\n  /** @type {?} */\n  NzTransferListComponent.prototype.direction;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.titleText;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.showSelectAll;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.dataSource;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.itemUnit;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.itemsUnit;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.filter;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.disabled;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.showSearch;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.searchPlaceholder;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.notFoundContent;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.filterOption;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.renderList;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.render;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.footer;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.handleSelectAll;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.handleSelect;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.filterChange;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.stat;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.onItemSelect;\n  /** @type {?} */\n\n  NzTransferListComponent.prototype.onItemSelectAll;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzTransferListComponent.prototype.cdr;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: transfer-search.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzTransferSearchComponent = /*#__PURE__*/function () {\n  // endregion\n\n  /**\n   * @param {?} cdr\n   */\n  function NzTransferSearchComponent(cdr) {\n    _classCallCheck(this, NzTransferSearchComponent);\n\n    this.cdr = cdr;\n    this.valueChanged = new EventEmitter();\n    this.valueClear = new EventEmitter();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NzTransferSearchComponent, [{\n    key: \"_handle\",\n    value: function _handle() {\n      this.valueChanged.emit(this.value);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.value = '';\n      this.valueClear.emit();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.cdr.detectChanges();\n    }\n  }]);\n\n  return NzTransferSearchComponent;\n}();\n\nNzTransferSearchComponent.ɵfac = function NzTransferSearchComponent_Factory(t) {\n  return new (t || NzTransferSearchComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzTransferSearchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTransferSearchComponent,\n  selectors: [[\"\", \"nz-transfer-search\", \"\"]],\n  inputs: {\n    value: \"value\",\n    placeholder: \"placeholder\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    valueChanged: \"valueChanged\",\n    valueClear: \"valueClear\"\n  },\n  exportAs: [\"nzTransferSearch\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c4,\n  decls: 4,\n  vars: 8,\n  consts: [[1, \"ant-input\", \"ant-transfer-list-search\", 3, \"ngModel\", \"disabled\", \"placeholder\", \"ngClass\", \"ngModelChange\"], [\"class\", \"ant-transfer-list-search-action\", 3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"def\", \"\"], [1, \"ant-transfer-list-search-action\", 3, \"click\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\"], [1, \"ant-transfer-list-search-action\"], [\"nz-icon\", \"\", \"nzType\", \"search\"]],\n  template: function NzTransferSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"input\", 0);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function NzTransferSearchComponent_Template_input_ngModelChange_0_listener($event) {\n        return ctx.value = $event;\n      })(\"ngModelChange\", function NzTransferSearchComponent_Template_input_ngModelChange_0_listener() {\n        return ctx._handle();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(1, NzTransferSearchComponent_a_1_Template, 2, 0, \"a\", 1);\n      ɵngcc0.ɵɵtemplate(2, NzTransferSearchComponent_ng_template_2_Template, 2, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = ɵngcc0.ɵɵreference(3);\n\n      ɵngcc0.ɵɵproperty(\"ngModel\", ctx.value)(\"disabled\", ctx.disabled)(\"placeholder\", ctx.placeholder)(\"ngClass\", ɵngcc0.ɵɵpureFunction1(6, _c5, ctx.disabled));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.value && ctx.value.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc5.ɵNzTransitionPatchDirective, ɵngcc6.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzTransferSearchComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nNzTransferSearchComponent.propDecorators = {\n  placeholder: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  valueChanged: [{\n    type: Output\n  }],\n  valueClear: [{\n    type: Output\n  }]\n};\n\nif (false) {\n  /** @type {?} */\n  NzTransferSearchComponent.prototype.placeholder;\n  /** @type {?} */\n\n  NzTransferSearchComponent.prototype.value;\n  /** @type {?} */\n\n  NzTransferSearchComponent.prototype.disabled;\n  /** @type {?} */\n\n  NzTransferSearchComponent.prototype.valueChanged;\n  /** @type {?} */\n\n  NzTransferSearchComponent.prototype.valueClear;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzTransferSearchComponent.prototype.cdr;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: transfer.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzTransferComponent = /*#__PURE__*/function () {\n  // #endregion\n\n  /**\n   * @param {?} cdr\n   * @param {?} i18n\n   */\n  function NzTransferComponent(cdr, i18n) {\n    var _this3 = this;\n\n    _classCallCheck(this, NzTransferComponent);\n\n    this.cdr = cdr;\n    this.i18n = i18n;\n    this.unsubscribe$ = new Subject();\n    this.leftFilter = '';\n    this.rightFilter = ''; // #region fields\n\n    this.nzDisabled = false;\n    this.nzDataSource = [];\n    this.nzTitles = ['', ''];\n    this.nzOperations = [];\n    this.nzListStyle = {};\n    this.nzShowSelectAll = true;\n\n    this.nzCanMove =\n    /**\n    * @param {?} arg\n    * @return {?}\n    */\n    function (arg) {\n      return of(arg.list);\n    };\n\n    this.nzRenderList = null;\n    this.nzRender = null;\n    this.nzFooter = null;\n    this.nzShowSearch = false;\n    this.nzTargetKeys = [];\n    this.nzSelectedKeys = []; // events\n\n    this.nzChange = new EventEmitter();\n    this.nzSearchChange = new EventEmitter();\n    this.nzSelectChange = new EventEmitter(); // #endregion\n    // #region process data\n    // left\n\n    this.leftDataSource = []; // right\n\n    this.rightDataSource = [];\n\n    this.handleLeftSelectAll =\n    /**\n    * @param {?} checked\n    * @return {?}\n    */\n    function (checked) {\n      return _this3.handleSelect('left', checked);\n    };\n\n    this.handleRightSelectAll =\n    /**\n    * @param {?} checked\n    * @return {?}\n    */\n    function (checked) {\n      return _this3.handleSelect('right', checked);\n    };\n\n    this.handleLeftSelect =\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    function (item) {\n      return _this3.handleSelect('left', !!item.checked, item);\n    };\n\n    this.handleRightSelect =\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    function (item) {\n      return _this3.handleSelect('right', !!item.checked, item);\n    }; // #endregion\n    // #region operation\n\n\n    this.leftActive = false;\n    this.rightActive = false;\n\n    this.moveToLeft =\n    /**\n    * @return {?}\n    */\n    function () {\n      return _this3.moveTo('left');\n    };\n\n    this.moveToRight =\n    /**\n    * @return {?}\n    */\n    function () {\n      return _this3.moveTo('right');\n    };\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _createClass(NzTransferComponent, [{\n    key: \"splitDataSource\",\n    value: function splitDataSource() {\n      var _this4 = this;\n\n      this.leftDataSource = [];\n      this.rightDataSource = [];\n      this.nzDataSource.forEach(\n      /**\n      * @param {?} record\n      * @return {?}\n      */\n      function (record) {\n        if (record.direction === 'right') {\n          record.direction = 'right';\n\n          _this4.rightDataSource.push(record);\n        } else {\n          record.direction = 'left';\n\n          _this4.leftDataSource.push(record);\n        }\n      });\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @return {?}\n     */\n\n  }, {\n    key: \"getCheckedData\",\n    value: function getCheckedData(direction) {\n      return this[direction === 'left' ? 'leftDataSource' : 'rightDataSource'].filter(\n      /**\n      * @param {?} w\n      * @return {?}\n      */\n      function (w) {\n        return w.checked;\n      });\n    }\n    /**\n     * @param {?} direction\n     * @param {?} checked\n     * @param {?=} item\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(direction, checked, item) {\n      /** @type {?} */\n      var list = this.getCheckedData(direction);\n      this.updateOperationStatus(direction, list.length);\n      this.nzSelectChange.emit({\n        direction: direction,\n        checked: checked,\n        list: list,\n        item: item\n      });\n    }\n    /**\n     * @param {?} ret\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleFilterChange\",\n    value: function handleFilterChange(ret) {\n      this.nzSearchChange.emit(ret);\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @param {?=} count\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateOperationStatus\",\n    value: function updateOperationStatus(direction, count) {\n      this[direction === 'right' ? 'leftActive' : 'rightActive'] = (typeof count === 'undefined' ? this.getCheckedData(direction).filter(\n      /**\n      * @param {?} w\n      * @return {?}\n      */\n      function (w) {\n        return !w.disabled;\n      }).length : count) > 0;\n    }\n    /**\n     * @param {?} direction\n     * @return {?}\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(direction) {\n      var _this5 = this;\n\n      /** @type {?} */\n      var oppositeDirection = direction === 'left' ? 'right' : 'left';\n      this.updateOperationStatus(oppositeDirection, 0);\n      /** @type {?} */\n\n      var datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n      /** @type {?} */\n\n      var moveList = datasource.filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      function (item) {\n        return item.checked === true && !item.disabled;\n      });\n      this.nzCanMove({\n        direction: direction,\n        list: moveList\n      }).subscribe(\n      /**\n      * @param {?} newMoveList\n      * @return {?}\n      */\n      function (newMoveList) {\n        return _this5.truthMoveTo(direction, newMoveList.filter(\n        /**\n        * @param {?} i\n        * @return {?}\n        */\n        function (i) {\n          return !!i;\n        }));\n      },\n      /**\n      * @return {?}\n      */\n      function () {\n        return moveList.forEach(\n        /**\n        * @param {?} i\n        * @return {?}\n        */\n        function (i) {\n          return i.checked = false;\n        });\n      });\n    }\n    /**\n     * @private\n     * @param {?} direction\n     * @param {?} list\n     * @return {?}\n     */\n\n  }, {\n    key: \"truthMoveTo\",\n    value: function truthMoveTo(direction, list) {\n      /** @type {?} */\n      var oppositeDirection = direction === 'left' ? 'right' : 'left';\n      /** @type {?} */\n\n      var datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n      /** @type {?} */\n\n      var targetDatasource = direction === 'left' ? this.leftDataSource : this.rightDataSource;\n\n      var _iterator = _createForOfIteratorHelper(list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          item.checked = false;\n          item.hide = false;\n          item.direction = direction;\n          datasource.splice(datasource.indexOf(item), 1);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      targetDatasource.splice.apply(targetDatasource, [0, 0].concat(_toConsumableArray(list)));\n      this.updateOperationStatus(oppositeDirection);\n      this.nzChange.emit({\n        from: oppositeDirection,\n        to: direction,\n        list: list\n      });\n      this.markForCheckAllList();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"markForCheckAllList\",\n    value: function markForCheckAllList() {\n      if (!this.lists) {\n        return;\n      }\n\n      this.lists.forEach(\n      /**\n      * @param {?} i\n      * @return {?}\n      */\n      function (i) {\n        return i.markForCheck();\n      });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleNzTargetKeys\",\n    value: function handleNzTargetKeys() {\n      /** @type {?} */\n      var keys = toArray(this.nzTargetKeys);\n      /** @type {?} */\n\n      var hasOwnKey =\n      /**\n      * @param {?} e\n      * @return {?}\n      */\n      function hasOwnKey(e) {\n        return e.hasOwnProperty('key');\n      };\n\n      this.leftDataSource.forEach(\n      /**\n      * @param {?} e\n      * @return {?}\n      */\n      function (e) {\n        if (hasOwnKey(e) && keys.indexOf(e.key) !== -1 && !e.disabled) {\n          e.checked = true;\n        }\n      });\n      this.moveToRight();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleNzSelectedKeys\",\n    value: function handleNzSelectedKeys() {\n      /** @type {?} */\n      var keys = toArray(this.nzSelectedKeys);\n      this.nzDataSource.forEach(\n      /**\n      * @param {?} e\n      * @return {?}\n      */\n      function (e) {\n        if (keys.indexOf(e.key) !== -1) {\n          e.checked = true;\n        }\n      });\n      /** @type {?} */\n\n      var term =\n      /**\n      * @param {?} ld\n      * @return {?}\n      */\n      function term(ld) {\n        return ld.disabled === false && ld.checked === true;\n      };\n\n      this.rightActive = this.leftDataSource.some(term);\n      this.leftActive = this.rightDataSource.some(term);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this6 = this;\n\n      this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this6.locale = _this6.i18n.getLocaleData('Transfer');\n\n        _this6.markForCheckAllList();\n      });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.nzDataSource) {\n        this.splitDataSource();\n        this.updateOperationStatus('left');\n        this.updateOperationStatus('right');\n        this.cdr.detectChanges();\n        this.markForCheckAllList();\n      }\n\n      if (changes.nzTargetKeys) {\n        this.handleNzTargetKeys();\n      }\n\n      if (changes.nzSelectedKeys) {\n        this.handleNzSelectedKeys();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    }\n  }]);\n\n  return NzTransferComponent;\n}();\n\nNzTransferComponent.ɵfac = function NzTransferComponent_Factory(t) {\n  return new (t || NzTransferComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.NzI18nService));\n};\n\nNzTransferComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzTransferComponent,\n  selectors: [[\"nz-transfer\"]],\n  viewQuery: function NzTransferComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NzTransferListComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lists = _t);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function NzTransferComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-transfer\", true)(\"ant-transfer-disabled\", ctx.nzDisabled)(\"ant-transfer-customize-list\", ctx.nzRenderList);\n    }\n  },\n  inputs: {\n    nzDisabled: \"nzDisabled\",\n    nzDataSource: \"nzDataSource\",\n    nzTitles: \"nzTitles\",\n    nzOperations: \"nzOperations\",\n    nzListStyle: \"nzListStyle\",\n    nzShowSelectAll: \"nzShowSelectAll\",\n    nzCanMove: \"nzCanMove\",\n    nzRenderList: \"nzRenderList\",\n    nzRender: \"nzRender\",\n    nzFooter: \"nzFooter\",\n    nzShowSearch: \"nzShowSearch\",\n    nzTargetKeys: \"nzTargetKeys\",\n    nzSelectedKeys: \"nzSelectedKeys\",\n    nzItemUnit: \"nzItemUnit\",\n    nzItemsUnit: \"nzItemsUnit\",\n    nzFilterOption: \"nzFilterOption\",\n    nzSearchPlaceholder: \"nzSearchPlaceholder\",\n    nzNotFoundContent: \"nzNotFoundContent\"\n  },\n  outputs: {\n    nzChange: \"nzChange\",\n    nzSearchChange: \"nzSearchChange\",\n    nzSelectChange: \"nzSelectChange\"\n  },\n  exportAs: [\"nzTransfer\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 38,\n  consts: [[\"data-direction\", \"left\", \"direction\", \"left\", 1, \"ant-transfer-list\", 3, \"ngStyle\", \"titleText\", \"showSelectAll\", \"dataSource\", \"filter\", \"filterOption\", \"renderList\", \"render\", \"disabled\", \"showSearch\", \"searchPlaceholder\", \"notFoundContent\", \"itemUnit\", \"itemsUnit\", \"footer\", \"filterChange\", \"handleSelect\", \"handleSelectAll\"], [1, \"ant-transfer-operation\"], [\"nz-button\", \"\", 3, \"disabled\", \"nzType\", \"nzSize\", \"click\"], [\"nz-icon\", \"\", \"nzType\", \"left\"], [4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"right\"], [\"data-direction\", \"right\", \"direction\", \"right\", 1, \"ant-transfer-list\", 3, \"ngStyle\", \"titleText\", \"showSelectAll\", \"dataSource\", \"filter\", \"filterOption\", \"renderList\", \"render\", \"disabled\", \"showSearch\", \"searchPlaceholder\", \"notFoundContent\", \"itemUnit\", \"itemsUnit\", \"footer\", \"filterChange\", \"handleSelect\", \"handleSelectAll\"]],\n  template: function NzTransferComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"nz-transfer-list\", 0);\n      ɵngcc0.ɵɵlistener(\"filterChange\", function NzTransferComponent_Template_nz_transfer_list_filterChange_0_listener($event) {\n        return ctx.handleFilterChange($event);\n      })(\"handleSelect\", function NzTransferComponent_Template_nz_transfer_list_handleSelect_0_listener($event) {\n        return ctx.handleLeftSelect($event);\n      })(\"handleSelectAll\", function NzTransferComponent_Template_nz_transfer_list_handleSelectAll_0_listener($event) {\n        return ctx.handleLeftSelectAll($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function NzTransferComponent_Template_button_click_2_listener() {\n        return ctx.moveToLeft();\n      });\n      ɵngcc0.ɵɵelement(3, \"i\", 3);\n      ɵngcc0.ɵɵtemplate(4, NzTransferComponent_span_4_Template, 2, 1, \"span\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function NzTransferComponent_Template_button_click_5_listener() {\n        return ctx.moveToRight();\n      });\n      ɵngcc0.ɵɵelement(6, \"i\", 5);\n      ɵngcc0.ɵɵtemplate(7, NzTransferComponent_span_7_Template, 2, 1, \"span\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"nz-transfer-list\", 6);\n      ɵngcc0.ɵɵlistener(\"filterChange\", function NzTransferComponent_Template_nz_transfer_list_filterChange_8_listener($event) {\n        return ctx.handleFilterChange($event);\n      })(\"handleSelect\", function NzTransferComponent_Template_nz_transfer_list_handleSelect_8_listener($event) {\n        return ctx.handleRightSelect($event);\n      })(\"handleSelectAll\", function NzTransferComponent_Template_nz_transfer_list_handleSelectAll_8_listener($event) {\n        return ctx.handleRightSelectAll($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.nzListStyle)(\"titleText\", ctx.nzTitles[0])(\"showSelectAll\", ctx.nzShowSelectAll)(\"dataSource\", ctx.leftDataSource)(\"filter\", ctx.leftFilter)(\"filterOption\", ctx.nzFilterOption)(\"renderList\", ctx.nzRenderList && ctx.nzRenderList[0])(\"render\", ctx.nzRender)(\"disabled\", ctx.nzDisabled)(\"showSearch\", ctx.nzShowSearch)(\"searchPlaceholder\", ctx.nzSearchPlaceholder || (ctx.locale == null ? null : ctx.locale.searchPlaceholder))(\"notFoundContent\", ctx.nzNotFoundContent)(\"itemUnit\", ctx.nzItemUnit || (ctx.locale == null ? null : ctx.locale.itemUnit))(\"itemsUnit\", ctx.nzItemsUnit || (ctx.locale == null ? null : ctx.locale.itemsUnit))(\"footer\", ctx.nzFooter);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nzDisabled || !ctx.leftActive)(\"nzType\", \"primary\")(\"nzSize\", \"small\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzOperations[1]);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nzDisabled || !ctx.rightActive)(\"nzType\", \"primary\")(\"nzSize\", \"small\");\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzOperations[0]);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.nzListStyle)(\"titleText\", ctx.nzTitles[1])(\"showSelectAll\", ctx.nzShowSelectAll)(\"dataSource\", ctx.rightDataSource)(\"filter\", ctx.rightFilter)(\"filterOption\", ctx.nzFilterOption)(\"renderList\", ctx.nzRenderList && ctx.nzRenderList[1])(\"render\", ctx.nzRender)(\"disabled\", ctx.nzDisabled)(\"showSearch\", ctx.nzShowSearch)(\"searchPlaceholder\", ctx.nzSearchPlaceholder || (ctx.locale == null ? null : ctx.locale.searchPlaceholder))(\"notFoundContent\", ctx.nzNotFoundContent)(\"itemUnit\", ctx.nzItemUnit || (ctx.locale == null ? null : ctx.locale.itemUnit))(\"itemsUnit\", ctx.nzItemsUnit || (ctx.locale == null ? null : ctx.locale.itemsUnit))(\"footer\", ctx.nzFooter);\n    }\n  },\n  directives: [NzTransferListComponent, ɵngcc1.NgStyle, ɵngcc8.NzButtonComponent, ɵngcc9.NzWaveDirective, ɵngcc5.ɵNzTransitionPatchDirective, ɵngcc6.NzIconDirective, ɵngcc1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzTransferComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzI18nService\n  }];\n};\n\nNzTransferComponent.propDecorators = {\n  lists: [{\n    type: ViewChildren,\n    args: [NzTransferListComponent]\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzDataSource: [{\n    type: Input\n  }],\n  nzTitles: [{\n    type: Input\n  }],\n  nzOperations: [{\n    type: Input\n  }],\n  nzListStyle: [{\n    type: Input\n  }],\n  nzShowSelectAll: [{\n    type: Input\n  }],\n  nzItemUnit: [{\n    type: Input\n  }],\n  nzItemsUnit: [{\n    type: Input\n  }],\n  nzCanMove: [{\n    type: Input\n  }],\n  nzRenderList: [{\n    type: Input\n  }],\n  nzRender: [{\n    type: Input\n  }],\n  nzFooter: [{\n    type: Input\n  }],\n  nzShowSearch: [{\n    type: Input\n  }],\n  nzFilterOption: [{\n    type: Input\n  }],\n  nzSearchPlaceholder: [{\n    type: Input\n  }],\n  nzNotFoundContent: [{\n    type: Input\n  }],\n  nzTargetKeys: [{\n    type: Input\n  }],\n  nzSelectedKeys: [{\n    type: Input\n  }],\n  nzChange: [{\n    type: Output\n  }],\n  nzSearchChange: [{\n    type: Output\n  }],\n  nzSelectChange: [{\n    type: Output\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTransferComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTransferComponent.prototype, \"nzShowSelectAll\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzTransferComponent.prototype, \"nzShowSearch\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTransferListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-transfer-list',\n      exportAs: 'nzTransferList',\n      preserveWhitespaces: false,\n      template: \"\\n    <ng-template #defaultRenderList>\\n      <ul *ngIf=\\\"stat.shownCount > 0\\\" class=\\\"ant-transfer-list-content\\\">\\n        <div class=\\\"LazyLoad\\\" *ngFor=\\\"let item of dataSource\\\">\\n          <li\\n            *ngIf=\\\"!item.hide\\\"\\n            (click)=\\\"onItemSelect(item)\\\"\\n            class=\\\"ant-transfer-list-content-item\\\"\\n            [ngClass]=\\\"{ 'ant-transfer-list-content-item-disabled': disabled || item.disabled }\\\"\\n          >\\n            <label\\n              nz-checkbox\\n              [nzChecked]=\\\"item.checked\\\"\\n              (nzCheckedChange)=\\\"onItemSelect(item)\\\"\\n              (click)=\\\"$event.stopPropagation()\\\"\\n              [nzDisabled]=\\\"disabled || item.disabled\\\"\\n            >\\n              <ng-container *ngIf=\\\"!render; else renderContainer\\\">{{ item.title }}</ng-container>\\n              <ng-template #renderContainer [ngTemplateOutlet]=\\\"render\\\" [ngTemplateOutletContext]=\\\"{ $implicit: item }\\\"></ng-template>\\n            </label>\\n          </li>\\n        </div>\\n      </ul>\\n      <div *ngIf=\\\"stat.shownCount === 0\\\" class=\\\"ant-transfer-list-body-not-found\\\">\\n        <nz-embed-empty [nzComponentName]=\\\"'transfer'\\\" [specificContent]=\\\"notFoundContent\\\"></nz-embed-empty>\\n      </div>\\n    </ng-template>\\n    <div class=\\\"ant-transfer-list-header\\\">\\n      <label\\n        *ngIf=\\\"showSelectAll\\\"\\n        nz-checkbox\\n        [nzChecked]=\\\"stat.checkAll\\\"\\n        (nzCheckedChange)=\\\"onItemSelectAll($event)\\\"\\n        [nzIndeterminate]=\\\"stat.checkHalf\\\"\\n        [nzDisabled]=\\\"stat.shownCount == 0 || disabled\\\"\\n      >\\n      </label>\\n      <span class=\\\"ant-transfer-list-header-selected\\\">\\n        <span\\n          >{{ (stat.checkCount > 0 ? stat.checkCount + '/' : '') + stat.shownCount }}\\n          {{ dataSource.length > 1 ? itemsUnit : itemUnit }}</span\\n        >\\n        <span *ngIf=\\\"titleText\\\" class=\\\"ant-transfer-list-header-title\\\">{{ titleText }}</span>\\n      </span>\\n    </div>\\n    <div\\n      class=\\\"{{ showSearch ? 'ant-transfer-list-body ant-transfer-list-body-with-search' : 'ant-transfer-list-body' }}\\\"\\n      [ngClass]=\\\"{ 'ant-transfer__nodata': stat.shownCount === 0 }\\\"\\n    >\\n      <div *ngIf=\\\"showSearch\\\" class=\\\"ant-transfer-list-body-search-wrapper\\\">\\n        <div\\n          nz-transfer-search\\n          (valueChanged)=\\\"handleFilter($event)\\\"\\n          (valueClear)=\\\"handleClear()\\\"\\n          [placeholder]=\\\"searchPlaceholder\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [value]=\\\"filter\\\"\\n        ></div>\\n      </div>\\n      <ng-container *ngIf=\\\"renderList; else defaultRenderList\\\">\\n        <div class=\\\"ant-transfer-list-body-customize-wrapper\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"\\n              renderList;\\n              context: {\\n                $implicit: dataSource,\\n                direction: direction,\\n                disabled: disabled,\\n                onItemSelectAll: onItemSelectAll,\\n                onItemSelect: onItemSelect,\\n                stat: stat\\n              }\\n            \\\"\\n          ></ng-container>\\n        </div>\\n      </ng-container>\\n    </div>\\n    <div *ngIf=\\\"footer\\\" class=\\\"ant-transfer-list-footer\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"footer\\\" [ngTemplateOutletContext]=\\\"{ $implicit: direction }\\\"></ng-template>\\n    </div>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.ant-transfer-list]': 'true',\n        '[class.ant-transfer-list-with-footer]': '!!footer'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    direction: [{\n      type: Input\n    }],\n    titleText: [{\n      type: Input\n    }],\n    showSelectAll: [{\n      type: Input\n    }],\n    dataSource: [{\n      type: Input\n    }],\n    itemUnit: [{\n      type: Input\n    }],\n    itemsUnit: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    renderList: [{\n      type: Input\n    }],\n    render: [{\n      type: Input\n    }],\n    footer: [{\n      type: Input\n    }],\n    handleSelectAll: [{\n      type: Output\n    }],\n    handleSelect: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    showSearch: [{\n      type: Input\n    }],\n    searchPlaceholder: [{\n      type: Input\n    }],\n    notFoundContent: [{\n      type: Input\n    }],\n    filterOption: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTransferSearchComponent, [{\n    type: Component,\n    args: [{\n      selector: '[nz-transfer-search]',\n      exportAs: 'nzTransferSearch',\n      preserveWhitespaces: false,\n      template: \"\\n    <input\\n      [(ngModel)]=\\\"value\\\"\\n      (ngModelChange)=\\\"_handle()\\\"\\n      [disabled]=\\\"disabled\\\"\\n      [placeholder]=\\\"placeholder\\\"\\n      class=\\\"ant-input ant-transfer-list-search\\\"\\n      [ngClass]=\\\"{ 'ant-input-disabled': disabled }\\\"\\n    />\\n    <a *ngIf=\\\"value && value.length > 0; else def\\\" class=\\\"ant-transfer-list-search-action\\\" (click)=\\\"_clear()\\\">\\n      <i nz-icon nzType=\\\"close-circle\\\"></i>\\n    </a>\\n    <ng-template #def>\\n      <span class=\\\"ant-transfer-list-search-action\\\"><i nz-icon nzType=\\\"search\\\"></i></span>\\n    </ng-template>\\n  \",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    valueChanged: [{\n      type: Output\n    }],\n    valueClear: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTransferComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-transfer',\n      exportAs: 'nzTransfer',\n      preserveWhitespaces: false,\n      template: \"\\n    <nz-transfer-list\\n      class=\\\"ant-transfer-list\\\"\\n      [ngStyle]=\\\"nzListStyle\\\"\\n      data-direction=\\\"left\\\"\\n      direction=\\\"left\\\"\\n      [titleText]=\\\"nzTitles[0]\\\"\\n      [showSelectAll]=\\\"nzShowSelectAll\\\"\\n      [dataSource]=\\\"leftDataSource\\\"\\n      [filter]=\\\"leftFilter\\\"\\n      [filterOption]=\\\"nzFilterOption\\\"\\n      (filterChange)=\\\"handleFilterChange($event)\\\"\\n      [renderList]=\\\"nzRenderList && nzRenderList[0]\\\"\\n      [render]=\\\"nzRender\\\"\\n      [disabled]=\\\"nzDisabled\\\"\\n      [showSearch]=\\\"nzShowSearch\\\"\\n      [searchPlaceholder]=\\\"nzSearchPlaceholder || locale?.searchPlaceholder\\\"\\n      [notFoundContent]=\\\"nzNotFoundContent\\\"\\n      [itemUnit]=\\\"nzItemUnit || locale?.itemUnit\\\"\\n      [itemsUnit]=\\\"nzItemsUnit || locale?.itemsUnit\\\"\\n      [footer]=\\\"nzFooter\\\"\\n      (handleSelect)=\\\"handleLeftSelect($event)\\\"\\n      (handleSelectAll)=\\\"handleLeftSelectAll($event)\\\"\\n    >\\n    </nz-transfer-list>\\n    <div class=\\\"ant-transfer-operation\\\">\\n      <button nz-button (click)=\\\"moveToLeft()\\\" [disabled]=\\\"nzDisabled || !leftActive\\\" [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'small'\\\">\\n        <i nz-icon nzType=\\\"left\\\"></i><span *ngIf=\\\"nzOperations[1]\\\">{{ nzOperations[1] }}</span>\\n      </button>\\n      <button nz-button (click)=\\\"moveToRight()\\\" [disabled]=\\\"nzDisabled || !rightActive\\\" [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'small'\\\">\\n        <i nz-icon nzType=\\\"right\\\"></i><span *ngIf=\\\"nzOperations[0]\\\">{{ nzOperations[0] }}</span>\\n      </button>\\n    </div>\\n    <nz-transfer-list\\n      class=\\\"ant-transfer-list\\\"\\n      [ngStyle]=\\\"nzListStyle\\\"\\n      data-direction=\\\"right\\\"\\n      direction=\\\"right\\\"\\n      [titleText]=\\\"nzTitles[1]\\\"\\n      [showSelectAll]=\\\"nzShowSelectAll\\\"\\n      [dataSource]=\\\"rightDataSource\\\"\\n      [filter]=\\\"rightFilter\\\"\\n      [filterOption]=\\\"nzFilterOption\\\"\\n      (filterChange)=\\\"handleFilterChange($event)\\\"\\n      [renderList]=\\\"nzRenderList && nzRenderList[1]\\\"\\n      [render]=\\\"nzRender\\\"\\n      [disabled]=\\\"nzDisabled\\\"\\n      [showSearch]=\\\"nzShowSearch\\\"\\n      [searchPlaceholder]=\\\"nzSearchPlaceholder || locale?.searchPlaceholder\\\"\\n      [notFoundContent]=\\\"nzNotFoundContent\\\"\\n      [itemUnit]=\\\"nzItemUnit || locale?.itemUnit\\\"\\n      [itemsUnit]=\\\"nzItemsUnit || locale?.itemsUnit\\\"\\n      [footer]=\\\"nzFooter\\\"\\n      (handleSelect)=\\\"handleRightSelect($event)\\\"\\n      (handleSelectAll)=\\\"handleRightSelectAll($event)\\\"\\n    >\\n    </nz-transfer-list>\\n  \",\n      host: {\n        '[class.ant-transfer]': \"true\",\n        '[class.ant-transfer-disabled]': \"nzDisabled\",\n        '[class.ant-transfer-customize-list]': \"nzRenderList\"\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc7.NzI18nService\n    }];\n  }, {\n    nzDisabled: [{\n      type: Input\n    }],\n    nzDataSource: [{\n      type: Input\n    }],\n    nzTitles: [{\n      type: Input\n    }],\n    nzOperations: [{\n      type: Input\n    }],\n    nzListStyle: [{\n      type: Input\n    }],\n    nzShowSelectAll: [{\n      type: Input\n    }],\n    nzCanMove: [{\n      type: Input\n    }],\n    nzRenderList: [{\n      type: Input\n    }],\n    nzRender: [{\n      type: Input\n    }],\n    nzFooter: [{\n      type: Input\n    }],\n    nzShowSearch: [{\n      type: Input\n    }],\n    nzTargetKeys: [{\n      type: Input\n    }],\n    nzSelectedKeys: [{\n      type: Input\n    }],\n    nzChange: [{\n      type: Output\n    }],\n    nzSearchChange: [{\n      type: Output\n    }],\n    nzSelectChange: [{\n      type: Output\n    }],\n    lists: [{\n      type: ViewChildren,\n      args: [NzTransferListComponent]\n    }],\n    nzItemUnit: [{\n      type: Input\n    }],\n    nzItemsUnit: [{\n      type: Input\n    }],\n    nzFilterOption: [{\n      type: Input\n    }],\n    nzSearchPlaceholder: [{\n      type: Input\n    }],\n    nzNotFoundContent: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzTransferComponent.ngAcceptInputType_nzDisabled;\n  /** @type {?} */\n\n  NzTransferComponent.ngAcceptInputType_nzShowSelectAll;\n  /** @type {?} */\n\n  NzTransferComponent.ngAcceptInputType_nzShowSearch;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzTransferComponent.prototype.unsubscribe$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzTransferComponent.prototype.lists;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.locale;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.leftFilter;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.rightFilter;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzDisabled;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzDataSource;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzTitles;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzOperations;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzListStyle;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzShowSelectAll;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzItemUnit;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzItemsUnit;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzCanMove;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzRenderList;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzRender;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzFooter;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzShowSearch;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzFilterOption;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzSearchPlaceholder;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzNotFoundContent;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzTargetKeys;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzSelectedKeys;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzChange;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzSearchChange;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.nzSelectChange;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.leftDataSource;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.rightDataSource;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.handleLeftSelectAll;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.handleRightSelectAll;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.handleLeftSelect;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.handleRightSelect;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.leftActive;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.rightActive;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.moveToLeft;\n  /** @type {?} */\n\n  NzTransferComponent.prototype.moveToRight;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzTransferComponent.prototype.cdr;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzTransferComponent.prototype.i18n;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: transfer.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzTransferModule = /*#__PURE__*/_createClass(function NzTransferModule() {\n  _classCallCheck(this, NzTransferModule);\n});\n\nNzTransferModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzTransferModule\n});\nNzTransferModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzTransferModule_Factory(t) {\n    return new (t || NzTransferModule)();\n  },\n  imports: [[CommonModule, FormsModule, NzCheckboxModule, NzButtonModule, NzInputModule, NzI18nModule, NzIconModule, NzEmptyModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzTransferModule, {\n    declarations: function declarations() {\n      return [NzTransferComponent, NzTransferListComponent, NzTransferSearchComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, NzCheckboxModule, NzButtonModule, NzInputModule, NzI18nModule, NzIconModule, NzEmptyModule];\n    },\n    exports: function exports() {\n      return [NzTransferComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTransferModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, NzCheckboxModule, NzButtonModule, NzInputModule, NzI18nModule, NzIconModule, NzEmptyModule],\n      declarations: [NzTransferComponent, NzTransferListComponent, NzTransferSearchComponent],\n      exports: [NzTransferComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-transfer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzTransferComponent, NzTransferListComponent, NzTransferModule, NzTransferSearchComponent };","map":{"version":3,"sources":["ng-zorro-antd/transfer/interface.ts","ng-zorro-antd/transfer/transfer-list.component.ts","ng-zorro-antd/transfer/transfer-search.component.ts","ng-zorro-antd/transfer/transfer.component.ts","ng-zorro-antd/transfer/transfer.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport type TransferDirection = 'left' | 'right';\n\nexport interface TransferItem {\n  title: string;\n  direction?: TransferDirection;\n  disabled?: boolean;\n  checked?: boolean;\n  hide?: boolean;\n  [key: string]: NzSafeAny;\n}\n\nexport interface TransferCanMove {\n  direction: TransferDirection;\n  list: TransferItem[];\n}\n\nexport interface TransferChange {\n  from: TransferDirection;\n  to: TransferDirection;\n  list: TransferItem[];\n}\n\nexport interface TransferSearchChange {\n  direction: TransferDirection;\n  value: string;\n}\n\nexport interface TransferSelectChange {\n  direction: TransferDirection;\n  checked: boolean;\n  list: TransferItem[];\n  item?: TransferItem;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { TransferDirection, TransferItem } from './interface';\n\n@Component({\n  selector: 'nz-transfer-list',\n  exportAs: 'nzTransferList',\n  preserveWhitespaces: false,\n  template: `\n    <ng-template #defaultRenderList>\n      <ul *ngIf=\"stat.shownCount > 0\" class=\"ant-transfer-list-content\">\n        <div class=\"LazyLoad\" *ngFor=\"let item of dataSource\">\n          <li\n            *ngIf=\"!item.hide\"\n            (click)=\"onItemSelect(item)\"\n            class=\"ant-transfer-list-content-item\"\n            [ngClass]=\"{ 'ant-transfer-list-content-item-disabled': disabled || item.disabled }\"\n          >\n            <label\n              nz-checkbox\n              [nzChecked]=\"item.checked\"\n              (nzCheckedChange)=\"onItemSelect(item)\"\n              (click)=\"$event.stopPropagation()\"\n              [nzDisabled]=\"disabled || item.disabled\"\n            >\n              <ng-container *ngIf=\"!render; else renderContainer\">{{ item.title }}</ng-container>\n              <ng-template #renderContainer [ngTemplateOutlet]=\"render\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n            </label>\n          </li>\n        </div>\n      </ul>\n      <div *ngIf=\"stat.shownCount === 0\" class=\"ant-transfer-list-body-not-found\">\n        <nz-embed-empty [nzComponentName]=\"'transfer'\" [specificContent]=\"notFoundContent\"></nz-embed-empty>\n      </div>\n    </ng-template>\n    <div class=\"ant-transfer-list-header\">\n      <label\n        *ngIf=\"showSelectAll\"\n        nz-checkbox\n        [nzChecked]=\"stat.checkAll\"\n        (nzCheckedChange)=\"onItemSelectAll($event)\"\n        [nzIndeterminate]=\"stat.checkHalf\"\n        [nzDisabled]=\"stat.shownCount == 0 || disabled\"\n      >\n      </label>\n      <span class=\"ant-transfer-list-header-selected\">\n        <span\n          >{{ (stat.checkCount > 0 ? stat.checkCount + '/' : '') + stat.shownCount }}\n          {{ dataSource.length > 1 ? itemsUnit : itemUnit }}</span\n        >\n        <span *ngIf=\"titleText\" class=\"ant-transfer-list-header-title\">{{ titleText }}</span>\n      </span>\n    </div>\n    <div\n      class=\"{{ showSearch ? 'ant-transfer-list-body ant-transfer-list-body-with-search' : 'ant-transfer-list-body' }}\"\n      [ngClass]=\"{ 'ant-transfer__nodata': stat.shownCount === 0 }\"\n    >\n      <div *ngIf=\"showSearch\" class=\"ant-transfer-list-body-search-wrapper\">\n        <div\n          nz-transfer-search\n          (valueChanged)=\"handleFilter($event)\"\n          (valueClear)=\"handleClear()\"\n          [placeholder]=\"searchPlaceholder\"\n          [disabled]=\"disabled\"\n          [value]=\"filter\"\n        ></div>\n      </div>\n      <ng-container *ngIf=\"renderList; else defaultRenderList\">\n        <div class=\"ant-transfer-list-body-customize-wrapper\">\n          <ng-container\n            *ngTemplateOutlet=\"\n              renderList;\n              context: {\n                $implicit: dataSource,\n                direction: direction,\n                disabled: disabled,\n                onItemSelectAll: onItemSelectAll,\n                onItemSelect: onItemSelect,\n                stat: stat\n              }\n            \"\n          ></ng-container>\n        </div>\n      </ng-container>\n    </div>\n    <div *ngIf=\"footer\" class=\"ant-transfer-list-footer\">\n      <ng-template [ngTemplateOutlet]=\"footer\" [ngTemplateOutletContext]=\"{ $implicit: direction }\"></ng-template>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.ant-transfer-list]': 'true',\n    '[class.ant-transfer-list-with-footer]': '!!footer'\n  }\n})\nexport class NzTransferListComponent {\n  // #region fields\n\n  @Input() direction: TransferDirection = 'left';\n  @Input() titleText = '';\n  @Input() showSelectAll = true;\n\n  @Input() dataSource: TransferItem[] = [];\n\n  @Input() itemUnit: string | undefined = '';\n  @Input() itemsUnit: string | undefined = '';\n  @Input() filter = '';\n  @Input() disabled?: boolean;\n  @Input() showSearch?: boolean;\n  @Input() searchPlaceholder?: string;\n  @Input() notFoundContent?: string;\n  @Input() filterOption?: (inputValue: string, item: TransferItem) => boolean;\n\n  @Input() renderList: TemplateRef<void> | null = null;\n  @Input() render: TemplateRef<void> | null = null;\n  @Input() footer: TemplateRef<void> | null = null;\n\n  // events\n  @Output() readonly handleSelectAll: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() readonly handleSelect: EventEmitter<TransferItem> = new EventEmitter();\n  @Output() readonly filterChange: EventEmitter<{ direction: TransferDirection; value: string }> = new EventEmitter();\n\n  stat = {\n    checkAll: false,\n    checkHalf: false,\n    checkCount: 0,\n    shownCount: 0\n  };\n\n  onItemSelect = (item: TransferItem) => {\n    if (this.disabled || item.disabled) {\n      return;\n    }\n    item.checked = !item.checked;\n    this.updateCheckStatus();\n    this.handleSelect.emit(item);\n  };\n\n  onItemSelectAll = (status: boolean) => {\n    this.dataSource.forEach(item => {\n      if (!item.disabled && !item.hide) {\n        item.checked = status;\n      }\n    });\n\n    this.updateCheckStatus();\n    this.handleSelectAll.emit(status);\n  };\n\n  private updateCheckStatus(): void {\n    const validCount = this.dataSource.filter(w => !w.disabled).length;\n    this.stat.checkCount = this.dataSource.filter(w => w.checked && !w.disabled).length;\n    this.stat.shownCount = this.dataSource.filter(w => !w.hide).length;\n    this.stat.checkAll = validCount > 0 && validCount === this.stat.checkCount;\n    this.stat.checkHalf = this.stat.checkCount > 0 && !this.stat.checkAll;\n  }\n\n  // #endregion\n\n  // #region search\n\n  handleFilter(value: string): void {\n    this.filter = value;\n    this.dataSource.forEach(item => {\n      item.hide = value.length > 0 && !this.matchFilter(value, item);\n    });\n    this.stat.shownCount = this.dataSource.filter(w => !w.hide).length;\n    this.filterChange.emit({ direction: this.direction, value });\n  }\n\n  handleClear(): void {\n    this.handleFilter('');\n  }\n\n  private matchFilter(text: string, item: TransferItem): boolean {\n    if (this.filterOption) {\n      return this.filterOption(text, item);\n    }\n    return item.title.includes(text);\n  }\n\n  // #endregion\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  markForCheck(): void {\n    this.updateCheckStatus();\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: '[nz-transfer-search]',\n  exportAs: 'nzTransferSearch',\n  preserveWhitespaces: false,\n  template: `\n    <input\n      [(ngModel)]=\"value\"\n      (ngModelChange)=\"_handle()\"\n      [disabled]=\"disabled\"\n      [placeholder]=\"placeholder\"\n      class=\"ant-input ant-transfer-list-search\"\n      [ngClass]=\"{ 'ant-input-disabled': disabled }\"\n    />\n    <a *ngIf=\"value && value.length > 0; else def\" class=\"ant-transfer-list-search-action\" (click)=\"_clear()\">\n      <i nz-icon nzType=\"close-circle\"></i>\n    </a>\n    <ng-template #def>\n      <span class=\"ant-transfer-list-search-action\"><i nz-icon nzType=\"search\"></i></span>\n    </ng-template>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzTransferSearchComponent implements OnChanges {\n  // region: fields\n\n  @Input() placeholder?: string;\n  @Input() value?: string;\n  @Input() disabled?: boolean;\n\n  @Output() readonly valueChanged = new EventEmitter<string>();\n  @Output() readonly valueClear = new EventEmitter<void>();\n\n  // endregion\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  _handle(): void {\n    this.valueChanged.emit(this.value);\n  }\n\n  _clear(): void {\n    if (this.disabled) {\n      return;\n    }\n    this.value = '';\n    this.valueClear.emit();\n  }\n\n  ngOnChanges(): void {\n    this.cdr.detectChanges();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput, NgStyleInterface, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean, toArray } from 'ng-zorro-antd/core/util';\nimport { NzI18nService, NzTransferI18nInterface } from 'ng-zorro-antd/i18n';\n\nimport { Observable, of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TransferCanMove, TransferChange, TransferDirection, TransferItem, TransferSearchChange, TransferSelectChange } from './interface';\nimport { NzTransferListComponent } from './transfer-list.component';\n\n@Component({\n  selector: 'nz-transfer',\n  exportAs: 'nzTransfer',\n  preserveWhitespaces: false,\n  template: `\n    <nz-transfer-list\n      class=\"ant-transfer-list\"\n      [ngStyle]=\"nzListStyle\"\n      data-direction=\"left\"\n      direction=\"left\"\n      [titleText]=\"nzTitles[0]\"\n      [showSelectAll]=\"nzShowSelectAll\"\n      [dataSource]=\"leftDataSource\"\n      [filter]=\"leftFilter\"\n      [filterOption]=\"nzFilterOption\"\n      (filterChange)=\"handleFilterChange($event)\"\n      [renderList]=\"nzRenderList && nzRenderList[0]\"\n      [render]=\"nzRender\"\n      [disabled]=\"nzDisabled\"\n      [showSearch]=\"nzShowSearch\"\n      [searchPlaceholder]=\"nzSearchPlaceholder || locale?.searchPlaceholder\"\n      [notFoundContent]=\"nzNotFoundContent\"\n      [itemUnit]=\"nzItemUnit || locale?.itemUnit\"\n      [itemsUnit]=\"nzItemsUnit || locale?.itemsUnit\"\n      [footer]=\"nzFooter\"\n      (handleSelect)=\"handleLeftSelect($event)\"\n      (handleSelectAll)=\"handleLeftSelectAll($event)\"\n    >\n    </nz-transfer-list>\n    <div class=\"ant-transfer-operation\">\n      <button nz-button (click)=\"moveToLeft()\" [disabled]=\"nzDisabled || !leftActive\" [nzType]=\"'primary'\" [nzSize]=\"'small'\">\n        <i nz-icon nzType=\"left\"></i><span *ngIf=\"nzOperations[1]\">{{ nzOperations[1] }}</span>\n      </button>\n      <button nz-button (click)=\"moveToRight()\" [disabled]=\"nzDisabled || !rightActive\" [nzType]=\"'primary'\" [nzSize]=\"'small'\">\n        <i nz-icon nzType=\"right\"></i><span *ngIf=\"nzOperations[0]\">{{ nzOperations[0] }}</span>\n      </button>\n    </div>\n    <nz-transfer-list\n      class=\"ant-transfer-list\"\n      [ngStyle]=\"nzListStyle\"\n      data-direction=\"right\"\n      direction=\"right\"\n      [titleText]=\"nzTitles[1]\"\n      [showSelectAll]=\"nzShowSelectAll\"\n      [dataSource]=\"rightDataSource\"\n      [filter]=\"rightFilter\"\n      [filterOption]=\"nzFilterOption\"\n      (filterChange)=\"handleFilterChange($event)\"\n      [renderList]=\"nzRenderList && nzRenderList[1]\"\n      [render]=\"nzRender\"\n      [disabled]=\"nzDisabled\"\n      [showSearch]=\"nzShowSearch\"\n      [searchPlaceholder]=\"nzSearchPlaceholder || locale?.searchPlaceholder\"\n      [notFoundContent]=\"nzNotFoundContent\"\n      [itemUnit]=\"nzItemUnit || locale?.itemUnit\"\n      [itemsUnit]=\"nzItemsUnit || locale?.itemsUnit\"\n      [footer]=\"nzFooter\"\n      (handleSelect)=\"handleRightSelect($event)\"\n      (handleSelectAll)=\"handleRightSelectAll($event)\"\n    >\n    </nz-transfer-list>\n  `,\n  host: {\n    '[class.ant-transfer]': `true`,\n    '[class.ant-transfer-disabled]': `nzDisabled`,\n    '[class.ant-transfer-customize-list]': `nzRenderList`\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NzTransferComponent implements OnInit, OnChanges, OnDestroy {\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzShowSelectAll: BooleanInput;\n  static ngAcceptInputType_nzShowSearch: BooleanInput;\n\n  private unsubscribe$ = new Subject<void>();\n  @ViewChildren(NzTransferListComponent)\n  private lists!: QueryList<NzTransferListComponent>;\n  locale!: NzTransferI18nInterface;\n\n  leftFilter = '';\n  rightFilter = '';\n\n  // #region fields\n\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() nzDataSource: TransferItem[] = [];\n  @Input() nzTitles: string[] = ['', ''];\n  @Input() nzOperations: string[] = [];\n  @Input() nzListStyle: NgStyleInterface = {};\n  @Input() @InputBoolean() nzShowSelectAll = true;\n  @Input() nzItemUnit?: string;\n  @Input() nzItemsUnit?: string;\n  @Input() nzCanMove: (arg: TransferCanMove) => Observable<TransferItem[]> = (arg: TransferCanMove) => of(arg.list);\n  @Input() nzRenderList: Array<TemplateRef<NzSafeAny> | null> | null = null;\n  @Input() nzRender: TemplateRef<NzSafeAny> | null = null;\n  @Input() nzFooter: TemplateRef<NzSafeAny> | null = null;\n  @Input() @InputBoolean() nzShowSearch = false;\n  @Input() nzFilterOption?: (inputValue: string, item: TransferItem) => boolean;\n  @Input() nzSearchPlaceholder?: string;\n  @Input() nzNotFoundContent?: string;\n  @Input() nzTargetKeys: string[] = [];\n  @Input() nzSelectedKeys: string[] = [];\n\n  // events\n  @Output() readonly nzChange = new EventEmitter<TransferChange>();\n  @Output() readonly nzSearchChange = new EventEmitter<TransferSearchChange>();\n  @Output() readonly nzSelectChange = new EventEmitter<TransferSelectChange>();\n\n  // #endregion\n\n  // #region process data\n\n  // left\n  leftDataSource: TransferItem[] = [];\n\n  // right\n  rightDataSource: TransferItem[] = [];\n\n  private splitDataSource(): void {\n    this.leftDataSource = [];\n    this.rightDataSource = [];\n    this.nzDataSource.forEach(record => {\n      if (record.direction === 'right') {\n        record.direction = 'right';\n        this.rightDataSource.push(record);\n      } else {\n        record.direction = 'left';\n        this.leftDataSource.push(record);\n      }\n    });\n  }\n\n  private getCheckedData(direction: TransferDirection): TransferItem[] {\n    return this[direction === 'left' ? 'leftDataSource' : 'rightDataSource'].filter(w => w.checked);\n  }\n\n  handleLeftSelectAll = (checked: boolean) => this.handleSelect('left', checked);\n  handleRightSelectAll = (checked: boolean) => this.handleSelect('right', checked);\n\n  handleLeftSelect = (item: TransferItem) => this.handleSelect('left', !!item.checked, item);\n  handleRightSelect = (item: TransferItem) => this.handleSelect('right', !!item.checked, item);\n\n  handleSelect(direction: TransferDirection, checked: boolean, item?: TransferItem): void {\n    const list = this.getCheckedData(direction);\n    this.updateOperationStatus(direction, list.length);\n    this.nzSelectChange.emit({ direction, checked, list, item });\n  }\n\n  handleFilterChange(ret: { direction: TransferDirection; value: string }): void {\n    this.nzSearchChange.emit(ret);\n  }\n\n  // #endregion\n\n  // #region operation\n\n  leftActive = false;\n  rightActive = false;\n\n  private updateOperationStatus(direction: TransferDirection, count?: number): void {\n    this[direction === 'right' ? 'leftActive' : 'rightActive'] =\n      (typeof count === 'undefined' ? this.getCheckedData(direction).filter(w => !w.disabled).length : count) > 0;\n  }\n\n  moveToLeft = () => this.moveTo('left');\n  moveToRight = () => this.moveTo('right');\n\n  moveTo(direction: TransferDirection): void {\n    const oppositeDirection = direction === 'left' ? 'right' : 'left';\n    this.updateOperationStatus(oppositeDirection, 0);\n    const datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n    const moveList = datasource.filter(item => item.checked === true && !item.disabled);\n    this.nzCanMove({ direction, list: moveList }).subscribe(\n      newMoveList =>\n        this.truthMoveTo(\n          direction,\n          newMoveList.filter(i => !!i)\n        ),\n      () => moveList.forEach(i => (i.checked = false))\n    );\n  }\n\n  private truthMoveTo(direction: TransferDirection, list: TransferItem[]): void {\n    const oppositeDirection = direction === 'left' ? 'right' : 'left';\n    const datasource = direction === 'left' ? this.rightDataSource : this.leftDataSource;\n    const targetDatasource = direction === 'left' ? this.leftDataSource : this.rightDataSource;\n    for (const item of list) {\n      item.checked = false;\n      item.hide = false;\n      item.direction = direction;\n      datasource.splice(datasource.indexOf(item), 1);\n    }\n    targetDatasource.splice(0, 0, ...list);\n    this.updateOperationStatus(oppositeDirection);\n    this.nzChange.emit({\n      from: oppositeDirection,\n      to: direction,\n      list\n    });\n    this.markForCheckAllList();\n  }\n\n  // #endregion\n\n  constructor(private cdr: ChangeDetectorRef, private i18n: NzI18nService) {}\n\n  private markForCheckAllList(): void {\n    if (!this.lists) {\n      return;\n    }\n    this.lists.forEach(i => i.markForCheck());\n  }\n\n  private handleNzTargetKeys(): void {\n    const keys = toArray(this.nzTargetKeys);\n    const hasOwnKey = (e: TransferItem) => e.hasOwnProperty('key');\n    this.leftDataSource.forEach(e => {\n      if (hasOwnKey(e) && keys.indexOf(e.key) !== -1 && !e.disabled) {\n        e.checked = true;\n      }\n    });\n    this.moveToRight();\n  }\n\n  private handleNzSelectedKeys(): void {\n    const keys = toArray(this.nzSelectedKeys);\n    this.nzDataSource.forEach(e => {\n      if (keys.indexOf(e.key) !== -1) {\n        e.checked = true;\n      }\n    });\n    const term = (ld: TransferItem) => ld.disabled === false && ld.checked === true;\n    this.rightActive = this.leftDataSource.some(term);\n    this.leftActive = this.rightDataSource.some(term);\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Transfer');\n      this.markForCheckAllList();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzDataSource) {\n      this.splitDataSource();\n      this.updateOperationStatus('left');\n      this.updateOperationStatus('right');\n      this.cdr.detectChanges();\n      this.markForCheckAllList();\n    }\n    if (changes.nzTargetKeys) {\n      this.handleNzTargetKeys();\n    }\n    if (changes.nzSelectedKeys) {\n      this.handleNzSelectedKeys();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzInputModule } from 'ng-zorro-antd/input';\n\nimport { NzTransferListComponent } from './transfer-list.component';\nimport { NzTransferSearchComponent } from './transfer-search.component';\nimport { NzTransferComponent } from './transfer.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NzCheckboxModule, NzButtonModule, NzInputModule, NzI18nModule, NzIconModule, NzEmptyModule],\n  declarations: [NzTransferComponent, NzTransferListComponent, NzTransferSearchComponent],\n  exports: [NzTransferComponent]\n})\nexport class NzTransferModule {}\n"]},"metadata":{},"sourceType":"module"}