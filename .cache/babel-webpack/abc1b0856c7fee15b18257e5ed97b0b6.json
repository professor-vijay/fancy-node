{"ast":null,"code":"import _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, Renderer2, ElementRef, Input, ContentChildren, NgModule } from '@angular/core';\nimport { __decorate, __metadata } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: space-item.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nvar _c0 = [\"*\"];\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nvar NzSpaceItemComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} renderer\n   * @param {?} elementRef\n   */\n  function NzSpaceItemComponent(renderer, elementRef) {\n    _classCallCheck(this, NzSpaceItemComponent);\n\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n  }\n  /**\n   * @param {?} direction\n   * @param {?} size\n   * @return {?}\n   */\n\n\n  _createClass(NzSpaceItemComponent, [{\n    key: \"setDirectionAndSize\",\n    value: function setDirectionAndSize(direction, size) {\n      /** @type {?} */\n      var marginSize = typeof size === 'string' ? spaceSize[size] : size;\n\n      if (direction === 'horizontal') {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-bottom');\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-right', \"\".concat(marginSize, \"px\"));\n      } else {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-right');\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-bottom', \"\".concat(marginSize, \"px\"));\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }]);\n\n  return NzSpaceItemComponent;\n}();\n\nNzSpaceItemComponent.ɵfac = function NzSpaceItemComponent_Factory(t) {\n  return new (t || NzSpaceItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNzSpaceItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSpaceItemComponent,\n  selectors: [[\"nz-space-item\"], [\"\", \"nz-space-item\", \"\"]],\n  hostAttrs: [1, \"ant-space-item\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzSpaceItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzSpaceItemComponent.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  NzSpaceItemComponent.prototype.renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSpaceItemComponent.prototype.elementRef;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: space.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar NZ_CONFIG_COMPONENT_NAME = 'space';\n\nvar NzSpaceComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} nzConfigService\n   */\n  function NzSpaceComponent(nzConfigService) {\n    _classCallCheck(this, NzSpaceComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.nzDirection = 'horizontal';\n    this.nzSize = 'small';\n    this.destroy$ = new Subject();\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _createClass(NzSpaceComponent, [{\n    key: \"updateSpaceItems\",\n    value: function updateSpaceItems() {\n      var _this = this;\n\n      if (this.nzSpaceItemComponents) {\n        this.nzSpaceItemComponents.forEach(\n        /**\n        * @param {?} item\n        * @return {?}\n        */\n        function (item) {\n          item.setDirectionAndSize(_this.nzDirection, _this.nzSize);\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.updateSpaceItems();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      this.nzSpaceItemComponents.changes.pipe(startWith(null), takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this2.updateSpaceItems();\n      });\n    }\n  }]);\n\n  return NzSpaceComponent;\n}();\n\nNzSpaceComponent.ɵfac = function NzSpaceComponent_Factory(t) {\n  return new (t || NzSpaceComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService));\n};\n\nNzSpaceComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSpaceComponent,\n  selectors: [[\"nz-space\"]],\n  contentQueries: function NzSpaceComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzSpaceItemComponent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzSpaceItemComponents = _t);\n    }\n  },\n  hostAttrs: [1, \"ant-space\"],\n  hostVars: 4,\n  hostBindings: function NzSpaceComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-space-horizontal\", ctx.nzDirection === \"horizontal\")(\"ant-space-vertical\", ctx.nzDirection === \"vertical\");\n    }\n  },\n  inputs: {\n    nzDirection: \"nzDirection\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"NzSpace\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzSpaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzSpaceComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }];\n};\n\nNzSpaceComponent.propDecorators = {\n  nzDirection: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }],\n  nzSpaceItemComponents: [{\n    type: ContentChildren,\n    args: [NzSpaceItemComponent]\n  }]\n};\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), __metadata(\"design:type\", Object)], NzSpaceComponent.prototype, \"nzSize\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSpaceItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-space-item, [nz-space-item]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \" <ng-content></ng-content> \",\n      host: {\n        class: 'ant-space-item'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSpaceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-space',\n      exportAs: 'NzSpace',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \" <ng-content></ng-content> \",\n      host: {\n        class: 'ant-space',\n        '[class.ant-space-horizontal]': 'nzDirection === \"horizontal\"',\n        '[class.ant-space-vertical]': 'nzDirection === \"vertical\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }];\n  }, {\n    nzDirection: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzSpaceItemComponents: [{\n      type: ContentChildren,\n      args: [NzSpaceItemComponent]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzSpaceComponent.prototype.nzDirection;\n  /** @type {?} */\n\n  NzSpaceComponent.prototype.nzSize;\n  /** @type {?} */\n\n  NzSpaceComponent.prototype.nzSpaceItemComponents;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSpaceComponent.prototype.destroy$;\n  /** @type {?} */\n\n  NzSpaceComponent.prototype.nzConfigService;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: space.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzSpaceModule = /*#__PURE__*/_createClass(function NzSpaceModule() {\n  _classCallCheck(this, NzSpaceModule);\n});\n\nNzSpaceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzSpaceModule\n});\nNzSpaceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzSpaceModule_Factory(t) {\n    return new (t || NzSpaceModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzSpaceModule, {\n    declarations: function declarations() {\n      return [NzSpaceComponent, NzSpaceItemComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NzSpaceComponent, NzSpaceItemComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSpaceModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzSpaceComponent, NzSpaceItemComponent],\n      exports: [NzSpaceComponent, NzSpaceItemComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-space.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzSpaceComponent, NzSpaceItemComponent, NzSpaceModule };","map":{"version":3,"sources":["ng-zorro-antd/space/space-item.component.ts","ng-zorro-antd/space/space.component.ts","ng-zorro-antd/space/space.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { NzSpaceDirection, NzSpaceSize } from './types';\n\nconst spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\n@Component({\n  selector: 'nz-space-item, [nz-space-item]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-space-item'\n  }\n})\nexport class NzSpaceItemComponent implements OnInit {\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  setDirectionAndSize(direction: NzSpaceDirection, size: number | NzSpaceSize): void {\n    const marginSize = typeof size === 'string' ? spaceSize[size] : size;\n    if (direction === 'horizontal') {\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-bottom');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'margin-right', `${marginSize}px`);\n    } else {\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'margin-right');\n      this.renderer.setStyle(this.elementRef.nativeElement, 'margin-bottom', `${marginSize}px`);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { AfterViewInit, ChangeDetectionStrategy, Component, ContentChildren, Input, OnChanges, OnDestroy, QueryList } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\n\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { NzSpaceItemComponent } from './space-item.component';\nimport { NzSpaceDirection, NzSpaceSize } from './types';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'space';\n\n@Component({\n  selector: 'nz-space',\n  exportAs: 'NzSpace',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'ant-space',\n    '[class.ant-space-horizontal]': 'nzDirection === \"horizontal\"',\n    '[class.ant-space-vertical]': 'nzDirection === \"vertical\"'\n  }\n})\nexport class NzSpaceComponent implements OnChanges, OnDestroy, AfterViewInit {\n  @Input() nzDirection: NzSpaceDirection = 'horizontal';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: number | NzSpaceSize = 'small';\n\n  @ContentChildren(NzSpaceItemComponent) nzSpaceItemComponents!: QueryList<NzSpaceItemComponent>;\n\n  private destroy$ = new Subject();\n\n  constructor(public nzConfigService: NzConfigService) {}\n\n  private updateSpaceItems(): void {\n    if (this.nzSpaceItemComponents) {\n      this.nzSpaceItemComponents.forEach(item => {\n        item.setDirectionAndSize(this.nzDirection, this.nzSize);\n      });\n    }\n  }\n\n  ngOnChanges(): void {\n    this.updateSpaceItems();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngAfterViewInit(): void {\n    this.nzSpaceItemComponents.changes.pipe(startWith(null), takeUntil(this.destroy$)).subscribe(() => {\n      this.updateSpaceItems();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzSpaceItemComponent } from './space-item.component';\nimport { NzSpaceComponent } from './space.component';\n\n@NgModule({\n  declarations: [NzSpaceComponent, NzSpaceItemComponent],\n  exports: [NzSpaceComponent, NzSpaceItemComponent],\n  imports: [CommonModule]\n})\nexport class NzSpaceModule {}\n"]},"metadata":{},"sourceType":"module"}