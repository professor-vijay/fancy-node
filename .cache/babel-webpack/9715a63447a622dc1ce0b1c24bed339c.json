{"ast":null,"code":"import _inherits from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _toConsumableArray from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, NgModule, Injectable, Injector, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Input, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n/**\n * @fileoverview added by tsickle\n * Generated from: base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/services';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nimport * as ɵngcc6 from 'ng-zorro-antd/icon';\n\nfunction NzMessageContainerComponent_nz_message_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"nz-message\", 2);\n    ɵngcc0.ɵɵlistener(\"destroyed\", function NzMessageContainerComponent_nz_message_1_Template_nz_message_destroyed_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.remove($event.id, $event.userAction);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var instance_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"instance\", instance_r1);\n  }\n}\n\nfunction NzMessageComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 10);\n  }\n}\n\nfunction NzMessageComponent_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 11);\n  }\n}\n\nfunction NzMessageComponent_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 12);\n  }\n}\n\nfunction NzMessageComponent_i_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 13);\n  }\n}\n\nfunction NzMessageComponent_i_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 14);\n  }\n}\n\nfunction NzMessageComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r5.instance.content, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nvar globalCounter = 0;\n/**\n * @abstract\n */\n\nvar NzMNService = /*#__PURE__*/function () {\n  /**\n   * @param {?} nzSingletonService\n   * @param {?} overlay\n   * @param {?} injector\n   */\n  function NzMNService(nzSingletonService, overlay, injector) {\n    _classCallCheck(this, NzMNService);\n\n    this.nzSingletonService = nzSingletonService;\n    this.overlay = overlay;\n    this.injector = injector;\n  }\n  /**\n   * @param {?=} id\n   * @return {?}\n   */\n\n\n  _createClass(NzMNService, [{\n    key: \"remove\",\n    value: function remove(id) {\n      if (this.container) {\n        if (id) {\n          this.container.remove(id);\n        } else {\n          this.container.removeAll();\n        }\n      }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"getInstanceId\",\n    value: function getInstanceId() {\n      return \"\".concat(this.componentPrefix, \"-\").concat(globalCounter++);\n    }\n    /**\n     * @protected\n     * @template T\n     * @param {?} ctor\n     * @return {?}\n     */\n\n  }, {\n    key: \"withContainer\",\n    value: function withContainer(ctor) {\n      /** @type {?} */\n      var containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n\n      if (containerInstance) {\n        return (\n          /** @type {?} */\n          containerInstance\n        );\n      }\n      /** @type {?} */\n\n\n      var overlayRef = this.overlay.create({\n        hasBackdrop: false,\n        scrollStrategy: this.overlay.scrollStrategies.noop(),\n        positionStrategy: this.overlay.position().global()\n      });\n      /** @type {?} */\n\n      var componentPortal = new ComponentPortal(ctor, null, this.injector);\n      /** @type {?} */\n\n      var componentRef = overlayRef.attach(componentPortal);\n      /** @type {?} */\n\n      var overlayPane = overlayRef.overlayElement;\n      overlayPane.style.zIndex = '1010';\n\n      if (!containerInstance) {\n        this.container = containerInstance = componentRef.instance;\n        this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n      }\n\n      return (\n        /** @type {?} */\n        containerInstance\n      );\n    }\n  }]);\n\n  return NzMNService;\n}();\n\nif (false) {\n  /**\n   * @type {?}\n   * @protected\n   */\n  NzMNService.prototype.componentPrefix;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNService.prototype.container;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNService.prototype.nzSingletonService;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNService.prototype.overlay;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzMNService.prototype.injector;\n}\n/**\n * @abstract\n */\n\n\nvar NzMNContainerComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} cdr\n   * @param {?} nzConfigService\n   */\n  function NzMNContainerComponent(cdr, nzConfigService) {\n    _classCallCheck(this, NzMNContainerComponent);\n\n    this.cdr = cdr;\n    this.nzConfigService = nzConfigService;\n    this.instances = [];\n    this.destroy$ = new Subject();\n    this.updateConfig();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NzMNContainerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.subscribeConfigChange();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(data) {\n      /** @type {?} */\n      var instance = this.onCreate(data);\n\n      if (this.instances.length >=\n      /** @type {?} */\n      this.config.nzMaxStack) {\n        this.instances = this.instances.slice(1);\n      }\n\n      this.instances = [].concat(_toConsumableArray(this.instances), [instance]);\n      this.readyInstances();\n      return instance;\n    }\n    /**\n     * @param {?} id\n     * @param {?=} userAction\n     * @return {?}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      var _this = this;\n\n      var userAction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.instances.some(\n      /**\n      * @param {?} instance\n      * @param {?} index\n      * @return {?}\n      */\n      function (instance, index) {\n        if (instance.messageId === id) {\n          _this.instances.splice(index, 1);\n\n          _this.instances = _toConsumableArray(_this.instances);\n\n          _this.onRemove(instance, userAction);\n\n          _this.readyInstances();\n\n          return true;\n        }\n\n        return false;\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      var _this2 = this;\n\n      this.instances.forEach(\n      /**\n      * @param {?} i\n      * @return {?}\n      */\n      function (i) {\n        return _this2.onRemove(i, false);\n      });\n      this.instances = [];\n      this.readyInstances();\n    }\n    /**\n     * @protected\n     * @param {?} instance\n     * @return {?}\n     */\n\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(instance) {\n      instance.options = this.mergeOptions(instance.options);\n      instance.onClose = new Subject();\n      return (\n        /** @type {?} */\n        instance\n      );\n    }\n    /**\n     * @protected\n     * @param {?} instance\n     * @param {?} userAction\n     * @return {?}\n     */\n\n  }, {\n    key: \"onRemove\",\n    value: function onRemove(instance, userAction) {\n      instance.onClose.next(userAction);\n      instance.onClose.complete();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"readyInstances\",\n    value: function readyInstances() {\n      this.cdr.detectChanges();\n    }\n    /**\n     * @protected\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"mergeOptions\",\n    value: function mergeOptions(options) {\n      var _this$config =\n      /** @type {?} */\n      this.config,\n          nzDuration = _this$config.nzDuration,\n          nzAnimate = _this$config.nzAnimate,\n          nzPauseOnHover = _this$config.nzPauseOnHover;\n      return Object.assign({\n        nzDuration: nzDuration,\n        nzAnimate: nzAnimate,\n        nzPauseOnHover: nzPauseOnHover\n      }, options);\n    }\n  }]);\n\n  return NzMNContainerComponent;\n}();\n\nNzMNContainerComponent.ɵfac = function NzMNContainerComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nNzMNContainerComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzMNContainerComponent\n});\n\nif (false) {\n  /** @type {?} */\n  NzMNContainerComponent.prototype.config;\n  /** @type {?} */\n\n  NzMNContainerComponent.prototype.instances;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNContainerComponent.prototype.destroy$;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNContainerComponent.prototype.cdr;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNContainerComponent.prototype.nzConfigService;\n  /**\n   * @abstract\n   * @protected\n   * @return {?}\n   */\n\n  NzMNContainerComponent.prototype.updateConfig = function () {};\n  /**\n   * @abstract\n   * @protected\n   * @return {?}\n   */\n\n\n  NzMNContainerComponent.prototype.subscribeConfigChange = function () {};\n}\n/**\n * @abstract\n */\n\n\nvar NzMNComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} cdr\n   */\n  function NzMNComponent(cdr) {\n    _classCallCheck(this, NzMNComponent);\n\n    this.cdr = cdr;\n    this.destroyed = new EventEmitter();\n    this.eraseTimer = null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(NzMNComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.options =\n      /** @type {?} */\n      this.instance.options;\n\n      if (this.options.nzAnimate) {\n        this.instance.state = 'enter';\n      }\n\n      this.autoClose = this.options.nzDuration > 0;\n\n      if (this.autoClose) {\n        this.initErase();\n        this.startEraseTimeout();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.autoClose) {\n        this.clearEraseTimeout();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onEnter\",\n    value: function onEnter() {\n      if (this.autoClose && this.options.nzPauseOnHover) {\n        this.clearEraseTimeout();\n        this.updateTTL();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onLeave\",\n    value: function onLeave() {\n      if (this.autoClose && this.options.nzPauseOnHover) {\n        this.startEraseTimeout();\n      }\n    }\n    /**\n     * @protected\n     * @param {?=} userAction\n     * @return {?}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this3 = this;\n\n      var userAction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.options.nzAnimate) {\n        this.instance.state = 'leave';\n        this.cdr.detectChanges();\n        setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this3.destroyed.next({\n            id: _this3.instance.messageId,\n            userAction: userAction\n          });\n        }, 200);\n      } else {\n        this.destroyed.next({\n          id: this.instance.messageId,\n          userAction: userAction\n        });\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"initErase\",\n    value: function initErase() {\n      this.eraseTTL = this.options.nzDuration;\n      this.eraseTimingStart = Date.now();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateTTL\",\n    value: function updateTTL() {\n      if (this.autoClose) {\n        this.eraseTTL -= Date.now() -\n        /** @type {?} */\n        this.eraseTimingStart;\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"startEraseTimeout\",\n    value: function startEraseTimeout() {\n      var _this4 = this;\n\n      if (this.eraseTTL > 0) {\n        this.clearEraseTimeout();\n        this.eraseTimer = setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this4.destroy();\n        }, this.eraseTTL);\n        this.eraseTimingStart = Date.now();\n      } else {\n        this.destroy();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearEraseTimeout\",\n    value: function clearEraseTimeout() {\n      if (this.eraseTimer !== null) {\n        clearTimeout(this.eraseTimer);\n        this.eraseTimer = null;\n      }\n    }\n  }]);\n\n  return NzMNComponent;\n}();\n\nNzMNComponent.ɵfac = function NzMNComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nNzMNComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzMNComponent\n});\n\nif (false) {\n  /** @type {?} */\n  NzMNComponent.prototype.instance;\n  /** @type {?} */\n\n  NzMNComponent.prototype.index;\n  /** @type {?} */\n\n  NzMNComponent.prototype.destroyed;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNComponent.prototype.options;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNComponent.prototype.autoClose;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNComponent.prototype.eraseTimer;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNComponent.prototype.eraseTimingStart;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNComponent.prototype.eraseTTL;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMNComponent.prototype.cdr;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: message-container.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar NZ_CONFIG_COMPONENT_NAME = 'message';\n/** @type {?} */\n\nvar NZ_MESSAGE_DEFAULT_CONFIG = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24\n};\n\nvar NzMessageContainerComponent = /*#__PURE__*/function (_NzMNContainerCompone) {\n  _inherits(NzMessageContainerComponent, _NzMNContainerCompone);\n\n  var _super = _createSuper(NzMessageContainerComponent);\n\n  /**\n   * @param {?} cdr\n   * @param {?} nzConfigService\n   */\n  function NzMessageContainerComponent(cdr, nzConfigService) {\n    var _this5;\n\n    _classCallCheck(this, NzMessageContainerComponent);\n\n    _this5 = _super.call(this, cdr, nzConfigService);\n    _this5.destroy$ = new Subject();\n    _this5.instances = [];\n    return _this5;\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n\n\n  _createClass(NzMessageContainerComponent, [{\n    key: \"subscribeConfigChange\",\n    value: function subscribeConfigChange() {\n      var _this6 = this;\n\n      this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).pipe(takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this6.updateConfig();\n      });\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig() {\n      this.config = Object.assign(Object.assign(Object.assign({}, NZ_MESSAGE_DEFAULT_CONFIG), this.config), this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME));\n      this.top = toCssPixel(this.config.nzTop);\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzMessageContainerComponent;\n}(NzMNContainerComponent);\n\nNzMessageContainerComponent.ɵfac = function NzMessageContainerComponent_Factory(t) {\n  return new (t || NzMessageContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService));\n};\n\nNzMessageContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzMessageContainerComponent,\n  selectors: [[\"nz-message-container\"]],\n  exportAs: [\"nzMessageContainer\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[1, \"ant-message\"], [3, \"instance\", \"destroyed\", 4, \"ngFor\", \"ngForOf\"], [3, \"instance\", \"destroyed\"]],\n  template: function NzMessageContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NzMessageContainerComponent_nz_message_1_Template, 1, 1, \"nz-message\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.top);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.instances);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc2.NgForOf, NzMessageComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzMessageContainerComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzConfigService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzMessageContainerComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-message-container',\n      exportAs: 'nzMessageContainer',\n      preserveWhitespaces: false,\n      template: \"\\n    <div class=\\\"ant-message\\\" [style.top]=\\\"top\\\">\\n      <nz-message *ngFor=\\\"let instance of instances\\\" [instance]=\\\"instance\\\" (destroyed)=\\\"remove($event.id, $event.userAction)\\\"></nz-message>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.NzConfigService\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  NzMessageContainerComponent.prototype.destroy$;\n  /** @type {?} */\n\n  NzMessageContainerComponent.prototype.instances;\n  /** @type {?} */\n\n  NzMessageContainerComponent.prototype.top;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: message.service.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzMessageServiceModule = /*#__PURE__*/_createClass(function NzMessageServiceModule() {\n  _classCallCheck(this, NzMessageServiceModule);\n});\n\nNzMessageServiceModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzMessageServiceModule\n});\nNzMessageServiceModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzMessageServiceModule_Factory(t) {\n    return new (t || NzMessageServiceModule)();\n  }\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzMessageServiceModule, [{\n    type: NgModule\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: message.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzMessageService = /*#__PURE__*/function (_NzMNService) {\n  _inherits(NzMessageService, _NzMNService);\n\n  var _super2 = _createSuper(NzMessageService);\n\n  /**\n   * @param {?} nzSingletonService\n   * @param {?} overlay\n   * @param {?} injector\n   */\n  function NzMessageService(nzSingletonService, overlay, injector) {\n    var _this7;\n\n    _classCallCheck(this, NzMessageService);\n\n    _this7 = _super2.call(this, nzSingletonService, overlay, injector);\n    _this7.componentPrefix = 'message-';\n    return _this7;\n  }\n  /**\n   * @param {?} content\n   * @param {?=} options\n   * @return {?}\n   */\n\n\n  _createClass(NzMessageService, [{\n    key: \"success\",\n    value: function success(content, options) {\n      return this.createInstance({\n        type: 'success',\n        content: content\n      }, options);\n    }\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(content, options) {\n      return this.createInstance({\n        type: 'error',\n        content: content\n      }, options);\n    }\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"info\",\n    value: function info(content, options) {\n      return this.createInstance({\n        type: 'info',\n        content: content\n      }, options);\n    }\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"warning\",\n    value: function warning(content, options) {\n      return this.createInstance({\n        type: 'warning',\n        content: content\n      }, options);\n    }\n    /**\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"loading\",\n    value: function loading(content, options) {\n      return this.createInstance({\n        type: 'loading',\n        content: content\n      }, options);\n    }\n    /**\n     * @param {?} type\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(type, content, options) {\n      return this.createInstance({\n        type: type,\n        content: content\n      }, options);\n    }\n    /**\n     * @private\n     * @param {?} message\n     * @param {?=} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"createInstance\",\n    value: function createInstance(message, options) {\n      this.container = this.withContainer(NzMessageContainerComponent);\n      return this.container.create(Object.assign(Object.assign({}, message), {\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options: options\n      }));\n    }\n  }]);\n\n  return NzMessageService;\n}(NzMNService);\n\nNzMessageService.ɵfac = function NzMessageService_Factory(t) {\n  return new (t || NzMessageService)(ɵngcc0.ɵɵinject(ɵngcc3.NzSingletonService), ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector));\n};\n/** @nocollapse */\n\n\nNzMessageService.ctorParameters = function () {\n  return [{\n    type: NzSingletonService\n  }, {\n    type: Overlay\n  }, {\n    type: Injector\n  }];\n};\n/** @nocollapse */\n\n\nNzMessageService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzMessageService_Factory() {\n    return new NzMessageService(ɵɵinject(NzSingletonService), ɵɵinject(Overlay), ɵɵinject(INJECTOR));\n  },\n  token: NzMessageService,\n  providedIn: NzMessageServiceModule\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzMessageService, [{\n    type: Injectable,\n    args: [{\n      providedIn: NzMessageServiceModule\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc3.NzSingletonService\n    }, {\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.Injector\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @protected\n   */\n  NzMessageService.prototype.container;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzMessageService.prototype.componentPrefix;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: message.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzMessageComponent = /*#__PURE__*/function (_NzMNComponent) {\n  _inherits(NzMessageComponent, _NzMNComponent);\n\n  var _super3 = _createSuper(NzMessageComponent);\n\n  /**\n   * @param {?} cdr\n   */\n  function NzMessageComponent(cdr) {\n    var _this8;\n\n    _classCallCheck(this, NzMessageComponent);\n\n    _this8 = _super3.call(this, cdr);\n    _this8.destroyed = new EventEmitter();\n    return _this8;\n  }\n\n  return _createClass(NzMessageComponent);\n}(NzMNComponent);\n\nNzMessageComponent.ɵfac = function NzMessageComponent_Factory(t) {\n  return new (t || NzMessageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzMessageComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzMessageComponent,\n  selectors: [[\"nz-message\"]],\n  inputs: {\n    instance: \"instance\"\n  },\n  outputs: {\n    destroyed: \"destroyed\"\n  },\n  exportAs: [\"nzMessage\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 9,\n  consts: [[1, \"ant-message-notice\", 3, \"mouseenter\", \"mouseleave\"], [1, \"ant-message-notice-content\"], [1, \"ant-message-custom-content\", 3, \"ngClass\"], [3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngSwitchCase\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [3, \"innerHTML\"]],\n  template: function NzMessageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"mouseenter\", function NzMessageComponent_Template_div_mouseenter_0_listener() {\n        return ctx.onEnter();\n      })(\"mouseleave\", function NzMessageComponent_Template_div_mouseleave_0_listener() {\n        return ctx.onLeave();\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵelementContainerStart(3, 3);\n      ɵngcc0.ɵɵtemplate(4, NzMessageComponent_i_4_Template, 1, 0, \"i\", 4);\n      ɵngcc0.ɵɵtemplate(5, NzMessageComponent_i_5_Template, 1, 0, \"i\", 5);\n      ɵngcc0.ɵɵtemplate(6, NzMessageComponent_i_6_Template, 1, 0, \"i\", 6);\n      ɵngcc0.ɵɵtemplate(7, NzMessageComponent_i_7_Template, 1, 0, \"i\", 7);\n      ɵngcc0.ɵɵtemplate(8, NzMessageComponent_i_8_Template, 1, 0, \"i\", 8);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵtemplate(9, NzMessageComponent_ng_container_9_Template, 2, 1, \"ng-container\", 9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"@moveUpMotion\", ctx.instance.state);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", \"ant-message-\" + ctx.instance.type);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.instance.type);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"loading\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.instance.content);\n    }\n  },\n  directives: [ɵngcc2.NgClass, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc5.NzStringTemplateOutletDirective, ɵngcc6.NzIconDirective],\n  encapsulation: 2,\n  data: {\n    animation: [moveUpMotion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzMessageComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }];\n};\n\nNzMessageComponent.propDecorators = {\n  instance: [{\n    type: Input\n  }],\n  destroyed: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzMessageComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-message',\n      exportAs: 'nzMessage',\n      preserveWhitespaces: false,\n      animations: [moveUpMotion],\n      template: \"\\n    <div class=\\\"ant-message-notice\\\" [@moveUpMotion]=\\\"instance.state\\\" (mouseenter)=\\\"onEnter()\\\" (mouseleave)=\\\"onLeave()\\\">\\n      <div class=\\\"ant-message-notice-content\\\">\\n        <div class=\\\"ant-message-custom-content\\\" [ngClass]=\\\"'ant-message-' + instance.type\\\">\\n          <ng-container [ngSwitch]=\\\"instance.type\\\">\\n            <i *ngSwitchCase=\\\"'success'\\\" nz-icon nzType=\\\"check-circle\\\"></i>\\n            <i *ngSwitchCase=\\\"'info'\\\" nz-icon nzType=\\\"info-circle\\\"></i>\\n            <i *ngSwitchCase=\\\"'warning'\\\" nz-icon nzType=\\\"exclamation-circle\\\"></i>\\n            <i *ngSwitchCase=\\\"'error'\\\" nz-icon nzType=\\\"close-circle\\\"></i>\\n            <i *ngSwitchCase=\\\"'loading'\\\" nz-icon nzType=\\\"loading\\\"></i>\\n          </ng-container>\\n          <ng-container *nzStringTemplateOutlet=\\\"instance.content\\\">\\n            <span [innerHTML]=\\\"instance.content\\\"></span>\\n          </ng-container>\\n        </div>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    destroyed: [{\n      type: Output\n    }],\n    instance: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzMessageComponent.prototype.instance;\n  /** @type {?} */\n\n  NzMessageComponent.prototype.destroyed;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: message.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzMessageModule = /*#__PURE__*/_createClass(function NzMessageModule() {\n  _classCallCheck(this, NzMessageModule);\n});\n\nNzMessageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzMessageModule\n});\nNzMessageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzMessageModule_Factory(t) {\n    return new (t || NzMessageModule)();\n  },\n  imports: [[CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzMessageModule, {\n    declarations: function declarations() {\n      return [NzMessageContainerComponent, NzMessageComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzMessageModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n      declarations: [NzMessageContainerComponent, NzMessageComponent],\n      entryComponents: [NzMessageContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: typings.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * @record\n */\n\n\nfunction NzMessageDataOptions() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  NzMessageDataOptions.prototype.nzDuration;\n  /** @type {?|undefined} */\n\n  NzMessageDataOptions.prototype.nzAnimate;\n  /** @type {?|undefined} */\n\n  NzMessageDataOptions.prototype.nzPauseOnHover;\n}\n/**\n * @record\n */\n\n\nfunction NzMessageData() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  NzMessageData.prototype.type;\n  /** @type {?|undefined} */\n\n  NzMessageData.prototype.content;\n  /** @type {?|undefined} */\n\n  NzMessageData.prototype.messageId;\n  /** @type {?|undefined} */\n\n  NzMessageData.prototype.createdAt;\n  /** @type {?|undefined} */\n\n  NzMessageData.prototype.options;\n  /** @type {?|undefined} */\n\n  NzMessageData.prototype.state;\n  /** @type {?|undefined} */\n\n  NzMessageData.prototype.onClose;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-message.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzMNComponent, NzMNContainerComponent, NzMNService, NzMessageComponent, NzMessageContainerComponent, NzMessageModule, NzMessageService, NzMessageServiceModule };","map":{"version":3,"sources":["ng-zorro-antd/message/base.ts","ng-zorro-antd/message/message-container.component.ts","ng-zorro-antd/message/message.service.module.ts","ng-zorro-antd/message/message.service.ts","ng-zorro-antd/message/message.component.ts","ng-zorro-antd/message/message.module.ts","ng-zorro-antd/message/typings.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectorRef, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\nimport { Subject } from 'rxjs';\n\nimport { NzMessageData, NzMessageDataOptions } from './typings';\n\nlet globalCounter = 0;\n\nexport abstract class NzMNService {\n  protected abstract componentPrefix: string;\n  protected container?: NzMNContainerComponent;\n\n  constructor(protected nzSingletonService: NzSingletonService, protected overlay: Overlay, private injector: Injector) {}\n\n  remove(id?: string): void {\n    if (this.container) {\n      if (id) {\n        this.container.remove(id);\n      } else {\n        this.container.removeAll();\n      }\n    }\n  }\n\n  protected getInstanceId(): string {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n\n  protected withContainer<T extends NzMNContainerComponent>(ctor: ComponentType<T>): T {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n    if (containerInstance) {\n      return containerInstance as T;\n    }\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayPane = overlayRef.overlayElement;\n    overlayPane.style.zIndex = '1010';\n\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n    }\n\n    return containerInstance as T;\n  }\n}\n\nexport abstract class NzMNContainerComponent implements OnInit, OnDestroy {\n  config?: Required<MessageConfig>;\n  instances: Array<Required<NzMessageData>> = [];\n\n  protected readonly destroy$ = new Subject<void>();\n\n  constructor(protected cdr: ChangeDetectorRef, protected nzConfigService: NzConfigService) {\n    this.updateConfig();\n  }\n\n  ngOnInit(): void {\n    this.subscribeConfigChange();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  create(data: NzMessageData): Required<NzMessageData> {\n    const instance = this.onCreate(data);\n\n    if (this.instances.length >= this.config!.nzMaxStack) {\n      this.instances = this.instances.slice(1);\n    }\n\n    this.instances = [...this.instances, instance];\n\n    this.readyInstances();\n\n    return instance;\n  }\n\n  remove(id: string, userAction: boolean = false): void {\n    this.instances.some((instance, index) => {\n      if (instance.messageId === id) {\n        this.instances.splice(index, 1);\n        this.instances = [...this.instances];\n        this.onRemove(instance, userAction);\n        this.readyInstances();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  removeAll(): void {\n    this.instances.forEach(i => this.onRemove(i, false));\n    this.instances = [];\n\n    this.readyInstances();\n  }\n\n  protected onCreate(instance: NzMessageData): Required<NzMessageData> {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject<boolean>();\n    return instance as Required<NzMessageData>;\n  }\n\n  protected onRemove(instance: Required<NzMessageData>, userAction: boolean): void {\n    instance.onClose.next(userAction);\n    instance.onClose.complete();\n  }\n\n  protected readyInstances(): void {\n    this.cdr.detectChanges();\n  }\n\n  protected abstract updateConfig(): void;\n\n  protected abstract subscribeConfigChange(): void;\n\n  protected mergeOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\n    const { nzDuration, nzAnimate, nzPauseOnHover } = this.config!;\n    return { nzDuration, nzAnimate, nzPauseOnHover, ...options };\n  }\n}\n\nexport abstract class NzMNComponent implements OnInit, OnDestroy {\n  instance!: Required<NzMessageData>;\n  index?: number;\n\n  readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  protected options!: Required<NzMessageDataOptions>;\n  protected autoClose?: boolean;\n  protected eraseTimer: number | null = null;\n  protected eraseTimingStart?: number;\n  protected eraseTTL!: number;\n\n  constructor(protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.options = this.instance.options as Required<NzMessageDataOptions>;\n\n    if (this.options.nzAnimate) {\n      this.instance.state = 'enter';\n    }\n\n    this.autoClose = this.options.nzDuration > 0;\n\n    if (this.autoClose) {\n      this.initErase();\n      this.startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.autoClose) {\n      this.clearEraseTimeout();\n    }\n  }\n\n  onEnter(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.clearEraseTimeout();\n      this.updateTTL();\n    }\n  }\n\n  onLeave(): void {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.startEraseTimeout();\n    }\n  }\n\n  protected destroy(userAction: boolean = false): void {\n    if (this.options.nzAnimate) {\n      this.instance.state = 'leave';\n      this.cdr.detectChanges();\n      setTimeout(() => {\n        this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n      }, 200);\n    } else {\n      this.destroyed.next({ id: this.instance.messageId, userAction: userAction });\n    }\n  }\n\n  private initErase(): void {\n    this.eraseTTL = this.options.nzDuration;\n    this.eraseTimingStart = Date.now();\n  }\n\n  private updateTTL(): void {\n    if (this.autoClose) {\n      this.eraseTTL -= Date.now() - this.eraseTimingStart!;\n    }\n  }\n\n  private startEraseTimeout(): void {\n    if (this.eraseTTL > 0) {\n      this.clearEraseTimeout();\n      this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n      this.eraseTimingStart = Date.now();\n    } else {\n      this.destroy();\n    }\n  }\n\n  private clearEraseTimeout(): void {\n    if (this.eraseTimer !== null) {\n      clearTimeout(this.eraseTimer);\n      this.eraseTimer = null;\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { MessageConfig, NzConfigService } from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\n\nimport { takeUntil } from 'rxjs/operators';\nimport { NzMNContainerComponent } from './base';\nimport { NzMessageData } from './typings';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\n\nconst NZ_MESSAGE_DEFAULT_CONFIG: Required<MessageConfig> = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message-container',\n  exportAs: 'nzMessageContainer',\n  preserveWhitespaces: false,\n  template: `\n    <div class=\"ant-message\" [style.top]=\"top\">\n      <nz-message *ngFor=\"let instance of instances\" [instance]=\"instance\" (destroyed)=\"remove($event.id, $event.userAction)\"></nz-message>\n    </div>\n  `\n})\nexport class NzMessageContainerComponent extends NzMNContainerComponent {\n  readonly destroy$ = new Subject<void>();\n\n  instances: Array<Required<NzMessageData>> = [];\n  top?: string | null;\n\n  constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService) {\n    super(cdr, nzConfigService);\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.updateConfig());\n  }\n\n  protected updateConfig(): void {\n    this.config = {\n      ...NZ_MESSAGE_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzMessageServiceModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core/services';\n\nimport { NzMNService } from './base';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageServiceModule } from './message.service.module';\nimport { NzMessageData, NzMessageDataOptions, NzMessageRef } from './typings';\n\n@Injectable({\n  providedIn: NzMessageServiceModule\n})\nexport class NzMessageService extends NzMNService {\n  protected container?: NzMessageContainerComponent;\n  protected componentPrefix = 'message-';\n\n  constructor(nzSingletonService: NzSingletonService, overlay: Overlay, injector: Injector) {\n    super(nzSingletonService, overlay, injector);\n  }\n\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'success', content }, options);\n  }\n\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'error', content }, options);\n  }\n\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'info', content }, options);\n  }\n\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'warning', content }, options);\n  }\n\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageRef {\n    return this.createInstance({ type: 'loading', content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\n    content: string | TemplateRef<void>,\n    options?: NzMessageDataOptions\n  ): NzMessageRef {\n    return this.createInstance({ type, content }, options);\n  }\n\n  private createInstance(message: NzMessageData, options?: NzMessageDataOptions): NzMessageRef {\n    this.container = this.withContainer(NzMessageContainerComponent);\n\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options\n      }\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\n\nimport { NzMNComponent } from './base';\nimport { NzMessageData } from './typings';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message',\n  exportAs: 'nzMessage',\n  preserveWhitespaces: false,\n  animations: [moveUpMotion],\n  template: `\n    <div class=\"ant-message-notice\" [@moveUpMotion]=\"instance.state\" (mouseenter)=\"onEnter()\" (mouseleave)=\"onLeave()\">\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\n            <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\n            <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\n            <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\n            <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class NzMessageComponent extends NzMNComponent implements OnInit, OnDestroy {\n  @Input() instance!: Required<NzMessageData>;\n  @Output() readonly destroyed = new EventEmitter<{ id: string; userAction: boolean }>();\n\n  constructor(cdr: ChangeDetectorRef) {\n    super(cdr);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzMessageContainerComponent } from './message-container.component';\nimport { NzMessageComponent } from './message.component';\nimport { NzMessageServiceModule } from './message.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzOutletModule, NzMessageServiceModule],\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\n  entryComponents: [NzMessageContainerComponent]\n})\nexport class NzMessageModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzMessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';\n\nexport interface NzMessageDataOptions {\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\nexport interface NzMessageData {\n  type?: NzMessageType | string;\n  content?: string | TemplateRef<void>;\n  messageId?: string;\n  createdAt?: Date;\n  options?: NzMessageDataOptions;\n  state?: 'enter' | 'leave';\n\n  onClose?: Subject<boolean>;\n}\n\nexport type NzMessageRef = Pick<Required<NzMessageData>, 'onClose' | 'messageId'>;\n\n/**\n * @deprecated use `NzMessageRef` instead\n * @breaking-change 10.0.0\n */\nexport type NzMessageDataFilled = NzMessageRef;\n"]},"metadata":{},"sourceType":"module"}