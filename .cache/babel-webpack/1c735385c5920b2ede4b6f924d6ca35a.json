{"ast":null,"code":"import _toConsumableArray from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _inherits from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { NgZone, EventEmitter, Injectable, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TestBed } from '@angular/core/testing';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n/**\n * @fileoverview added by tsickle\n * Generated from: event-objects.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Creates a browser MouseEvent with the specified options.\n * @param {?} type\n * @param {?=} x\n * @param {?=} y\n * @param {?=} button\n * @return {?}\n */\n\nimport * as Éµngcc0 from '@angular/core';\n\nfunction createMouseEvent(type) {\n  var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var button = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  /** @type {?} */\n  var event = document.createEvent('MouseEvent');\n  event.initMouseEvent(type, true\n  /* canBubble */\n  , false\n  /* cancelable */\n  , window\n  /* view */\n  , 0\n  /* detail */\n  , x\n  /* screenX */\n  , y\n  /* screenY */\n  , x\n  /* clientX */\n  , y\n  /* clientY */\n  , false\n  /* ctrlKey */\n  , false\n  /* altKey */\n  , false\n  /* shiftKey */\n  , false\n  /* metaKey */\n  , button\n  /* button */\n  , null\n  /* relatedTarget */\n  ); // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n\n  Object.defineProperty(event, 'buttons', {\n    get:\n    /**\n    * @return {?}\n    */\n    function get() {\n      return 1;\n    }\n  });\n  return event;\n}\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n * @param {?} type\n * @param {?=} pageX\n * @param {?=} pageY\n * @return {?}\n */\n\n\nfunction createTouchEvent(type) {\n  var pageX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var pageY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n\n  /** @type {?} */\n  var event = new UIEvent(type, {\n    detail: 0,\n    view: window\n  });\n  /** @type {?} */\n\n  var touchDetails = {\n    pageX: pageX,\n    pageY: pageY,\n    clientX: pageX,\n    clientY: pageY\n  }; // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n\n  Object.defineProperties(event, {\n    touches: {\n      value: [touchDetails]\n    },\n    targetTouches: {\n      value: [touchDetails]\n    },\n    changedTouches: {\n      value: [touchDetails]\n    }\n  });\n  return event;\n}\n/**\n * Dispatches a keydown event from an element.\n * @param {?} type\n * @param {?} keyCode\n * @param {?=} target\n * @param {?=} key\n * @param {?=} ctrlKey\n * @param {?=} metaKey\n * @param {?=} shiftKey\n * @return {?}\n */\n\n\nfunction createKeyboardEvent(type, keyCode, target, key, ctrlKey, metaKey, shiftKey) {\n  /** @type {?} */\n  var event =\n  /** @type {?} */\n  document.createEvent('KeyboardEvent');\n  /** @type {?} */\n\n  var originalPreventDefault = event.preventDefault; // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, 0, 0, 0, 0, 0, keyCode);\n  } else {\n    event.initKeyboardEvent(type, true, true, window, 0, key, 0, '', false);\n  } // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n\n\n  Object.defineProperties(event, {\n    keyCode: {\n      get:\n      /**\n      * @return {?}\n      */\n      function get() {\n        return keyCode;\n      }\n    },\n    key: {\n      get:\n      /**\n      * @return {?}\n      */\n      function get() {\n        return key;\n      }\n    },\n    target: {\n      get:\n      /**\n      * @return {?}\n      */\n      function get() {\n        return target;\n      }\n    },\n    ctrlKey: {\n      get:\n      /**\n      * @return {?}\n      */\n      function get() {\n        return ctrlKey;\n      }\n    },\n    metaKey: {\n      get:\n      /**\n      * @return {?}\n      */\n      function get() {\n        return metaKey;\n      }\n    },\n    shiftKey: {\n      get:\n      /**\n      * @return {?}\n      */\n      function get() {\n        return shiftKey;\n      }\n    }\n  }); // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  // tslint:disable-next-line:typedef\n\n  event.preventDefault =\n  /**\n  * @return {?}\n  */\n  function () {\n    Object.defineProperty(event, 'defaultPrevented', {\n      get:\n      /**\n      * @return {?}\n      */\n      function get() {\n        return true;\n      },\n      configurable: true\n    }); // tslint:disable-next-line:no-invalid-this\n\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n/**\n * Creates a fake event object with any desired event type.\n * @param {?} type\n * @param {?=} canBubble\n * @param {?=} cancelable\n * @return {?}\n */\n\n\nfunction createFakeEvent(type) {\n  var canBubble = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var cancelable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  /** @type {?} */\n  var event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n  return event;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: dispatch-events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Utility to dispatch any event on a Node.\n * @param {?} node\n * @param {?} event\n * @return {?}\n */\n\n\nfunction dispatchEvent(node, event) {\n  node.dispatchEvent(event);\n  return event;\n}\n/**\n * Shorthand to dispatch a fake event on a specified node.\n * @param {?} node\n * @param {?} type\n * @param {?=} canBubble\n * @return {?}\n */\n\n\nfunction dispatchFakeEvent(node, type, canBubble) {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n/**\n * Shorthand to dispatch a keyboard event with a specified key code.\n * @param {?} node\n * @param {?} type\n * @param {?} keyCode\n * @param {?=} target\n * @return {?}\n */\n\n\nfunction dispatchKeyboardEvent(node, type, keyCode, target) {\n  return (\n    /** @type {?} */\n    dispatchEvent(node, createKeyboardEvent(type, keyCode, target))\n  );\n}\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n * @param {?} node\n * @param {?} type\n * @param {?=} x\n * @param {?=} y\n * @param {?=} event\n * @return {?}\n */\n\n\nfunction dispatchMouseEvent(node, type) {\n  var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var event = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : createMouseEvent(type, x, y);\n  return (\n    /** @type {?} */\n    dispatchEvent(node, event)\n  );\n}\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n * @param {?} node\n * @param {?} type\n * @param {?=} x\n * @param {?=} y\n * @return {?}\n */\n\n\nfunction dispatchTouchEvent(node, type) {\n  var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return (\n    /** @type {?} */\n    dispatchEvent(node, createTouchEvent(type, x, y))\n  );\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: type-in-element.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param {?} value Value to be set on the input.\n * @param {?} element Element onto which to set the value.\n * @return {?}\n */\n\n\nfunction typeInElement(value, element) {\n  element.focus();\n  element.value = value;\n  dispatchFakeEvent(element, 'input');\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: wrapped-error-message.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Gets a RegExp used to detect an angular wrapped error message.\n * See https://github.com/angular/angular/issues/8348\n * @param {?} e\n * @return {?}\n */\n\n\nfunction wrappedErrorMessage(e) {\n  /** @type {?} */\n  var escapedMessage = e.message.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n  return new RegExp(escapedMessage);\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: fake-viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @record\n */\n\n\nfunction FakeViewportRect() {}\n\nif (false) {\n  /** @type {?} */\n  FakeViewportRect.prototype.left;\n  /** @type {?} */\n\n  FakeViewportRect.prototype.top;\n  /** @type {?} */\n\n  FakeViewportRect.prototype.width;\n  /** @type {?} */\n\n  FakeViewportRect.prototype.height;\n  /** @type {?} */\n\n  FakeViewportRect.prototype.bottom;\n  /** @type {?} */\n\n  FakeViewportRect.prototype.right;\n}\n/**\n * @record\n */\n\n\nfunction FakeViewportSize() {}\n\nif (false) {\n  /** @type {?} */\n  FakeViewportSize.prototype.width;\n  /** @type {?} */\n\n  FakeViewportSize.prototype.height;\n}\n/**\n * @record\n */\n\n\nfunction FakeViewportScrollPosition() {}\n\nif (false) {\n  /** @type {?} */\n  FakeViewportScrollPosition.prototype.top;\n  /** @type {?} */\n\n  FakeViewportScrollPosition.prototype.left;\n}\n/**\n * \\@docs-private\n */\n\n\nvar FakeViewportRuler = /*#__PURE__*/function () {\n  function FakeViewportRuler() {\n    _classCallCheck(this, FakeViewportRuler);\n  }\n\n  _createClass(FakeViewportRuler, [{\n    key: \"getViewportRect\",\n    value:\n    /**\n     * @return {?}\n     */\n    function getViewportRect() {\n      return {\n        left: 0,\n        top: 0,\n        width: 1014,\n        height: 686,\n        bottom: 686,\n        right: 1014\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getViewportSize\",\n    value: function getViewportSize() {\n      return {\n        width: 1014,\n        height: 686\n      };\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getViewportScrollPosition\",\n    value: function getViewportScrollPosition() {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n  }]);\n\n  return FakeViewportRuler;\n}();\n/**\n * @fileoverview added by tsickle\n * Generated from: mock-ng-zone.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mock synchronous NgZone implementation that can be used\n * to flush out `onStable` subscriptions in tests.\n *\n * via: https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts\n * \\@docs-private\n */\n\n\nvar MockNgZone = /*#__PURE__*/function (_NgZone) {\n  _inherits(MockNgZone, _NgZone);\n\n  var _super = _createSuper(MockNgZone);\n\n  function MockNgZone() {\n    var _this;\n\n    _classCallCheck(this, MockNgZone);\n\n    _this = _super.call(this, {\n      enableLongStackTrace: false\n    }); // tslint:disable-next-line:no-any\n\n    _this.onStable = new EventEmitter(false);\n    return _this;\n  } // tslint:disable-next-line:no-any ban-types\n\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n\n\n  _createClass(MockNgZone, [{\n    key: \"run\",\n    value: function run(fn) {\n      return fn();\n    } // tslint:disable-next-line:ban-types no-any\n\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"runOutsideAngular\",\n    value: function runOutsideAngular(fn) {\n      return fn();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"simulateZoneExit\",\n    value: function simulateZoneExit() {\n      this.onStable.emit(null);\n    }\n  }]);\n\n  return MockNgZone;\n}(NgZone);\n\nMockNgZone.Éµfac = function MockNgZone_Factory(t) {\n  return new (t || MockNgZone)();\n};\n\nMockNgZone.Éµprov = Éµngcc0.ÉµÉµdefineInjectable({\n  token: MockNgZone,\n  factory: MockNgZone.Éµfac\n});\n/** @nocollapse */\n\nMockNgZone.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(MockNgZone, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  MockNgZone.prototype.onStable;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: component-bed.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n * @template T\n */\n\n\nfunction ComponentBed() {}\n\nif (false) {\n  /** @type {?} */\n  ComponentBed.prototype.bed;\n  /** @type {?} */\n\n  ComponentBed.prototype.fixture;\n  /** @type {?} */\n\n  ComponentBed.prototype.nativeElement;\n  /** @type {?} */\n\n  ComponentBed.prototype.debugElement;\n  /** @type {?} */\n\n  ComponentBed.prototype.component;\n}\n/**\n * @template T\n * @param {?} component\n * @param {?=} options\n * @return {?}\n */\n\n\nfunction createComponentBed(component) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    providers: [],\n    declarations: [],\n    imports: []\n  };\n  var imports = options.imports,\n      declarations = options.declarations,\n      providers = options.providers;\n  /** @type {?} */\n\n  var config = {\n    imports: [NoopAnimationsModule, CommonModule].concat(_toConsumableArray(imports || [])),\n    declarations: [component].concat(_toConsumableArray(declarations || [])),\n    schemas: [NO_ERRORS_SCHEMA],\n    providers: providers || []\n  };\n  /** @type {?} */\n\n  var bed = TestBed.configureTestingModule(config);\n  /** @type {?} */\n\n  var fixture = TestBed.createComponent(component);\n  fixture.detectChanges();\n  return {\n    bed: bed,\n    fixture: fixture,\n    nativeElement: fixture.nativeElement,\n    debugElement: fixture.debugElement,\n    component: fixture.componentInstance\n  };\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-core-testing.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FakeViewportRuler, MockNgZone, createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent, dispatchEvent, dispatchFakeEvent, dispatchKeyboardEvent, dispatchMouseEvent, dispatchTouchEvent, typeInElement, wrappedErrorMessage, createComponentBed as ÉµcreateComponentBed };","map":{"version":3,"sources":["ng-zorro-antd/core/testing/event-objects.ts","ng-zorro-antd/core/testing/dispatch-events.ts","ng-zorro-antd/core/testing/type-in-element.ts","ng-zorro-antd/core/testing/wrapped-error-message.ts","ng-zorro-antd/core/testing/fake-viewport-ruler.ts","ng-zorro-antd/core/testing/mock-ng-zone.ts","ng-zorro-antd/core/testing/component-bed.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\n/** Creates a browser MouseEvent with the specified options. */\nexport function createMouseEvent(type: string, x: number = 0, y: number = 0, button: number = 0): MouseEvent {\n  const event = document.createEvent('MouseEvent');\n\n  event.initMouseEvent(\n    type,\n    true /* canBubble */,\n    false /* cancelable */,\n    window /* view */,\n    0 /* detail */,\n    x /* screenX */,\n    y /* screenY */,\n    x /* clientX */,\n    y /* clientY */,\n    false /* ctrlKey */,\n    false /* altKey */,\n    false /* shiftKey */,\n    false /* metaKey */,\n    button /* button */,\n    null /* relatedTarget */\n  );\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', { get: () => 1 });\n\n  return event;\n}\n\n/** Creates a browser TouchEvent with the specified pointer coordinates. */\nexport function createTouchEvent(type: string, pageX: number = 0, pageY: number = 0): UIEvent {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = new UIEvent(type, { detail: 0, view: window });\n  const touchDetails = { pageX, pageY, clientX: pageX, clientY: pageY };\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  Object.defineProperties(event, {\n    touches: { value: [touchDetails] },\n    targetTouches: { value: [touchDetails] },\n    changedTouches: { value: [touchDetails] }\n  });\n\n  return event;\n}\n\n/** Dispatches a keydown event from an element. */\nexport function createKeyboardEvent(\n  type: string,\n  keyCode: number,\n  target?: Element,\n  key?: string,\n  ctrlKey?: boolean,\n  metaKey?: boolean,\n  shiftKey?: boolean\n): KeyboardEvent {\n  const event = document.createEvent('KeyboardEvent') as NzSafeAny;\n  const originalPreventDefault = event.preventDefault;\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  if (event.initKeyEvent) {\n    event.initKeyEvent(type, true, true, window, 0, 0, 0, 0, 0, keyCode);\n  } else {\n    event.initKeyboardEvent(type, true, true, window, 0, key, 0, '', false);\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  Object.defineProperties(event, {\n    keyCode: { get: () => keyCode },\n    key: { get: () => key },\n    target: { get: () => target },\n    ctrlKey: { get: () => ctrlKey },\n    metaKey: { get: () => metaKey },\n    shiftKey: { get: () => shiftKey }\n  });\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  // tslint:disable-next-line:typedef\n  event.preventDefault = function() {\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true, configurable: true });\n    // tslint:disable-next-line:no-invalid-this\n    return originalPreventDefault.apply(this, arguments);\n  };\n\n  return event;\n}\n\n/** Creates a fake event object with any desired event type. */\nexport function createFakeEvent(type: string, canBubble: boolean = true, cancelable: boolean = true): Event {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n  return event;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { createFakeEvent, createKeyboardEvent, createMouseEvent, createTouchEvent } from './event-objects';\n\n/** Utility to dispatch any event on a Node. */\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/** Shorthand to dispatch a fake event on a specified node. */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/** Shorthand to dispatch a keyboard event with a specified key code. */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode: number, target?: Element): KeyboardEvent {\n  return dispatchEvent(node, createKeyboardEvent(type, keyCode, target)) as KeyboardEvent;\n}\n\n/** Shorthand to dispatch a mouse event on the specified coordinates. */\nexport function dispatchMouseEvent(\n  node: Node,\n  type: string,\n  x: number = 0,\n  y: number = 0,\n  event: MouseEvent = createMouseEvent(type, x, y)\n): MouseEvent {\n  return dispatchEvent(node, event) as MouseEvent;\n}\n\n/** Shorthand to dispatch a touch event on the specified coordinates. */\nexport function dispatchTouchEvent(node: Node, type: string, x: number = 0, y: number = 0): TouchEvent {\n  return dispatchEvent(node, createTouchEvent(type, x, y)) as TouchEvent;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { dispatchFakeEvent } from './dispatch-events';\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param value Value to be set on the input.\n * @param element Element onto which to set the value.\n */\nexport function typeInElement(value: string, element: HTMLInputElement | HTMLTextAreaElement): void {\n  element.focus();\n  element.value = value;\n  dispatchFakeEvent(element, 'input');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Gets a RegExp used to detect an angular wrapped error message.\n * See https://github.com/angular/angular/issues/8348\n */\nexport function wrappedErrorMessage(e: Error): RegExp {\n  const escapedMessage = e.message.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n  return new RegExp(escapedMessage);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface FakeViewportRect {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n  bottom: number;\n  right: number;\n}\n\ninterface FakeViewportSize {\n  width: number;\n  height: number;\n}\n\ninterface FakeViewportScrollPosition {\n  top: number;\n  left: number;\n}\n\n/** @docs-private */\nexport class FakeViewportRuler {\n  getViewportRect(): FakeViewportRect {\n    return {\n      left: 0,\n      top: 0,\n      width: 1014,\n      height: 686,\n      bottom: 686,\n      right: 1014\n    };\n  }\n\n  getViewportSize(): FakeViewportSize {\n    return { width: 1014, height: 686 };\n  }\n\n  getViewportScrollPosition(): FakeViewportScrollPosition {\n    return { top: 0, left: 0 };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * Mock synchronous NgZone implementation that can be used\n * to flush out `onStable` subscriptions in tests.\n *\n * via: https://github.com/angular/angular/blob/master/packages/core/testing/src/ng_zone_mock.ts\n * @docs-private\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  // tslint:disable-next-line:no-any\n  onStable: EventEmitter<any> = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  // tslint:disable-next-line:no-any ban-types\n  run(fn: Function): any {\n    return fn();\n  }\n\n  // tslint:disable-next-line:ban-types no-any\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { DebugElement, NgModule, NO_ERRORS_SCHEMA, Type } from '@angular/core';\nimport { ComponentFixture, TestBed, TestBedStatic } from '@angular/core/testing';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\ntype ComponentBedOptions = Pick<NgModule, 'providers' | 'declarations' | 'imports'>;\nexport interface ComponentBed<T> {\n  bed: TestBedStatic;\n  fixture: ComponentFixture<T>;\n  nativeElement: HTMLElement;\n  debugElement: DebugElement;\n  component: T;\n}\nexport function createComponentBed<T>(\n  component: Type<T>,\n  options: ComponentBedOptions = {\n    providers: [],\n    declarations: [],\n    imports: []\n  }\n): ComponentBed<T> {\n  const { imports, declarations, providers } = options;\n  const config = {\n    imports: [NoopAnimationsModule, CommonModule, ...(imports || [])],\n    declarations: [component, ...(declarations || [])],\n    schemas: [NO_ERRORS_SCHEMA],\n    providers: providers || []\n  };\n  const bed = TestBed.configureTestingModule(config);\n  const fixture = TestBed.createComponent<T>(component);\n  fixture.detectChanges();\n  return {\n    bed,\n    fixture,\n    nativeElement: fixture.nativeElement,\n    debugElement: fixture.debugElement,\n    component: fixture.componentInstance\n  };\n}\n"]},"metadata":{},"sourceType":"module"}