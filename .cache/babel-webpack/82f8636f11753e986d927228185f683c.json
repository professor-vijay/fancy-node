{"ast":null,"code":"import _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, forwardRef, ChangeDetectorRef, ViewChild, Input, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n/**\n * @fileoverview added by tsickle\n * Generated from: switch.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/wave';\nimport * as ɵngcc4 from '@angular/common';\nimport * as ɵngcc5 from 'ng-zorro-antd/icon';\nimport * as ɵngcc6 from 'ng-zorro-antd/core/outlet';\nvar _c0 = [\"switchElement\"];\n\nfunction NzSwitchComponent_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 7);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NzSwitchComponent_ng_container_4_ng_container_1_Template, 2, 1, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_5_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.nzUnCheckedChildren);\n  }\n}\n\nfunction NzSwitchComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NzSwitchComponent_ng_template_5_ng_container_0_Template, 2, 1, \"ng-container\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r4.nzUnCheckedChildren);\n  }\n}\n\nvar NZ_CONFIG_COMPONENT_NAME = 'switch';\n\nvar NzSwitchComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} nzConfigService\n   * @param {?} cdr\n   * @param {?} focusMonitor\n   */\n  function NzSwitchComponent(nzConfigService, cdr, focusMonitor) {\n    _classCallCheck(this, NzSwitchComponent);\n\n    this.nzConfigService = nzConfigService;\n    this.cdr = cdr;\n    this.focusMonitor = focusMonitor;\n    this.isChecked = false;\n\n    this.onChange =\n    /**\n    * @return {?}\n    */\n    function () {};\n\n    this.onTouched =\n    /**\n    * @return {?}\n    */\n    function () {};\n\n    this.nzLoading = false;\n    this.nzDisabled = false;\n    this.nzControl = false;\n    this.nzCheckedChildren = null;\n    this.nzUnCheckedChildren = null;\n    this.nzSize = 'default';\n  }\n  /**\n   * @param {?} e\n   * @return {?}\n   */\n\n\n  _createClass(NzSwitchComponent, [{\n    key: \"onHostClick\",\n    value: function onHostClick(e) {\n      e.preventDefault();\n\n      if (!this.nzDisabled && !this.nzLoading && !this.nzControl) {\n        this.updateValue(!this.isChecked);\n      }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      if (this.isChecked !== value) {\n        this.isChecked = value;\n        this.onChange(this.isChecked);\n      }\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      if (!this.nzControl && !this.nzDisabled && !this.nzLoading) {\n        if (e.keyCode === LEFT_ARROW) {\n          this.updateValue(false);\n          e.preventDefault();\n        } else if (e.keyCode === RIGHT_ARROW) {\n          this.updateValue(true);\n          e.preventDefault();\n        } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\n          this.updateValue(!this.isChecked);\n          e.preventDefault();\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _a;\n\n      this.focusMonitor.focusVia((_a = this.switchElement) === null || _a === void 0 ? void 0 : _a.nativeElement, 'keyboard');\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var _a;\n\n      (_a = this.switchElement) === null || _a === void 0 ? void 0 : _a.nativeElement.blur();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      this.focusMonitor.monitor(\n      /** @type {?} */\n      this.switchElement.nativeElement, true).subscribe(\n      /**\n      * @param {?} focusOrigin\n      * @return {?}\n      */\n      function (focusOrigin) {\n        if (!focusOrigin) {\n          /** https://github.com/angular/angular/issues/17793 **/\n          Promise.resolve().then(\n          /**\n          * @return {?}\n          */\n          function () {\n            return _this.onTouched();\n          });\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.focusMonitor.stopMonitoring(\n      /** @type {?} */\n      this.switchElement.nativeElement);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.isChecked = value;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this.nzDisabled = disabled;\n      this.cdr.markForCheck();\n    }\n  }]);\n\n  return NzSwitchComponent;\n}();\n\nNzSwitchComponent.ɵfac = function NzSwitchComponent_Factory(t) {\n  return new (t || NzSwitchComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor));\n};\n\nNzSwitchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzSwitchComponent,\n  selectors: [[\"nz-switch\"]],\n  viewQuery: function NzSwitchComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.switchElement = _t.first);\n    }\n  },\n  hostBindings: function NzSwitchComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzSwitchComponent_click_HostBindingHandler($event) {\n        return ctx.onHostClick($event);\n      });\n    }\n  },\n  inputs: {\n    nzLoading: \"nzLoading\",\n    nzDisabled: \"nzDisabled\",\n    nzControl: \"nzControl\",\n    nzCheckedChildren: \"nzCheckedChildren\",\n    nzUnCheckedChildren: \"nzUnCheckedChildren\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzSwitch\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(\n    /**\n    * @return {?}\n    */\n    function () {\n      return NzSwitchComponent;\n    }),\n    multi: true\n  }])],\n  decls: 8,\n  vars: 13,\n  consts: [[\"nz-wave\", \"\", \"type\", \"button\", 1, \"ant-switch\", 3, \"disabled\", \"nzWaveExtraNode\", \"keydown\"], [\"switchElement\", \"\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", \"class\", \"ant-switch-loading-icon\", 4, \"ngIf\"], [1, \"ant-switch-inner\"], [4, \"ngIf\", \"ngIfElse\"], [\"uncheckTemplate\", \"\"], [1, \"ant-click-animating-node\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 1, \"ant-switch-loading-icon\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzSwitchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"keydown\", function NzSwitchComponent_Template_button_keydown_0_listener($event) {\n        return ctx.onKeyDown($event);\n      });\n      ɵngcc0.ɵɵtemplate(2, NzSwitchComponent_i_2_Template, 1, 0, \"i\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n      ɵngcc0.ɵɵtemplate(4, NzSwitchComponent_ng_container_4_Template, 2, 1, \"ng-container\", 4);\n      ɵngcc0.ɵɵtemplate(5, NzSwitchComponent_ng_template_5_Template, 1, 1, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(7, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var _r3 = ɵngcc0.ɵɵreference(6);\n\n      ɵngcc0.ɵɵclassProp(\"ant-switch-checked\", ctx.isChecked)(\"ant-switch-loading\", ctx.nzLoading)(\"ant-switch-disabled\", ctx.nzDisabled)(\"ant-switch-small\", ctx.nzSize === \"small\");\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nzDisabled)(\"nzWaveExtraNode\", true);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isChecked)(\"ngIfElse\", _r3);\n    }\n  },\n  directives: [ɵngcc3.NzWaveDirective, ɵngcc4.NgIf, ɵngcc5.NzIconDirective, ɵngcc6.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzSwitchComponent.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FocusMonitor\n  }];\n};\n\nNzSwitchComponent.propDecorators = {\n  switchElement: [{\n    type: ViewChild,\n    args: ['switchElement', {\n      static: true\n    }]\n  }],\n  nzLoading: [{\n    type: Input\n  }],\n  nzDisabled: [{\n    type: Input\n  }],\n  nzControl: [{\n    type: Input\n  }],\n  nzCheckedChildren: [{\n    type: Input\n  }],\n  nzUnCheckedChildren: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSwitchComponent.prototype, \"nzLoading\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSwitchComponent.prototype, \"nzDisabled\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzSwitchComponent.prototype, \"nzControl\", void 0);\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), __metadata(\"design:type\", String)], NzSwitchComponent.prototype, \"nzSize\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSwitchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-switch',\n      exportAs: 'nzSwitch',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(\n        /**\n        * @return {?}\n        */\n        function () {\n          return NzSwitchComponent;\n        }),\n        multi: true\n      }],\n      template: \"\\n    <button\\n      nz-wave\\n      type=\\\"button\\\"\\n      class=\\\"ant-switch\\\"\\n      #switchElement\\n      [disabled]=\\\"nzDisabled\\\"\\n      [class.ant-switch-checked]=\\\"isChecked\\\"\\n      [class.ant-switch-loading]=\\\"nzLoading\\\"\\n      [class.ant-switch-disabled]=\\\"nzDisabled\\\"\\n      [class.ant-switch-small]=\\\"nzSize === 'small'\\\"\\n      [nzWaveExtraNode]=\\\"true\\\"\\n      (keydown)=\\\"onKeyDown($event)\\\"\\n    >\\n      <i *ngIf=\\\"nzLoading\\\" nz-icon nzType=\\\"loading\\\" class=\\\"ant-switch-loading-icon\\\"></i>\\n      <span class=\\\"ant-switch-inner\\\">\\n        <ng-container *ngIf=\\\"isChecked; else uncheckTemplate\\\">\\n          <ng-container *nzStringTemplateOutlet=\\\"nzCheckedChildren\\\">{{ nzCheckedChildren }}</ng-container>\\n        </ng-container>\\n        <ng-template #uncheckTemplate>\\n          <ng-container *nzStringTemplateOutlet=\\\"nzUnCheckedChildren\\\">{{ nzUnCheckedChildren }}</ng-container>\\n        </ng-template>\\n      </span>\\n      <div class=\\\"ant-click-animating-node\\\"></div>\\n    </button>\\n  \",\n      host: {\n        '(click)': 'onHostClick($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.FocusMonitor\n    }];\n  }, {\n    nzLoading: [{\n      type: Input\n    }],\n    nzDisabled: [{\n      type: Input\n    }],\n    nzControl: [{\n      type: Input\n    }],\n    nzCheckedChildren: [{\n      type: Input\n    }],\n    nzUnCheckedChildren: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    switchElement: [{\n      type: ViewChild,\n      args: ['switchElement', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzSwitchComponent.ngAcceptInputType_nzLoading;\n  /** @type {?} */\n\n  NzSwitchComponent.ngAcceptInputType_nzDisabled;\n  /** @type {?} */\n\n  NzSwitchComponent.ngAcceptInputType_nzControl;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.isChecked;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.onChange;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.onTouched;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSwitchComponent.prototype.switchElement;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.nzLoading;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.nzDisabled;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.nzControl;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.nzCheckedChildren;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.nzUnCheckedChildren;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.nzSize;\n  /** @type {?} */\n\n  NzSwitchComponent.prototype.nzConfigService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSwitchComponent.prototype.cdr;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzSwitchComponent.prototype.focusMonitor;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: switch.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzSwitchModule = /*#__PURE__*/_createClass(function NzSwitchModule() {\n  _classCallCheck(this, NzSwitchModule);\n});\n\nNzSwitchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzSwitchModule\n});\nNzSwitchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzSwitchModule_Factory(t) {\n    return new (t || NzSwitchModule)();\n  },\n  imports: [[CommonModule, NzWaveModule, NzIconModule, NzOutletModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzSwitchModule, {\n    declarations: function declarations() {\n      return [NzSwitchComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, NzWaveModule, NzIconModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzSwitchComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzSwitchModule, [{\n    type: NgModule,\n    args: [{\n      exports: [NzSwitchComponent],\n      declarations: [NzSwitchComponent],\n      imports: [CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-switch.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzSwitchComponent, NzSwitchModule };","map":{"version":3,"sources":["ng-zorro-antd/switch/switch.component.ts","ng-zorro-antd/switch/switch.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, NzSizeDSType, OnChangeType, OnTouchedType } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'switch';\n\n@Component({\n  selector: 'nz-switch',\n  exportAs: 'nzSwitch',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzSwitchComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <button\n      nz-wave\n      type=\"button\"\n      class=\"ant-switch\"\n      #switchElement\n      [disabled]=\"nzDisabled\"\n      [class.ant-switch-checked]=\"isChecked\"\n      [class.ant-switch-loading]=\"nzLoading\"\n      [class.ant-switch-disabled]=\"nzDisabled\"\n      [class.ant-switch-small]=\"nzSize === 'small'\"\n      [nzWaveExtraNode]=\"true\"\n      (keydown)=\"onKeyDown($event)\"\n    >\n      <i *ngIf=\"nzLoading\" nz-icon nzType=\"loading\" class=\"ant-switch-loading-icon\"></i>\n      <span class=\"ant-switch-inner\">\n        <ng-container *ngIf=\"isChecked; else uncheckTemplate\">\n          <ng-container *nzStringTemplateOutlet=\"nzCheckedChildren\">{{ nzCheckedChildren }}</ng-container>\n        </ng-container>\n        <ng-template #uncheckTemplate>\n          <ng-container *nzStringTemplateOutlet=\"nzUnCheckedChildren\">{{ nzUnCheckedChildren }}</ng-container>\n        </ng-template>\n      </span>\n      <div class=\"ant-click-animating-node\"></div>\n    </button>\n  `,\n  host: {\n    '(click)': 'onHostClick($event)'\n  }\n})\nexport class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDisabled: BooleanInput;\n  static ngAcceptInputType_nzControl: BooleanInput;\n\n  isChecked = false;\n  onChange: OnChangeType = () => {};\n  onTouched: OnTouchedType = () => {};\n  @ViewChild('switchElement', { static: true }) private switchElement?: ElementRef;\n  @Input() @InputBoolean() nzLoading = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzControl = false;\n  @Input() nzCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() nzUnCheckedChildren: string | TemplateRef<void> | null = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: NzSizeDSType = 'default';\n\n  onHostClick(e: MouseEvent): void {\n    e.preventDefault();\n    if (!this.nzDisabled && !this.nzLoading && !this.nzControl) {\n      this.updateValue(!this.isChecked);\n    }\n  }\n\n  updateValue(value: boolean): void {\n    if (this.isChecked !== value) {\n      this.isChecked = value;\n      this.onChange(this.isChecked);\n    }\n  }\n\n  onKeyDown(e: KeyboardEvent): void {\n    if (!this.nzControl && !this.nzDisabled && !this.nzLoading) {\n      if (e.keyCode === LEFT_ARROW) {\n        this.updateValue(false);\n        e.preventDefault();\n      } else if (e.keyCode === RIGHT_ARROW) {\n        this.updateValue(true);\n        e.preventDefault();\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\n        this.updateValue(!this.isChecked);\n        e.preventDefault();\n      }\n    }\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.switchElement?.nativeElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.switchElement?.nativeElement.blur();\n  }\n\n  constructor(public nzConfigService: NzConfigService, private cdr: ChangeDetectorRef, private focusMonitor: FocusMonitor) {}\n\n  ngAfterViewInit(): void {\n    this.focusMonitor.monitor(this.switchElement!.nativeElement, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        /** https://github.com/angular/angular/issues/17793 **/\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.switchElement!.nativeElement);\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: OnChangeType): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: OnTouchedType): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this.nzDisabled = disabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSwitchComponent } from './switch.component';\n\n@NgModule({\n  exports: [NzSwitchComponent],\n  declarations: [NzSwitchComponent],\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzOutletModule]\n})\nexport class NzSwitchModule {}\n"]},"metadata":{},"sourceType":"module"}