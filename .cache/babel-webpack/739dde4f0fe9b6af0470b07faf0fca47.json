{"ast":null,"code":"import _slicedToArray from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __param } from 'tslib';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { isDevMode, SecurityContext, RendererFactory2, Optional, Inject, Injectable, ElementRef, Renderer2, Input, Directive, NgModule } from '@angular/core';\nimport { generate } from '@ant-design/colors';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subject, of, Observable } from 'rxjs';\nimport { map, tap, finalize, catchError, share, filter, take } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar ANT_ICON_ANGULAR_CONSOLE_PREFIX = '[@ant-design/icons-angular]:';\n\nfunction error(message) {\n  console.error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \" \").concat(message, \".\"));\n}\n\nfunction warn(message) {\n  if (isDevMode()) {\n    console.warn(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \" \").concat(message, \".\"));\n  }\n}\n\nfunction getSecondaryColor(primaryColor) {\n  return generate(primaryColor)[0];\n}\n\nfunction withSuffix(name, theme) {\n  switch (theme) {\n    case 'fill':\n      return \"\".concat(name, \"-fill\");\n\n    case 'outline':\n      return \"\".concat(name, \"-o\");\n\n    case 'twotone':\n      return \"\".concat(name, \"-twotone\");\n\n    case undefined:\n      return name;\n\n    default:\n      throw new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"Theme \\\"\").concat(theme, \"\\\" is not a recognized theme!\"));\n  }\n}\n\nfunction withSuffixAndColor(name, theme, pri, sec) {\n  return \"\".concat(withSuffix(name, theme), \"-\").concat(pri, \"-\").concat(sec);\n}\n\nfunction mapAbbrToTheme(abbr) {\n  return abbr === 'o' ? 'outline' : abbr;\n}\n\nfunction alreadyHasAThemeSuffix(name) {\n  return name.endsWith('-fill') || name.endsWith('-o') || name.endsWith('-twotone');\n}\n\nfunction isIconDefinition(target) {\n  return typeof target === 'object' && typeof target.name === 'string' && (typeof target.theme === 'string' || target.theme === undefined) && typeof target.icon === 'string';\n}\n/**\n * Get an `IconDefinition` object from abbreviation type, like `account-book-fill`.\n * @param str\n */\n\n\nfunction getIconDefinitionFromAbbr(str) {\n  var arr = str.split('-');\n  var theme = mapAbbrToTheme(arr.splice(arr.length - 1, 1)[0]);\n  var name = arr.join('-');\n  return {\n    name: name,\n    theme: theme,\n    icon: ''\n  };\n}\n\nfunction cloneSVG(svg) {\n  return svg.cloneNode(true);\n}\n/**\n * Parse inline SVG string and replace colors with placeholders. For twotone icons only.\n */\n\n\nfunction replaceFillColor(raw) {\n  return raw.replace(/['\"]#333['\"]/g, '\"primaryColor\"').replace(/['\"]#E6E6E6['\"]/g, '\"secondaryColor\"').replace(/['\"]#D9D9D9['\"]/g, '\"secondaryColor\"').replace(/['\"]#D8D8D8['\"]/g, '\"secondaryColor\"');\n}\n/**\n * Split a name with namespace in it into a tuple like [ name, namespace ].\n */\n\n\nfunction getNameAndNamespace(type) {\n  var split = type.split(':');\n\n  switch (split.length) {\n    case 1:\n      return [type, ''];\n\n    case 2:\n      return [split[1], split[0]];\n\n    default:\n      throw new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"The icon type \").concat(type, \" is not valid!\"));\n  }\n}\n\nfunction hasNamespace(type) {\n  return getNameAndNamespace(type)[1] !== '';\n}\n\nfunction NameSpaceIsNotSpecifyError() {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"Type should have a namespace. Try \\\"namespace:\").concat(name, \"\\\".\"));\n}\n\nfunction IconNotFoundError(icon) {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"the icon \").concat(icon, \" does not exist or is not registered.\"));\n}\n\nfunction HttpModuleNotImport() {\n  error(\"you need to import \\\"HttpClientModule\\\" to use dynamic importing.\");\n  return null;\n}\n\nfunction UrlNotSafeError(url) {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"The url \\\"\").concat(url, \"\\\" is unsafe.\"));\n}\n\nfunction SVGTagNotFoundError() {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"<svg> tag not found.\"));\n}\n\nfunction DynamicLoadingTimeoutError() {\n  return new Error(\"\".concat(ANT_ICON_ANGULAR_CONSOLE_PREFIX, \"Importing timeout error.\"));\n}\n\nvar JSONP_HANDLER_NAME = '__ant_icon_load';\n\nvar IconService = /*#__PURE__*/function () {\n  function IconService(_rendererFactory, _handler, // tslint:disable-next-line:no-any\n  _document, sanitizer) {\n    _classCallCheck(this, IconService);\n\n    this._rendererFactory = _rendererFactory;\n    this._handler = _handler;\n    this._document = _document;\n    this.sanitizer = sanitizer;\n    this.defaultTheme = 'outline';\n    /**\n     * All icon definitions would be registered here.\n     */\n\n    this._svgDefinitions = new Map();\n    /**\n     * Cache all rendered icons. Icons are identified by name, theme,\n     * and for twotone icons, primary color and secondary color.\n     */\n\n    this._svgRenderedDefinitions = new Map();\n    this._inProgressFetches = new Map();\n    /**\n     * Url prefix for fetching inline SVG by dynamic importing.\n     */\n\n    this._assetsUrlRoot = '';\n    this._twoToneColorPalette = {\n      primaryColor: '#333333',\n      secondaryColor: '#E6E6E6'\n    };\n    /** A flag indicates whether jsonp loading is enabled. */\n\n    this._enableJsonpLoading = false;\n    this._jsonpIconLoad$ = new Subject();\n    this._renderer = this._rendererFactory.createRenderer(null, null);\n\n    if (this._handler) {\n      this._http = new HttpClient(this._handler);\n    }\n  }\n\n  _createClass(IconService, [{\n    key: \"twoToneColor\",\n    get: function get() {\n      // Make a copy to avoid unexpected changes.\n      return Object.assign({}, this._twoToneColorPalette);\n    }\n    /**\n     * Call this method to switch to jsonp like loading.\n     */\n    ,\n    set: function set(_ref) {\n      var primaryColor = _ref.primaryColor,\n          secondaryColor = _ref.secondaryColor;\n      this._twoToneColorPalette.primaryColor = primaryColor;\n      this._twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n    }\n  }, {\n    key: \"useJsonpLoading\",\n    value: function useJsonpLoading() {\n      var _this = this;\n\n      if (!this._enableJsonpLoading) {\n        this._enableJsonpLoading = true;\n\n        window[JSONP_HANDLER_NAME] = function (icon) {\n          _this._jsonpIconLoad$.next(icon);\n        };\n      } else {\n        warn('You are already using jsonp loading.');\n      }\n    }\n    /**\n     * Change the prefix of the inline svg resources, so they could be deployed elsewhere, like CDN.\n     * @param prefix\n     */\n\n  }, {\n    key: \"changeAssetsSource\",\n    value: function changeAssetsSource(prefix) {\n      this._assetsUrlRoot = prefix.endsWith('/') ? prefix : prefix + '/';\n    }\n    /**\n     * Add icons provided by ant design.\n     * @param icons\n     */\n\n  }, {\n    key: \"addIcon\",\n    value: function addIcon() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, icons = new Array(_len), _key = 0; _key < _len; _key++) {\n        icons[_key] = arguments[_key];\n      }\n\n      icons.forEach(function (icon) {\n        _this2._svgDefinitions.set(withSuffix(icon.name, icon.theme), icon);\n      });\n    }\n    /**\n     * Register an icon. Namespace is required.\n     * @param type\n     * @param literal\n     */\n\n  }, {\n    key: \"addIconLiteral\",\n    value: function addIconLiteral(type, literal) {\n      var _getNameAndNamespace = getNameAndNamespace(type),\n          _getNameAndNamespace2 = _slicedToArray(_getNameAndNamespace, 2),\n          _ = _getNameAndNamespace2[0],\n          namespace = _getNameAndNamespace2[1];\n\n      if (!namespace) {\n        throw NameSpaceIsNotSpecifyError();\n      }\n\n      this.addIcon({\n        name: type,\n        icon: literal\n      });\n    }\n    /**\n     * Remove all cache.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._svgDefinitions.clear();\n\n      this._svgRenderedDefinitions.clear();\n    }\n    /**\n     * Get a rendered `SVGElement`.\n     * @param icon\n     * @param twoToneColor\n     */\n\n  }, {\n    key: \"getRenderedContent\",\n    value: function getRenderedContent(icon, twoToneColor) {\n      var _this3 = this;\n\n      // If `icon` is a `IconDefinition`, go to the next step. If not, try to fetch it from cache.\n      var definitionOrNull = isIconDefinition(icon) ? icon : this._svgDefinitions.get(icon) || null; // If `icon` is a `IconDefinition` of successfully fetch, wrap it in an `Observable`.\n      // Otherwise try to fetch it from remote.\n\n      var $iconDefinition = definitionOrNull ? of(definitionOrNull) : this._loadIconDynamically(icon); // If finally get an `IconDefinition`, render and return it. Otherwise throw an error.\n\n      return $iconDefinition.pipe(map(function (i) {\n        if (!i) {\n          throw IconNotFoundError(icon);\n        }\n\n        return _this3._loadSVGFromCacheOrCreateNew(i, twoToneColor);\n      }));\n    }\n  }, {\n    key: \"getCachedIcons\",\n    value: function getCachedIcons() {\n      return this._svgDefinitions;\n    }\n    /**\n     * Get raw svg and assemble a `IconDefinition` object.\n     * @param type\n     */\n\n  }, {\n    key: \"_loadIconDynamically\",\n    value: function _loadIconDynamically(type) {\n      var _this4 = this;\n\n      // If developer doesn't provide HTTP module nor enable jsonp loading, just throw an error.\n      if (!this._http && !this._enableJsonpLoading) {\n        return of(HttpModuleNotImport());\n      } // If multi directive ask for the same icon at the same time,\n      // request should only be fired once.\n\n\n      var inProgress = this._inProgressFetches.get(type);\n\n      if (!inProgress) {\n        var _getNameAndNamespace3 = getNameAndNamespace(type),\n            _getNameAndNamespace4 = _slicedToArray(_getNameAndNamespace3, 2),\n            _name = _getNameAndNamespace4[0],\n            namespace = _getNameAndNamespace4[1]; // If the string has a namespace within, create a simple `IconDefinition`.\n\n\n        var icon = namespace ? {\n          name: type,\n          icon: ''\n        } : getIconDefinitionFromAbbr(_name);\n        var suffix = this._enableJsonpLoading ? '.js' : '.svg';\n        var url = (namespace ? \"\".concat(this._assetsUrlRoot, \"assets/\").concat(namespace, \"/\").concat(_name) : \"\".concat(this._assetsUrlRoot, \"assets/\").concat(icon.theme, \"/\").concat(icon.name)) + suffix;\n        var safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n\n        if (!safeUrl) {\n          throw UrlNotSafeError(url);\n        }\n\n        var source = !this._enableJsonpLoading ? this._http.get(safeUrl, {\n          responseType: 'text'\n        }).pipe(map(function (literal) {\n          return Object.assign(Object.assign({}, icon), {\n            icon: literal\n          });\n        })) : this._loadIconDynamicallyWithJsonp(icon, safeUrl);\n        inProgress = source.pipe(tap(function (definition) {\n          return _this4.addIcon(definition);\n        }), finalize(function () {\n          return _this4._inProgressFetches.delete(type);\n        }), catchError(function () {\n          return of(null);\n        }), share());\n\n        this._inProgressFetches.set(type, inProgress);\n      }\n\n      return inProgress;\n    }\n  }, {\n    key: \"_loadIconDynamicallyWithJsonp\",\n    value: function _loadIconDynamicallyWithJsonp(icon, url) {\n      var _this5 = this;\n\n      return new Observable(function (subscriber) {\n        var loader = _this5._document.createElement('script');\n\n        var timer = setTimeout(function () {\n          clean();\n          subscriber.error(DynamicLoadingTimeoutError());\n        }, 6000);\n        loader.src = url;\n\n        function clean() {\n          loader.parentNode.removeChild(loader);\n          clearTimeout(timer);\n        }\n\n        _this5._document.body.appendChild(loader);\n\n        _this5._jsonpIconLoad$.pipe(filter(function (i) {\n          return i.name === icon.name && i.theme === icon.theme;\n        }), take(1)).subscribe(function (i) {\n          subscriber.next(i);\n          clean();\n        });\n      });\n    }\n    /**\n     * Render a new `SVGElement` for a given `IconDefinition`, or make a copy from cache.\n     * @param icon\n     * @param twoToneColor\n     */\n\n  }, {\n    key: \"_loadSVGFromCacheOrCreateNew\",\n    value: function _loadSVGFromCacheOrCreateNew(icon, twoToneColor) {\n      var svg;\n      var pri = twoToneColor || this._twoToneColorPalette.primaryColor;\n\n      var sec = getSecondaryColor(pri) || this._twoToneColorPalette.secondaryColor;\n\n      var key = icon.theme === 'twotone' ? withSuffixAndColor(icon.name, icon.theme, pri, sec) : icon.theme === undefined ? icon.name : withSuffix(icon.name, icon.theme); // Try to make a copy from cache.\n\n      var cached = this._svgRenderedDefinitions.get(key);\n\n      if (cached) {\n        svg = cached.icon;\n      } else {\n        svg = this._setSVGAttribute(this._colorizeSVGIcon( // Icons provided by ant design should be refined to remove preset colors.\n        this._createSVGElementFromString(hasNamespace(icon.name) ? icon.icon : replaceFillColor(icon.icon)), icon.theme === 'twotone', pri, sec)); // Cache it.\n\n        this._svgRenderedDefinitions.set(key, Object.assign(Object.assign({}, icon), {\n          icon: svg\n        }));\n      }\n\n      return cloneSVG(svg);\n    }\n  }, {\n    key: \"_createSVGElementFromString\",\n    value: function _createSVGElementFromString(str) {\n      var div = this._document.createElement('div');\n\n      div.innerHTML = str;\n      var svg = div.querySelector('svg');\n\n      if (!svg) {\n        throw SVGTagNotFoundError;\n      }\n\n      return svg;\n    }\n  }, {\n    key: \"_setSVGAttribute\",\n    value: function _setSVGAttribute(svg) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n\n      this._renderer.setAttribute(svg, 'height', '1em');\n\n      return svg;\n    }\n  }, {\n    key: \"_colorizeSVGIcon\",\n    value: function _colorizeSVGIcon(svg, twotone, pri, sec) {\n      if (twotone) {\n        var children = svg.childNodes;\n        var length = children.length;\n\n        for (var i = 0; i < length; i++) {\n          var child = children[i];\n\n          if (child.getAttribute('fill') === 'secondaryColor') {\n            this._renderer.setAttribute(child, 'fill', sec);\n          } else {\n            this._renderer.setAttribute(child, 'fill', pri);\n          }\n        }\n      }\n\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n\n      return svg;\n    }\n  }]);\n\n  return IconService;\n}();\n\nIconService.ɵfac = function IconService_Factory(t) {\n  return new (t || IconService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc1.HttpBackend, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer));\n};\n\nIconService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: IconService,\n  factory: function factory(t) {\n    return IconService.ɵfac(t);\n  }\n});\n\nIconService.ctorParameters = function () {\n  return [{\n    type: RendererFactory2\n  }, {\n    type: HttpBackend,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: DomSanitizer\n  }];\n};\n\nIconService = __decorate([__param(1, Optional()), __param(2, Optional()), __param(2, Inject(DOCUMENT))], IconService);\n\nvar IconDirective = /*#__PURE__*/function () {\n  function IconDirective(_iconService, _elementRef, _renderer) {\n    _classCallCheck(this, IconDirective);\n\n    this._iconService = _iconService;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n  }\n\n  _createClass(IconDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.type || changes.theme || changes.twoToneColor) {\n        this._changeIcon();\n      }\n    }\n    /**\n     * Render a new icon in the current element. Remove the icon when `type` is falsy.\n     */\n\n  }, {\n    key: \"_changeIcon\",\n    value: function _changeIcon() {\n      var _this6 = this;\n\n      return new Promise(function (resolve) {\n        if (!_this6.type) {\n          _this6._clearSVGElement();\n\n          resolve(null);\n        } else {\n          _this6._iconService.getRenderedContent(_this6._parseIconType(_this6.type, _this6.theme), _this6.twoToneColor).subscribe(function (svg) {\n            _this6._setSVGElement(svg);\n\n            resolve(svg);\n          });\n        }\n      });\n    }\n    /**\n     * Parse a icon to the standard form, an `IconDefinition` or a string like 'account-book-fill` (with a theme suffixed).\n     * If namespace is specified, ignore theme because it meaningless for users' icons.\n     * @param type\n     * @param theme\n     */\n\n  }, {\n    key: \"_parseIconType\",\n    value: function _parseIconType(type, theme) {\n      if (isIconDefinition(type)) {\n        return type;\n      } else {\n        var _getNameAndNamespace5 = getNameAndNamespace(type),\n            _getNameAndNamespace6 = _slicedToArray(_getNameAndNamespace5, 2),\n            _name2 = _getNameAndNamespace6[0],\n            namespace = _getNameAndNamespace6[1];\n\n        if (namespace) {\n          return type;\n        }\n\n        if (alreadyHasAThemeSuffix(_name2)) {\n          if (!!theme) {\n            warn(\"'type' \".concat(_name2, \" already gets a theme inside so 'theme' \").concat(theme, \" would be ignored\"));\n          }\n\n          return _name2;\n        } else {\n          return withSuffix(_name2, theme || this._iconService.defaultTheme);\n        }\n      }\n    }\n  }, {\n    key: \"_setSVGElement\",\n    value: function _setSVGElement(svg) {\n      this._clearSVGElement();\n\n      this._renderer.appendChild(this._elementRef.nativeElement, svg);\n    }\n  }, {\n    key: \"_clearSVGElement\",\n    value: function _clearSVGElement() {\n      var el = this._elementRef.nativeElement;\n      var children = el.childNodes;\n      var length = children.length;\n\n      for (var i = length - 1; i >= 0; i--) {\n        var child = children[i];\n\n        if (child.tagName.toLowerCase() === 'svg') {\n          this._renderer.removeChild(el, child);\n        }\n      }\n    }\n  }]);\n\n  return IconDirective;\n}();\n\nIconDirective.ɵfac = function IconDirective_Factory(t) {\n  return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(IconService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nIconDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: IconDirective,\n  selectors: [[\"\", \"antIcon\", \"\"]],\n  inputs: {\n    type: \"type\",\n    theme: \"theme\",\n    twoToneColor: \"twoToneColor\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nIconDirective.ctorParameters = function () {\n  return [{\n    type: IconService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\n__decorate([Input()], IconDirective.prototype, \"type\", void 0);\n\n__decorate([Input()], IconDirective.prototype, \"theme\", void 0);\n\n__decorate([Input()], IconDirective.prototype, \"twoToneColor\", void 0);\n\nvar IconModule = /*#__PURE__*/_createClass(function IconModule() {\n  _classCallCheck(this, IconModule);\n});\n\nIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: IconModule\n});\nIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function IconModule_Factory(t) {\n    return new (t || IconModule)();\n  },\n  providers: [IconService],\n  imports: [[CommonModule]]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IconService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc1.HttpBackend,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc2.DomSanitizer\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[antIcon]'\n    }]\n  }], function () {\n    return [{\n      type: IconService\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    twoToneColor: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, {\n    declarations: function declarations() {\n      return [IconDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [IconDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IconModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [IconDirective],\n      declarations: [IconDirective],\n      providers: [IconService]\n    }]\n  }], null, null);\n})();\n\nvar manifest = {\n  fill: ['alert', 'account-book', 'alipay-circle', 'alipay-square', 'amazon-circle', 'aliwangwang', 'amazon-square', 'android', 'api', 'apple', 'appstore', 'audio', 'backward', 'bank', 'behance-circle', 'book', 'box-plot', 'bell', 'behance-square', 'build', 'bug', 'bulb', 'calculator', 'camera', 'calendar', 'car', 'caret-left', 'caret-down', 'caret-up', 'caret-right', 'carry-out', 'check-circle', 'chrome', 'clock-circle', 'check-square', 'close-circle', 'ci-circle', 'code-sandbox-circle', 'close-square', 'cloud', 'code-sandbox-square', 'codepen-circle', 'code', 'contacts', 'compass', 'codepen-square', 'control', 'container', 'copy', 'credit-card', 'customer-service', 'copyright-circle', 'database', 'crown', 'dashboard', 'diff', 'delete', 'dingtalk-circle', 'dingtalk-square', 'dislike', 'dollar-circle', 'down-square', 'down-circle', 'dribbble-circle', 'dribbble-square', 'dropbox-circle', 'edit', 'dropbox-square', 'euro-circle', 'exclamation-circle', 'environment', 'eye-invisible', 'experiment', 'facebook', 'eye', 'fast-backward', 'fast-forward', 'file-excel', 'file-add', 'file-exclamation', 'file-pdf', 'file-image', 'file-markdown', 'file-ppt', 'file-text', 'file-unknown', 'file', 'file-zip', 'file-word', 'filter', 'fire', 'flag', 'folder-add', 'format-painter', 'folder', 'folder-open', 'forward', 'fund', 'frown', 'funnel-plot', 'github', 'gitlab', 'gift', 'gold', 'golden', 'google-circle', 'google-plus-circle', 'google-plus-square', 'google-square', 'hdd', 'heart', 'highlight', 'home', 'hourglass', 'html5', 'idcard', 'ie-circle', 'info-circle', 'ie-square', 'instagram', 'insurance', 'layout', 'interaction', 'linkedin', 'left-circle', 'left-square', 'like', 'lock', 'mac-command', 'mail', 'medicine-box', 'medium-circle', 'meh', 'message', 'medium-square', 'minus-circle', 'mobile', 'money-collect', 'minus-square', 'notification', 'pause-circle', 'pay-circle', 'phone', 'picture', 'pie-chart', 'plus-circle', 'play-circle', 'play-square', 'plus-square', 'pound-circle', 'printer', 'project', 'property-safety', 'profile', 'pushpin', 'qq-circle', 'qq-square', 'question-circle', 'read', 'red-envelope', 'reddit-circle', 'reconciliation', 'reddit-square', 'right-circle', 'right-square', 'robot', 'rest', 'safety-certificate', 'rocket', 'save', 'security-scan', 'schedule', 'sketch-circle', 'signal', 'setting', 'shop', 'shopping', 'skin', 'sketch-square', 'slack-circle', 'skype', 'smile', 'slack-square', 'sliders', 'sound', 'snippets', 'star', 'step-forward', 'stop', 'tag', 'step-backward', 'switcher', 'tablet', 'tags', 'thunderbolt', 'taobao-square', 'trademark-circle', 'taobao-circle', 'tool', 'twitter-circle', 'trophy', 'twitter-square', 'up-square', 'up-circle', 'warning', 'usb', 'unlock', 'wechat', 'video-camera', 'weibo-circle', 'windows', 'wallet', 'weibo-square', 'yuque', 'youtube', 'zhihu-square', 'yahoo', 'zhihu-circle'],\n  outline: ['alert', 'account-book', 'aim', 'align-center', 'align-right', 'align-left', 'alibaba', 'alipay-circle', 'alipay', 'aliwangwang', 'aliyun', 'ant-design', 'android', 'apartment', 'ant-cloud', 'amazon', 'api', 'appstore-add', 'appstore', 'apple', 'area-chart', 'arrow-right', 'arrow-down', 'arrow-up', 'arrow-left', 'arrows-alt', 'audio-muted', 'audio', 'backward', 'audit', 'bank', 'barcode', 'bars', 'bar-chart', 'behance', 'behance-square', 'bg-colors', 'bell', 'block', 'bold', 'book', 'border-bottom', 'border-horizontal', 'border-left', 'border-outer', 'border-inner', 'border-right', 'border-top', 'border-verticle', 'border', 'box-plot', 'borderless-table', 'bug', 'branches', 'build', 'bulb', 'calculator', 'calendar', 'camera', 'caret-down', 'car', 'caret-left', 'caret-right', 'caret-up', 'carry-out', 'check-circle', 'check', 'check-square', 'ci-circle', 'ci', 'chrome', 'clock-circle', 'clear', 'close-circle', 'close-square', 'close', 'cloud-server', 'cloud-sync', 'cloud-upload', 'cloud-download', 'cluster', 'cloud', 'code-sandbox', 'code', 'codepen-circle', 'codepen', 'column-height', 'coffee', 'comment', 'compass', 'column-width', 'compress', 'console-sql', 'contacts', 'container', 'control', 'copy', 'copyright-circle', 'copyright', 'credit-card', 'dash', 'customer-service', 'crown', 'dashboard', 'database', 'delete-column', 'delete-row', 'delete', 'deployment-unit', 'desktop', 'delivered-procedure', 'dingtalk', 'diff', 'dingding', 'disconnect', 'dislike', 'dollar-circle', 'dollar', 'dot-chart', 'double-left', 'double-right', 'down-square', 'down', 'down-circle', 'download', 'dribbble', 'drag', 'dribbble-square', 'dropbox', 'edit', 'ellipsis', 'enter', 'euro-circle', 'environment', 'euro', 'exclamation-circle', 'expand-alt', 'exclamation', 'exception', 'expand', 'experiment', 'export', 'eye-invisible', 'eye', 'facebook', 'fast-backward', 'fall', 'fast-forward', 'field-binary', 'field-time', 'field-number', 'field-string', 'file-add', 'file-done', 'file-excel', 'file-exclamation', 'file-gif', 'file-image', 'file-jpg', 'file-ppt', 'file-markdown', 'file-pdf', 'file-protect', 'file-search', 'file-text', 'file-sync', 'file-unknown', 'file-word', 'file-zip', 'filter', 'fire', 'file', 'folder-add', 'folder-open', 'flag', 'font-colors', 'folder', 'font-size', 'folder-view', 'forward', 'fork', 'form', 'format-painter', 'fullscreen-exit', 'fund-projection-screen', 'frown', 'fullscreen', 'fund-view', 'function', 'fund', 'funnel-plot', 'gif', 'gateway', 'github', 'gift', 'gold', 'google-plus', 'google', 'gitlab', 'global', 'hdd', 'heat-map', 'group', 'highlight', 'heart', 'history', 'home', 'ie', 'hourglass', 'idcard', 'import', 'inbox', 'html5', 'info', 'info-circle', 'insert-row-right', 'insert-row-above', 'issues-close', 'instagram', 'insert-row-below', 'left-square', 'layout', 'insurance', 'key', 'laptop', 'insert-row-left', 'left', 'italic', 'left-circle', 'line-height', 'like', 'interaction', 'linkedin', 'loading', 'link', 'loading-3-quarters', 'login', 'line-chart', 'line', 'lock', 'medium-workmark', 'logout', 'mail', 'mac-command', 'man', 'medicine-box', 'menu-unfold', 'medium', 'menu-fold', 'menu', 'meh', 'minus-circle', 'minus', 'message', 'minus-square', 'merge-cells', 'more', 'node-collapse', 'node-index', 'mobile', 'one-to-one', 'node-expand', 'notification', 'money-collect', 'number', 'monitor', 'pause', 'pause-circle', 'pay-circle', 'ordered-list', 'partition', 'percentage', 'paper-clip', 'phone', 'pic-center', 'pic-left', 'play-circle', 'picture', 'pic-right', 'plus-circle', 'play-square', 'pie-chart', 'pound-circle', 'printer', 'pound', 'plus', 'project', 'poweroff', 'profile', 'pull-request', 'qrcode', 'plus-square', 'radius-bottomright', 'pushpin', 'radius-setting', 'radar-chart', 'qq', 'property-safety', 'radius-upleft', 'question-circle', 'reconciliation', 'radius-bottomleft', 'read', 'redo', 'question', 'radius-upright', 'rest', 'red-envelope', 'right', 'reload', 'reddit', 'retweet', 'right-square', 'rise', 'robot', 'right-circle', 'rollback', 'safety-certificate', 'rocket', 'safety', 'save', 'rotate-right', 'rotate-left', 'scan', 'schedule', 'search', 'share-alt', 'scissor', 'select', 'security-scan', 'shop', 'shrink', 'send', 'shake', 'setting', 'skin', 'shopping', 'sisternode', 'slack-square', 'shopping-cart', 'smile', 'skype', 'small-dash', 'slack', 'sketch', 'sliders', 'solution', 'sort-descending', 'step-backward', 'snippets', 'star', 'split-cells', 'step-forward', 'sort-ascending', 'stock', 'sound', 'stop', 'subnode', 'swap-left', 'table', 'strikethrough', 'swap', 'switcher', 'tablet', 'tags', 'swap-right', 'taobao', 'taobao-circle', 'team', 'sync', 'tool', 'tag', 'to-top', 'trademark', 'trademark-circle', 'twitter', 'thunderbolt', 'trophy', 'translation', 'transaction', 'undo', 'unordered-list', 'unlock', 'underline', 'up-circle', 'upload', 'up-square', 'up', 'user-switch', 'user-delete', 'ungroup', 'verified', 'user', 'usb', 'usergroup-delete', 'usergroup-add', 'vertical-left', 'user-add', 'vertical-align-middle', 'vertical-align-top', 'video-camera-add', 'vertical-align-bottom', 'wallet', 'vertical-right', 'video-camera', 'weibo-circle', 'wechat', 'warning', 'weibo', 'weibo-square', 'woman', 'whats-app', 'windows', 'yuque', 'yahoo', 'youtube', 'zoom-out', 'wifi', 'zoom-in', 'zhihu'],\n  twotone: ['account-book', 'api', 'alert', 'appstore', 'bank', 'bell', 'audio', 'book', 'build', 'box-plot', 'bulb', 'bug', 'calculator', 'calendar', 'carry-out', 'check-circle', 'check-square', 'camera', 'car', 'ci-circle', 'ci', 'clock-circle', 'close-circle', 'code', 'close-square', 'cloud', 'contacts', 'container', 'compass', 'copy', 'control', 'copyright', 'copyright-circle', 'credit-card', 'crown', 'customer-service', 'dashboard', 'database', 'delete', 'diff', 'dollar-circle', 'dislike', 'dollar', 'down-circle', 'edit', 'environment', 'euro', 'down-square', 'euro-circle', 'experiment', 'eye-invisible', 'exclamation-circle', 'eye', 'file-add', 'file-excel', 'file-exclamation', 'file-ppt', 'file-image', 'file-markdown', 'file-pdf', 'file-text', 'file-unknown', 'file-zip', 'file-word', 'filter', 'file', 'fire', 'flag', 'folder-add', 'fund', 'folder-open', 'folder', 'frown', 'gift', 'gold', 'funnel-plot', 'hdd', 'heart', 'home', 'highlight', 'html5', 'hourglass', 'idcard', 'info-circle', 'interaction', 'layout', 'insurance', 'like', 'left-circle', 'left-square', 'mail', 'lock', 'medicine-box', 'meh', 'minus-circle', 'message', 'money-collect', 'minus-square', 'mobile', 'notification', 'pause-circle', 'phone', 'pie-chart', 'picture', 'play-circle', 'play-square', 'plus-circle', 'printer', 'pound-circle', 'plus-square', 'profile', 'project', 'property-safety', 'reconciliation', 'red-envelope', 'pushpin', 'rest', 'question-circle', 'right-circle', 'right-square', 'safety-certificate', 'save', 'rocket', 'schedule', 'setting', 'security-scan', 'shop', 'shopping', 'sliders', 'skin', 'smile', 'snippets', 'sound', 'star', 'tablet', 'stop', 'switcher', 'tag', 'tags', 'trademark-circle', 'unlock', 'tool', 'thunderbolt', 'trophy', 'up-circle', 'up-square', 'usb', 'warning', 'video-camera', 'wallet']\n};\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANT_ICON_ANGULAR_CONSOLE_PREFIX, DynamicLoadingTimeoutError, HttpModuleNotImport, IconDirective, IconModule, IconNotFoundError, IconService, NameSpaceIsNotSpecifyError, SVGTagNotFoundError, UrlNotSafeError, alreadyHasAThemeSuffix, cloneSVG, error, getIconDefinitionFromAbbr, getNameAndNamespace, getSecondaryColor, hasNamespace, isIconDefinition, manifest, mapAbbrToTheme, replaceFillColor, warn, withSuffix, withSuffixAndColor };","map":{"version":3,"sources":["@ant-design/icons-angular/utils.ts","@ant-design/icons-angular/component/icon.error.ts","@ant-design/icons-angular/component/icon.service.ts","@ant-design/icons-angular/component/icon.directive.ts","@ant-design/icons-angular/component/icon.module.ts","@ant-design/icons-angular/manifest.ts","@ant-design/icons-angular/ant-design-icons-angular.ts"],"names":["generateColor","rxof"],"mappings":";;;;;;;;;;;;;;IAKa,+BAA+B,GAAG,8B;;AAC/C,SACgB,KADhB,CACsB,OADtB,EACqC;AACnC,EAAA,OAAO,CAAC,KAAR,WAAiB,+BAAjB,cAAoD,OAApD;AACD;;AACD,SACgB,IADhB,CACqB,OADrB,EACoC;AAClC,MAAI,SAAS,EAAb,EAAiB;AACf,IAAA,OAAO,CAAC,IAAR,WAAgB,+BAAhB,cAAmD,OAAnD;AACD;AACF;;AACD,SACgB,iBADhB,CACkC,YADlC,EACsD;AACpD,SAAOA,QAAa,CAAC,YAAD,CAAbA,CAA4B,CAA5BA,CAAP;AACD;;AACD,SACgB,UADhB,CAC2B,IAD3B,EACyC,KADzC,EACqE;AACnE,UAAQ,KAAR;AACE,SAAK,MAAL;AAAa,uBAAU,IAAV;;AACb,SAAK,SAAL;AAAgB,uBAAU,IAAV;;AAChB,SAAK,SAAL;AAAgB,uBAAU,IAAV;;AAChB,SAAK,SAAL;AAAgB,aAAO,IAAP;;AAChB;AAAS,YAAM,IAAI,KAAJ,WAAa,+BAAb,qBAAsD,KAAtD,mCAAN;AALX;AAOD;;AACD,SACgB,kBADhB,CACmC,IADnC,EACiD,KADjD,EACmE,GADnE,EACgF,GADhF,EAC2F;AACzF,mBAAU,UAAU,CAAC,IAAD,EAAO,KAAP,CAApB,cAAqC,GAArC,cAA4C,GAA5C;AACD;;AACD,SACgB,cADhB,CAC+B,IAD/B,EAC2C;AACzC,SAAO,IAAI,KAAK,GAAT,GAAe,SAAf,GAA2B,IAAlC;AACD;;AACD,SACgB,sBADhB,CACuC,IADvC,EACmD;AACjD,SAAO,IAAI,CAAC,QAAL,CAAc,OAAd,KAA0B,IAAI,CAAC,QAAL,CAAc,IAAd,CAA1B,IAAiD,IAAI,CAAC,QAAL,CAAc,UAAd,CAAxD;AACD;;AACD,SACgB,gBADhB,CACiC,MADjC,EACgE;AAC9D,SACE,OAAO,MAAP,KAAkB,QAAlB,IACA,OAAO,MAAM,CAAC,IAAd,KAAuB,QADvB,KAEC,OAAO,MAAM,CAAC,KAAd,KAAwB,QAAxB,IAAoC,MAAM,CAAC,KAAP,KAAiB,SAFtD,KAGA,OAAO,MAAM,CAAC,IAAd,KAAuB,QAJzB;AAMD;AAED;AACA;AACA;AACA;;;AACA,SAAgB,yBAAhB,CAA0C,GAA1C,EAAqD;AACnD,MAAM,GAAG,GAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,CAAZ;AACA,MAAM,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC,MAAJ,CAAW,GAAG,CAAC,MAAJ,GAAa,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,CAAD,CAA5B;AACA,MAAM,IAAI,GAAG,GAAG,CAAC,IAAJ,CAAS,GAAT,CAAb;AAEA,SAAO;AACL,IAAA,IAAI,EAAJ,IADK;AAEL,IAAA,KAAK,EAAL,KAFK;AAGL,IAAA,IAAI,EAAE;AAHD,GAAP;AAKD;;AACD,SACgB,QADhB,CACyB,GADzB,EACwC;AACtC,SAAO,GAAG,CAAC,SAAJ,CAAc,IAAd,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAAgB,gBAAhB,CAAiC,GAAjC,EAA4C;AAC1C,SAAO,GAAG,CACP,OADI,CACI,eADJ,EACqB,gBADrB,EAEJ,OAFI,CAEI,kBAFJ,EAEwB,kBAFxB,EAGJ,OAHI,CAGI,kBAHJ,EAGwB,kBAHxB,EAIJ,OAJI,CAII,kBAJJ,EAIwB,kBAJxB,CAAP;AAKD;AAED;AACA;AACA;;;AACA,SAAgB,mBAAhB,CAAoC,IAApC,EAAgD;AAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAd;;AACA,UAAQ,KAAK,CAAC,MAAd;AACE,SAAK,CAAL;AAAQ,aAAO,CAAC,IAAD,EAAO,EAAP,CAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,KAAK,CAAC,CAAD,CAAhB,CAAP;;AACR;AAAS,YAAM,IAAI,KAAJ,WAAa,+BAAb,2BAA6D,IAA7D,oBAAN;AAHX;AAKD;;AACD,SACgB,YADhB,CAC6B,IAD7B,EACyC;AACvC,SAAO,mBAAmB,CAAC,IAAD,CAAnB,CAA0B,CAA1B,MAAiC,EAAxC;AACF;;AACC,SChGe,0BDgGf,GChGyC;AACxC,SAAO,IAAI,KAAJ,WAAa,+BAAb,2DAA4F,IAA5F,SAAP;AACD;;AACD,SACgB,iBADhB,CACkC,IADlC,EAC8C;AAC5C,SAAO,IAAI,KAAJ,WAAa,+BAAb,sBAAwD,IAAxD,2CAAP;AACD;;AACD,SACgB,mBADhB,GACmC;AACjC,EAAA,KAAK,qEAAL;AACA,SAAO,IAAP;AACD;;AACD,SACgB,eADhB,CACgC,GADhC,EAC2C;AACzC,SAAO,IAAI,KAAJ,WAAa,+BAAb,uBAAwD,GAAxD,mBAAP;AACD;;AACD,SACgB,mBADhB,GACmC;AACjC,SAAO,IAAI,KAAJ,WAAa,+BAAb,0BAAP;AACD;;AACD,SACgB,0BADhB,GAC0C;AACxC,SAAO,IAAI,KAAJ,WAAa,+BAAb,8BAAP;AACF;;ACiBA,IAAM,kBAAkB,GAAG,iBAA3B;;AACA,IAEa,WAAb;AAkDE,uBACY,gBADZ,EAEwB,QAFxB,EAGD;AAC2C,EAAA,SAJ1C,EAKY,SALZ,EAKmC;AAAA;;AAJvB,SAAA,gBAAA,GAAA,gBAAA;AACY,SAAA,QAAA,GAAA,QAAA;AAEkB,SAAA,SAAA,GAAA,SAAA;AAC9B,SAAA,SAAA,GAAA,SAAA;AAtDZ,SAAA,YAAA,GAA0B,SAA1B;AACF;AACW;AAGA;;AAiBU,SAAA,eAAA,GAAkB,IAAI,GAAJ,EAAlB;AACrB;AAEK;AACM;AAEA;;AAAU,SAAA,uBAAA,GAA0B,IAAI,GAAJ,EAA1B;AAET,SAAA,kBAAA,GAAqB,IAAI,GAAJ,EAArB;AAIZ;AAEK;AAEA;;AAAO,SAAA,cAAA,GAAiB,EAAjB;AAEA,SAAA,oBAAA,GAA4C;AACpD,MAAA,YAAY,EAAE,SADsC;AAEpD,MAAA,cAAc,EAAE;AAFoC,KAA5C;AAIZ;;AAEU,SAAA,mBAAA,GAAsB,KAAtB;AACS,SAAA,eAAA,GAAkB,IAAI,OAAJ,EAAlB;AASf,SAAK,SAAL,GAAiB,KAAK,gBAAL,CAAsB,cAAtB,CAAqC,IAArC,EAA2C,IAA3C,CAAjB;;AACA,QAAI,KAAK,QAAT,EAAmB;AACjB,WAAK,KAAL,GAAa,IAAI,UAAJ,CAAe,KAAK,QAApB,CAAb;AACD;AACF;;AA7DH;AAAA;AAAA,SAYE,eAAgB;AAAK;AAEnB,aAAO,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAK,oBAAV,CAAP;AACD;AACH;AACO;AACuB;AAlB9B;AAAA,SAGE,mBAG4B;AAAA,UAF1B,YAE0B,QAF1B,YAE0B;AAAA,UAD1B,cAC0B,QAD1B,cAC0B;AAC1B,WAAK,oBAAL,CAA0B,YAA1B,GAAyC,YAAzC;AACA,WAAK,oBAAL,CAA0B,cAA1B,GACE,cAAc,IAAI,iBAAiB,CAAC,YAAD,CADrC;AAED;AAVH;AAAA;AAAA,WAkEE,2BAAe;AAAA;;AACb,UAAI,CAAC,KAAK,mBAAV,EAA+B;AAC7B,aAAK,mBAAL,GAA2B,IAA3B;;AAEA,QAAA,MAAM,CAAC,kBAAD,CAAN,GAA6B,UAAC,IAAD,EAAqB;AAChD,UAAA,KAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,IAA1B;AACD,SAFD;AAGD,OAND,MAMO;AACL,QAAA,IAAI,CAAC,sCAAD,CAAJ;AACD;AACF;AACH;AAEC;AACE;AACE;;AAjFL;AAAA;AAAA,WAkFE,4BAAmB,MAAnB,EAAiC;AAC/B,WAAK,cAAL,GAAsB,MAAM,CAAC,QAAP,CAAgB,GAAhB,IAAuB,MAAvB,GAAgC,MAAM,GAAG,GAA/D;AACD;AACH;AAEC;AACE;AACE;;AAzFL;AAAA;AAAA,WA0FE,mBAAkC;AAAA;;AAAA,wCAAvB,KAAuB;AAAvB,QAAA,KAAuB;AAAA;;AAChC,MAAA,KAAK,CAAC,OAAN,CAAc,UAAA,IAAI,EAAA;AAChB,QAAA,MAAI,CAAC,eAAL,CAAqB,GAArB,CAAyB,UAAU,CAAC,IAAI,CAAC,IAAN,EAAY,IAAI,CAAC,KAAjB,CAAnC,EAA4D,IAA5D;AACD,OAFD;AAGD;AACH;AAEC;AACE;AACE;AAEJ;;AArGD;AAAA;AAAA,WAqGE,wBAAe,IAAf,EAA6B,OAA7B,EAA4C;AAC1C,iCAAuB,mBAAmB,CAAC,IAAD,CAA1C;AAAA;AAAA,UAAO,CAAP;AAAA,UAAU,SAAV;;AACA,UAAI,CAAC,SAAL,EAAgB;AACd,cAAM,0BAA0B,EAAhC;AACD;;AACD,WAAK,OAAL,CAAa;AAAE,QAAA,IAAI,EAAE,IAAR;AAAc,QAAA,IAAI,EAAE;AAApB,OAAb;AACD;AACH;AAEC;AACE;;AA/GH;AAAA;AAAA,WAgHE,iBAAK;AACH,WAAK,eAAL,CAAqB,KAArB;;AACA,WAAK,uBAAL,CAA6B,KAA7B;AACD;AACH;AAEC;AACE;AACE;AAEJ;;AA1HD;AAAA;AAAA,WA0HE,4BACE,IADF,EAEE,YAFF,EAEuB;AAAA;;AACtB;AAEC,UAAM,gBAAgB,GAA0B,gBAAgB,CAAC,IAAD,CAAhB,GAC3C,IAD2C,GAE5C,KAAK,eAAL,CAAqB,GAArB,CAAyB,IAAzB,KAAkC,IAFtC,CAHqB,CAMzB;AAEG;;AACC,UAAM,eAAe,GAAG,gBAAgB,GACpCC,EAAI,CAAC,gBAAD,CADgC,GAEpC,KAAK,oBAAL,CAA0B,IAA1B,CAFJ,CATqB,CAYzB;;AAEI,aAAO,eAAe,CAAC,IAAhB,CACL,GAAG,CAAC,UAAA,CAAC,EAAA;AACH,YAAI,CAAC,CAAL,EAAQ;AACN,gBAAM,iBAAiB,CAAC,IAAD,CAAvB;AACD;;AACD,eAAO,MAAI,CAAC,4BAAL,CAAkC,CAAlC,EAAqC,YAArC,CAAP;AACD,OALE,CADE,CAAP;AAQD;AAlJH;AAAA;AAAA,WAoJE,0BAAc;AACZ,aAAO,KAAK,eAAZ;AACD;AACH;AAEC;AACE;AACE;;AA3JL;AAAA;AAAA,WA4JY,8BACR,IADQ,EACI;AAAA;;AACb;AAEC,UAAI,CAAC,KAAK,KAAN,IAAe,CAAC,KAAK,mBAAzB,EAA8C;AAC5C,eAAOA,EAAI,CAAC,mBAAmB,EAApB,CAAX;AACD,OALW,CAMhB;AAEG;;;AACC,UAAI,UAAU,GAAG,KAAK,kBAAL,CAAwB,GAAxB,CAA4B,IAA5B,CAAjB;;AAEA,UAAI,CAAC,UAAL,EAAiB;AACf,oCAA0B,mBAAmB,CAAC,IAAD,CAA7C;AAAA;AAAA,YAAO,KAAP;AAAA,YAAa,SAAb,4BADe,CAErB;;;AAEM,YAAM,IAAI,GAAmB,SAAS,GAClC;AAAE,UAAA,IAAI,EAAE,IAAR;AAAc,UAAA,IAAI,EAAE;AAApB,SADkC,GAElC,yBAAyB,CAAC,KAAD,CAF7B;AAIA,YAAM,MAAM,GAAG,KAAK,mBAAL,GAA2B,KAA3B,GAAmC,MAAlD;AACA,YAAM,GAAG,GACP,CAAC,SAAS,aACH,KAAK,cADF,oBAC0B,SAD1B,cACuC,KADvC,cAEH,KAAK,cAFF,oBAE0B,IAAI,CAAC,KAF/B,cAEwC,IAAI,CAAC,IAF7C,CAAV,IAEiE,MAHnE;AAKA,YAAM,OAAO,GAAG,KAAK,SAAL,CAAe,QAAf,CAAwB,eAAe,CAAC,GAAxC,EAA6C,GAA7C,CAAhB;;AAEA,YAAI,CAAC,OAAL,EAAc;AACZ,gBAAM,eAAe,CAAC,GAAD,CAArB;AACD;;AAED,YAAM,MAAM,GAAG,CAAC,KAAK,mBAAN,GACX,KAAK,KAAL,CACG,GADH,CACO,OADP,EACgB;AAAE,UAAA,YAAY,EAAE;AAAhB,SADhB,EAEG,IAFH,CAEQ,GAAG,CAAC,UAAA,OAAO;AAAA,iBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAU,IAAV,CAAA,EAAc;AAAE,YAAA,IAAI,EAAE;AAAR,WAAd,CAAA;AAAA,SAAR,CAFX,CADW,GAIX,KAAK,6BAAL,CAAmC,IAAnC,EAAyC,OAAzC,CAJJ;AAMA,QAAA,UAAU,GAAG,MAAM,CAAC,IAAP,CACX,GAAG,CAAC,UAAA,UAAU;AAAA,iBAAI,MAAI,CAAC,OAAL,CAAa,UAAb,CAAJ;AAAA,SAAX,CADQ,EAEX,QAAQ,CAAC;AAAA,iBAAM,MAAI,CAAC,kBAAL,CAAwB,MAAxB,CAA+B,IAA/B,CAAN;AAAA,SAAD,CAFG,EAGX,UAAU,CAAC;AAAA,iBAAMA,EAAI,CAAC,IAAD,CAAV;AAAA,SAAD,CAHC,EAIX,KAAK,EAJM,CAAb;;AAOA,aAAK,kBAAL,CAAwB,GAAxB,CAA4B,IAA5B,EAAkC,UAAlC;AACD;;AAED,aAAO,UAAP;AACD;AA7MH;AAAA;AAAA,WA+MY,uCAA8B,IAA9B,EAAoD,GAApD,EAA+D;AAAA;;AACvE,aAAO,IAAI,UAAJ,CAA+B,UAAA,UAAU,EAAA;AAC9C,YAAM,MAAM,GAAG,MAAI,CAAC,SAAL,CAAe,aAAf,CAA6B,QAA7B,CAAf;;AACA,YAAM,KAAK,GAAG,UAAU,CAAC,YAAA;AACvB,UAAA,KAAK;AACL,UAAA,UAAU,CAAC,KAAX,CAAiB,0BAA0B,EAA3C;AACD,SAHuB,EAGrB,IAHqB,CAAxB;AAKA,QAAA,MAAM,CAAC,GAAP,GAAa,GAAb;;AAEA,iBAAS,KAAT,GAAc;AACZ,UAAA,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,MAA9B;AACA,UAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,QAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,WAApB,CAAgC,MAAhC;;AACA,QAAA,MAAI,CAAC,eAAL,CACK,IADL,CAEQ,MAAM,CAAC,UAAA,CAAC;AAAA,iBAAI,CAAC,CAAC,IAAF,KAAW,IAAI,CAAC,IAAhB,IAAwB,CAAC,CAAC,KAAF,KAAY,IAAI,CAAC,KAA7C;AAAA,SAAF,CAFd,EAGQ,IAAI,CAAC,CAAD,CAHZ,EAKK,SALL,CAKe,UAAA,CAAC,EAAA;AACV,UAAA,UAAU,CAAC,IAAX,CAAgB,CAAhB;AACA,UAAA,KAAK;AACN,SARL;AASD,OAxBM,CAAP;AAyBD;AACH;AAEC;AACE;AACE;AAEJ;;AAhPD;AAAA;AAAA,WAgPY,sCACR,IADQ,EAER,YAFQ,EAEa;AAErB,UAAI,GAAJ;AAEA,UAAM,GAAG,GAAG,YAAY,IAAI,KAAK,oBAAL,CAA0B,YAAtD;;AACA,UAAM,GAAG,GACP,iBAAiB,CAAC,GAAD,CAAjB,IAA0B,KAAK,oBAAL,CAA0B,cADtD;;AAEA,UAAM,GAAG,GACP,IAAI,CAAC,KAAL,KAAe,SAAf,GACI,kBAAkB,CAAC,IAAI,CAAC,IAAN,EAAY,IAAI,CAAC,KAAjB,EAAwB,GAAxB,EAA6B,GAA7B,CADtB,GAEI,IAAI,CAAC,KAAL,KAAe,SAAf,GACA,IAAI,CAAC,IADL,GAEA,UAAU,CAAC,IAAI,CAAC,IAAN,EAAY,IAAI,CAAC,KAAjB,CALhB,CAPqB,CAazB;;AAEI,UAAM,MAAM,GAAG,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,GAAjC,CAAf;;AAEA,UAAI,MAAJ,EAAY;AACV,QAAA,GAAG,GAAG,MAAM,CAAC,IAAb;AACD,OAFD,MAEO;AACL,QAAA,GAAG,GAAG,KAAK,gBAAL,CACJ,KAAK,gBAAL,EACR;AACU,aAAK,2BAAL,CACE,YAAY,CAAC,IAAI,CAAC,IAAN,CAAZ,GAA0B,IAAI,CAAC,IAA/B,GAAsC,gBAAgB,CAAC,IAAI,CAAC,IAAN,CADxD,CAFF,EAKE,IAAI,CAAC,KAAL,KAAe,SALjB,EAME,GANF,EAOE,GAPF,CADI,CAAN,CADK,CAYX;;AACM,aAAK,uBAAL,CAA6B,GAA7B,CAAiC,GAAjC,EAAsC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACjC,IADiC,CAAA,EAC7B;AACP,UAAA,IAAI,EAAE;AADC,SAD6B,CAAtC;AAID;;AAED,aAAO,QAAQ,CAAC,GAAD,CAAf;AACD;AAzRH;AAAA;AAAA,WA2RY,qCAA4B,GAA5B,EAAuC;AAC/C,UAAM,GAAG,GAAG,KAAK,SAAL,CAAe,aAAf,CAA6B,KAA7B,CAAZ;;AACA,MAAA,GAAG,CAAC,SAAJ,GAAgB,GAAhB;AACA,UAAM,GAAG,GAAe,GAAG,CAAC,aAAJ,CAAkB,KAAlB,CAAxB;;AACA,UAAI,CAAC,GAAL,EAAU;AACR,cAAM,mBAAN;AACD;;AACD,aAAO,GAAP;AACD;AAnSH;AAAA;AAAA,WAqSY,0BAAiB,GAAjB,EAAgC;AACxC,WAAK,SAAL,CAAe,YAAf,CAA4B,GAA5B,EAAiC,OAAjC,EAA0C,KAA1C;;AACA,WAAK,SAAL,CAAe,YAAf,CAA4B,GAA5B,EAAiC,QAAjC,EAA2C,KAA3C;;AACA,aAAO,GAAP;AACD;AAzSH;AAAA;AAAA,WA2SY,0BACR,GADQ,EAER,OAFQ,EAGR,GAHQ,EAIR,GAJQ,EAIG;AAEX,UAAI,OAAJ,EAAa;AACX,YAAM,QAAQ,GAAG,GAAG,CAAC,UAArB;AACA,YAAM,MAAM,GAAG,QAAQ,CAAC,MAAxB;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,cAAM,KAAK,GAAgB,QAAQ,CAAC,CAAD,CAAnC;;AACA,cAAI,KAAK,CAAC,YAAN,CAAmB,MAAnB,MAA+B,gBAAnC,EAAqD;AACnD,iBAAK,SAAL,CAAe,YAAf,CAA4B,KAA5B,EAAmC,MAAnC,EAA2C,GAA3C;AACD,WAFD,MAEO;AACL,iBAAK,SAAL,CAAe,YAAf,CAA4B,KAA5B,EAAmC,MAAnC,EAA2C,GAA3C;AACD;AACF;AACF;;AACD,WAAK,SAAL,CAAe,YAAf,CAA4B,GAA5B,EAAiC,MAAjC,EAAyC,cAAzC;;AACA,aAAO,GAAP;AACD;AA/TH;;AAAA;AAAA,GAFA;;;;;;;;;;AAkUC;;;AACD,WAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAqC;AAAA,IAAA,IAAA,EA9QL;AA8QK,GAArC,EA7QE;AAAA,IAAA,IAAA,EAAkC,WAAlC;AAA6C,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAA1C;AAA0C,KAAA;AAA7C,GA6QF,EA7QoB;AAAA,IAAA,IAAA,EAAA,SAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAEf;AAFe,KAAA,EAEP;AAAA,MAAA,IAAA,EAAI,MAAJ;AAAU,MAAA,IAAA,EAAA,CAAC,QAAD;AAAV,KAFO;AAAA,GA6QpB,EA3QyC;AAAA,IAAA,IAAA,EAChB;AADgB,GA2QzC,CAAA;AAAA,CAAA;;AAjUa,WAAW,GAAA,UAAA,CAApB,CADH,OAAA,CAAA,CAAA,EAAU,QAqDE,EArDZ,CACG,EAsDC,OAAA,CAAA,CAAA,EAAA,QAAQ,EAAR,CAtDD,EAsDa,OAAA,CAAA,CAAA,EAAA,MAAM,CAAC,QAAD,CAAN,CAtDb,CAAoB,EAAX,WAAW,CAAX;;AAiUX,IC/VW,aAAb;AAKE,yBAAsB,YAAtB,EAA2D,WAA3D,EAA8F,SAA9F,EAAkH;AAAA;;AAA5F,SAAA,YAAA,GAAA,YAAA;AAAqC,SAAA,WAAA,GAAA,WAAA;AAAmC,SAAA,SAAA,GAAA,SAAA;AAAwB;;AALxH;AAAA;AAAA,WAOE,qBAAY,OAAZ,EAAkC;AAChC,UAAI,OAAO,CAAC,IAAR,IAAgB,OAAO,CAAC,KAAxB,IAAiC,OAAO,CAAC,YAA7C,EAA2D;AACzD,aAAK,WAAL;AACD;AACF;AACH;AAEC;AACE;;AAfH;AAAA;AAAA,WAgBY,uBAAW;AAAA;;AACnB,aAAO,IAAI,OAAJ,CAA+B,UAAA,OAAO,EAAA;AAC3C,YAAI,CAAC,MAAI,CAAC,IAAV,EAAgB;AACd,UAAA,MAAI,CAAC,gBAAL;;AACA,UAAA,OAAO,CAAC,IAAD,CAAP;AACD,SAHD,MAGO;AACL,UAAA,MAAI,CAAC,YAAL,CAAkB,kBAAlB,CACE,MAAI,CAAC,cAAL,CAAoB,MAAI,CAAC,IAAzB,EAA+B,MAAI,CAAC,KAApC,CADF,EAEE,MAAI,CAAC,YAFP,EAGE,SAHF,CAGY,UAAA,GAAG,EAAA;AACb,YAAA,MAAI,CAAC,cAAL,CAAoB,GAApB;;AACA,YAAA,OAAO,CAAC,GAAD,CAAP;AACD,WAND;AAOD;AACF,OAbM,CAAP;AAcD;AACH;AAEC;AACE;AACE;AACE;AAEJ;;AAvCH;AAAA;AAAA,WAuCY,wBAAe,IAAf,EAA8C,KAA9C,EAA8D;AACtE,UAAI,gBAAgB,CAAC,IAAD,CAApB,EAA4B;AAC1B,eAAO,IAAP;AACD,OAFD,MAEO;AACL,oCAA4B,mBAAmB,CAAC,IAAD,CAA/C;AAAA;AAAA,YAAQ,MAAR;AAAA,YAAc,SAAd;;AACA,YAAI,SAAJ,EAAe;AACb,iBAAO,IAAP;AACD;;AACD,YAAI,sBAAsB,CAAC,MAAD,CAA1B,EAAkC;AAChC,cAAI,CAAC,CAAC,KAAN,EAAa;AACX,YAAA,IAAI,kBAAW,MAAX,qDAA0D,KAA1D,uBAAJ;AACD;;AACD,iBAAO,MAAP;AACD,SALD,MAKO;AACL,iBAAO,UAAU,CAAC,MAAD,EAAO,KAAK,IAAI,KAAK,YAAL,CAAkB,YAAlC,CAAjB;AACD;AACF;AACF;AAxDH;AAAA;AAAA,WA0DY,wBAAe,GAAf,EAA8B;AACtC,WAAK,gBAAL;;AACA,WAAK,SAAL,CAAe,WAAf,CAA2B,KAAK,WAAL,CAAiB,aAA5C,EAA2D,GAA3D;AACD;AA7DH;AAAA;AAAA,WA+DY,4BAAgB;AACxB,UAAM,EAAE,GAAgB,KAAK,WAAL,CAAiB,aAAzC;AACA,UAAM,QAAQ,GAAG,EAAE,CAAC,UAApB;AACA,UAAM,MAAM,GAAG,QAAQ,CAAC,MAAxB;;AACA,WAAK,IAAI,CAAC,GAAG,MAAM,GAAG,CAAtB,EAAyB,CAAC,IAAI,CAA9B,EAAiC,CAAC,EAAlC,EAAsC;AACpC,YAAM,KAAK,GAAG,QAAQ,CAAE,CAAF,CAAtB;;AACA,YAAI,KAAK,CAAC,OAAN,CAAc,WAAd,OAAgC,KAApC,EAA2C;AACzC,eAAK,SAAL,CAAe,WAAf,CAA2B,EAA3B,EAA+B,KAA/B;AACD;AACF;AACF;AAzEH;;AAAA;AAAA,GD+VE;;;;;;;;;;;;;;oBCrRD,oB;;;AACD,aAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAuC;AAAA,IAAA,IAAA,EAtED;AAsEC,GAAvC,EAtEqD;AAAA,IAAA,IAAA,EAAqB;AAArB,GAsErD,EAtEwF;AAAA,IAAA,IAAA,EAAmB;AAAnB,GAsExF,CAAA;AAAA,CAAA;;AA1EW,UAAA,CAAA,CAAR,KAAK,EAAG,CAAA,EAAA,aAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,CAAA,EAAA,aAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AACA,UAAA,CAAA,CAAR,KAAK,EAAG,CAAA,EAAA,aAAA,CAAA,SAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA;;AAwET,IA3EwB,UAHzB;AAAA;AAAA,EA8EC;;AA9EQ,UCDa,CDErB,IADQ,GACR,MAAU,CAAA,gBAAV,CACA;AAAA,EAAA,IACW,EAAa;AADxB,CADA,CADQ;ACNc,UAAC,CAAA,IAAD,GACtB,MAAO,CAAA,gBAAP,CAAwB;AAAA,EAAA,OACxB,EAAA,SAAA,kBAAA,CAA6B,CAA7B,EAA6B;AAAA,WAC7B,KAAA,CAAS,IAAG,UAAZ,GAD6B;AACL,GAFA;AAGxB,EAAA,SACW,EAAA,CAAA,WAAA,CAJa;AAIC,EAAA,OAAA,EAAA,CAAA,CAAA,YAAA,CAAA;AAJD,CAAxB,CADsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxB,C;;AAAE,ICTW,QAAQ,GAAa;AAChC,EAAA,IAAI,EAAE,CACJ,OADI,EACK,cADL,EACqB,eADrB,EACsC,eADtC,EACuD,eADvD,EACwE,aADxE,EACuF,eADvF,EACwG,SADxG,EACmH,KADnH,EAC0H,OAD1H,EACmI,UADnI,EAC+I,OAD/I,EACwJ,UADxJ,EACoK,MADpK,EAC4K,gBAD5K,EAC8L,MAD9L,EACsM,UADtM,EACkN,MADlN,EAC0N,gBAD1N,EAC4O,OAD5O,EACqP,KADrP,EAC4P,MAD5P,EACoQ,YADpQ,EACkR,QADlR,EAC4R,UAD5R,EACwS,KADxS,EAC+S,YAD/S,EAC6T,YAD7T,EAC2U,UAD3U,EACuV,aADvV,EACsW,WADtW,EACmX,cADnX,EACmY,QADnY,EAC6Y,cAD7Y,EAC6Z,cAD7Z,EAC6a,cAD7a,EAC6b,WAD7b,EAC0c,qBAD1c,EACie,cADje,EACif,OADjf,EAC0f,qBAD1f,EACihB,gBADjhB,EACmiB,MADniB,EAC2iB,UAD3iB,EACujB,SADvjB,EACkkB,gBADlkB,EAColB,SADplB,EAC+lB,WAD/lB,EAC4mB,MAD5mB,EAConB,aADpnB,EACmoB,kBADnoB,EACupB,kBADvpB,EAC2qB,UAD3qB,EACurB,OADvrB,EACgsB,WADhsB,EAC6sB,MAD7sB,EACqtB,QADrtB,EAC+tB,iBAD/tB,EACkvB,iBADlvB,EACqwB,SADrwB,EACgxB,eADhxB,EACiyB,aADjyB,EACgzB,aADhzB,EAC+zB,iBAD/zB,EACk1B,iBADl1B,EACq2B,gBADr2B,EACu3B,MADv3B,EAC+3B,gBAD/3B,EACi5B,aADj5B,EACg6B,oBADh6B,EACs7B,aADt7B,EACq8B,eADr8B,EACs9B,YADt9B,EACo+B,UADp+B,EACg/B,KADh/B,EACu/B,eADv/B,EACwgC,cADxgC,EACwhC,YADxhC,EACsiC,UADtiC,EACkjC,kBADljC,EACskC,UADtkC,EACklC,YADllC,EACgmC,eADhmC,EACinC,UADjnC,EAC6nC,WAD7nC,EAC0oC,cAD1oC,EAC0pC,MAD1pC,EACkqC,UADlqC,EAC8qC,WAD9qC,EAC2rC,QAD3rC,EACqsC,MADrsC,EAC6sC,MAD7sC,EACqtC,YADrtC,EACmuC,gBADnuC,EACqvC,QADrvC,EAC+vC,aAD/vC,EAC8wC,SAD9wC,EACyxC,MADzxC,EACiyC,OADjyC,EAC0yC,aAD1yC,EACyzC,QADzzC,EACm0C,QADn0C,EAC60C,MAD70C,EACq1C,MADr1C,EAC61C,QAD71C,EACu2C,eADv2C,EACw3C,oBADx3C,EAC84C,oBAD94C,EACo6C,eADp6C,EACq7C,KADr7C,EAC47C,OAD57C,EACq8C,WADr8C,EACk9C,MADl9C,EAC09C,WAD19C,EACu+C,OADv+C,EACg/C,QADh/C,EAC0/C,WAD1/C,EACugD,aADvgD,EACshD,WADthD,EACmiD,WADniD,EACgjD,WADhjD,EAC6jD,QAD7jD,EACukD,aADvkD,EACslD,UADtlD,EACkmD,aADlmD,EACinD,aADjnD,EACgoD,MADhoD,EACwoD,MADxoD,EACgpD,aADhpD,EAC+pD,MAD/pD,EACuqD,cADvqD,EACurD,eADvrD,EACwsD,KADxsD,EAC+sD,SAD/sD,EAC0tD,eAD1tD,EAC2uD,cAD3uD,EAC2vD,QAD3vD,EACqwD,eADrwD,EACsxD,cADtxD,EACsyD,cADtyD,EACszD,cADtzD,EACs0D,YADt0D,EACo1D,OADp1D,EAC61D,SAD71D,EACw2D,WADx2D,EACq3D,aADr3D,EACo4D,aADp4D,EACm5D,aADn5D,EACk6D,aADl6D,EACi7D,cADj7D,EACi8D,SADj8D,EAC48D,SAD58D,EACu9D,iBADv9D,EAC0+D,SAD1+D,EACq/D,SADr/D,EACggE,WADhgE,EAC6gE,WAD7gE,EAC0hE,iBAD1hE,EAC6iE,MAD7iE,EACqjE,cADrjE,EACqkE,eADrkE,EACslE,gBADtlE,EACwmE,eADxmE,EACynE,cADznE,EACyoE,cADzoE,EACypE,OADzpE,EACkqE,MADlqE,EAC0qE,oBAD1qE,EACgsE,QADhsE,EAC0sE,MAD1sE,EACktE,eADltE,EACmuE,UADnuE,EAC+uE,eAD/uE,EACgwE,QADhwE,EAC0wE,SAD1wE,EACqxE,MADrxE,EAC6xE,UAD7xE,EACyyE,MADzyE,EACizE,eADjzE,EACk0E,cADl0E,EACk1E,OADl1E,EAC21E,OAD31E,EACo2E,cADp2E,EACo3E,SADp3E,EAC+3E,OAD/3E,EACw4E,UADx4E,EACo5E,MADp5E,EAC45E,cAD55E,EAC46E,MAD56E,EACo7E,KADp7E,EAC27E,eAD37E,EAC48E,UAD58E,EACw9E,QADx9E,EACk+E,MADl+E,EAC0+E,aAD1+E,EACy/E,eADz/E,EAC0gF,kBAD1gF,EAC8hF,eAD9hF,EAC+iF,MAD/iF,EACujF,gBADvjF,EACykF,QADzkF,EACmlF,gBADnlF,EACqmF,WADrmF,EACknF,WADlnF,EAC+nF,SAD/nF,EAC0oF,KAD1oF,EACipF,QADjpF,EAC2pF,QAD3pF,EACqqF,cADrqF,EACqrF,cADrrF,EACqsF,SADrsF,EACgtF,QADhtF,EAC0tF,cAD1tF,EAC0uF,OAD1uF,EACmvF,SADnvF,EAC8vF,cAD9vF,EAC8wF,OAD9wF,EACuxF,cADvxF,CAD0B;AAIhC,EAAA,OAAO,EAAE,CACP,OADO,EACE,cADF,EACkB,KADlB,EACyB,cADzB,EACyC,aADzC,EACwD,YADxD,EACsE,SADtE,EACiF,eADjF,EACkG,QADlG,EAC4G,aAD5G,EAC2H,QAD3H,EACqI,YADrI,EACmJ,SADnJ,EAC8J,WAD9J,EAC2K,WAD3K,EACwL,QADxL,EACkM,KADlM,EACyM,cADzM,EACyN,UADzN,EACqO,OADrO,EAC8O,YAD9O,EAC4P,aAD5P,EAC2Q,YAD3Q,EACyR,UADzR,EACqS,YADrS,EACmT,YADnT,EACiU,aADjU,EACgV,OADhV,EACyV,UADzV,EACqW,OADrW,EAC8W,MAD9W,EACsX,SADtX,EACiY,MADjY,EACyY,WADzY,EACsZ,SADtZ,EACia,gBADja,EACmb,WADnb,EACgc,MADhc,EACwc,OADxc,EACid,MADjd,EACyd,MADzd,EACie,eADje,EACkf,mBADlf,EACugB,aADvgB,EACshB,cADthB,EACsiB,cADtiB,EACsjB,cADtjB,EACskB,YADtkB,EAColB,iBADplB,EACumB,QADvmB,EACinB,UADjnB,EAC6nB,kBAD7nB,EACipB,KADjpB,EACwpB,UADxpB,EACoqB,OADpqB,EAC6qB,MAD7qB,EACqrB,YADrrB,EACmsB,UADnsB,EAC+sB,QAD/sB,EACytB,YADztB,EACuuB,KADvuB,EAC8uB,YAD9uB,EAC4vB,aAD5vB,EAC2wB,UAD3wB,EACuxB,WADvxB,EACoyB,cADpyB,EACozB,OADpzB,EAC6zB,cAD7zB,EAC60B,WAD70B,EAC01B,IAD11B,EACg2B,QADh2B,EAC02B,cAD12B,EAC03B,OAD13B,EACm4B,cADn4B,EACm5B,cADn5B,EACm6B,OADn6B,EAC46B,cAD56B,EAC47B,YAD57B,EAC08B,cAD18B,EAC09B,gBAD19B,EAC4+B,SAD5+B,EACu/B,OADv/B,EACggC,cADhgC,EACghC,MADhhC,EACwhC,gBADxhC,EAC0iC,SAD1iC,EACqjC,eADrjC,EACskC,QADtkC,EACglC,SADhlC,EAC2lC,SAD3lC,EACsmC,cADtmC,EACsnC,UADtnC,EACkoC,aADloC,EACipC,UADjpC,EAC6pC,WAD7pC,EAC0qC,SAD1qC,EACqrC,MADrrC,EAC6rC,kBAD7rC,EACitC,WADjtC,EAC8tC,aAD9tC,EAC6uC,MAD7uC,EACqvC,kBADrvC,EACywC,OADzwC,EACkxC,WADlxC,EAC+xC,UAD/xC,EAC2yC,eAD3yC,EAC4zC,YAD5zC,EAC00C,QAD10C,EACo1C,iBADp1C,EACu2C,SADv2C,EACk3C,qBADl3C,EACy4C,UADz4C,EACq5C,MADr5C,EAC65C,UAD75C,EACy6C,YADz6C,EACu7C,SADv7C,EACk8C,eADl8C,EACm9C,QADn9C,EAC69C,WAD79C,EAC0+C,aAD1+C,EACy/C,cADz/C,EACygD,aADzgD,EACwhD,MADxhD,EACgiD,aADhiD,EAC+iD,UAD/iD,EAC2jD,UAD3jD,EACukD,MADvkD,EAC+kD,iBAD/kD,EACkmD,SADlmD,EAC6mD,MAD7mD,EACqnD,UADrnD,EACioD,OADjoD,EAC0oD,aAD1oD,EACypD,aADzpD,EACwqD,MADxqD,EACgrD,oBADhrD,EACssD,YADtsD,EACotD,aADptD,EACmuD,WADnuD,EACgvD,QADhvD,EAC0vD,YAD1vD,EACwwD,QADxwD,EACkxD,eADlxD,EACmyD,KADnyD,EAC0yD,UAD1yD,EACszD,eADtzD,EACu0D,MADv0D,EAC+0D,cAD/0D,EAC+1D,cAD/1D,EAC+2D,YAD/2D,EAC63D,cAD73D,EAC64D,cAD74D,EAC65D,UAD75D,EACy6D,WADz6D,EACs7D,YADt7D,EACo8D,kBADp8D,EACw9D,UADx9D,EACo+D,YADp+D,EACk/D,UADl/D,EAC8/D,UAD9/D,EAC0gE,eAD1gE,EAC2hE,UAD3hE,EACuiE,cADviE,EACujE,aADvjE,EACskE,WADtkE,EACmlE,WADnlE,EACgmE,cADhmE,EACgnE,WADhnE,EAC6nE,UAD7nE,EACyoE,QADzoE,EACmpE,MADnpE,EAC2pE,MAD3pE,EACmqE,YADnqE,EACirE,aADjrE,EACgsE,MADhsE,EACwsE,aADxsE,EACutE,QADvtE,EACiuE,WADjuE,EAC8uE,aAD9uE,EAC6vE,SAD7vE,EACwwE,MADxwE,EACgxE,MADhxE,EACwxE,gBADxxE,EAC0yE,iBAD1yE,EAC6zE,wBAD7zE,EACu1E,OADv1E,EACg2E,YADh2E,EAC82E,WAD92E,EAC23E,UAD33E,EACu4E,MADv4E,EAC+4E,aAD/4E,EAC85E,KAD95E,EACq6E,SADr6E,EACg7E,QADh7E,EAC07E,MAD17E,EACk8E,MADl8E,EAC08E,aAD18E,EACy9E,QADz9E,EACm+E,QADn+E,EAC6+E,QAD7+E,EACu/E,KADv/E,EAC8/E,UAD9/E,EAC0gF,OAD1gF,EACmhF,WADnhF,EACgiF,OADhiF,EACyiF,SADziF,EACojF,MADpjF,EAC4jF,IAD5jF,EACkkF,WADlkF,EAC+kF,QAD/kF,EACylF,QADzlF,EACmmF,OADnmF,EAC4mF,OAD5mF,EACqnF,MADrnF,EAC6nF,aAD7nF,EAC4oF,kBAD5oF,EACgqF,kBADhqF,EACorF,cADprF,EACosF,WADpsF,EACitF,kBADjtF,EACquF,aADruF,EACovF,QADpvF,EAC8vF,WAD9vF,EAC2wF,KAD3wF,EACkxF,QADlxF,EAC4xF,iBAD5xF,EAC+yF,MAD/yF,EACuzF,QADvzF,EACi0F,aADj0F,EACg1F,aADh1F,EAC+1F,MAD/1F,EACu2F,aADv2F,EACs3F,UADt3F,EACk4F,SADl4F,EAC64F,MAD74F,EACq5F,oBADr5F,EAC26F,OAD36F,EACo7F,YADp7F,EACk8F,MADl8F,EAC08F,MAD18F,EACk9F,iBADl9F,EACq+F,QADr+F,EAC++F,MAD/+F,EACu/F,aADv/F,EACsgG,KADtgG,EAC6gG,cAD7gG,EAC6hG,aAD7hG,EAC4iG,QAD5iG,EACsjG,WADtjG,EACmkG,MADnkG,EAC2kG,KAD3kG,EACklG,cADllG,EACkmG,OADlmG,EAC2mG,SAD3mG,EACsnG,cADtnG,EACsoG,aADtoG,EACqpG,MADrpG,EAC6pG,eAD7pG,EAC8qG,YAD9qG,EAC4rG,QAD5rG,EACssG,YADtsG,EACotG,aADptG,EACmuG,cADnuG,EACmvG,eADnvG,EACowG,QADpwG,EAC8wG,SAD9wG,EACyxG,OADzxG,EACkyG,cADlyG,EACkzG,YADlzG,EACg0G,cADh0G,EACg1G,WADh1G,EAC61G,YAD71G,EAC22G,YAD32G,EACy3G,OADz3G,EACk4G,YADl4G,EACg5G,UADh5G,EAC45G,aAD55G,EAC26G,SAD36G,EACs7G,WADt7G,EACm8G,aADn8G,EACk9G,aADl9G,EACi+G,WADj+G,EAC8+G,cAD9+G,EAC8/G,SAD9/G,EACygH,OADzgH,EACkhH,MADlhH,EAC0hH,SAD1hH,EACqiH,UADriH,EACijH,SADjjH,EAC4jH,cAD5jH,EAC4kH,QAD5kH,EACslH,aADtlH,EACqmH,oBADrmH,EAC2nH,SAD3nH,EACsoH,gBADtoH,EACwpH,aADxpH,EACuqH,IADvqH,EAC6qH,iBAD7qH,EACgsH,eADhsH,EACitH,iBADjtH,EACouH,gBADpuH,EACsvH,mBADtvH,EAC2wH,MAD3wH,EA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2rB,eAD3rB,EAC4sB,UAD5sB,EACwtB,WADxtB,EACquB,cADruB,EACqvB,UADrvB,EACiwB,WADjwB,EAC8wB,QAD9wB,EACwxB,MADxxB,EACgyB,MADhyB,EACwyB,MADxyB,EACgzB,YADhzB,EAC8zB,MAD9zB,EACs0B,aADt0B,EACq1B,QADr1B,EAC+1B,OAD/1B,EACw2B,MADx2B,EACg3B,MADh3B,EACw3B,aADx3B,EACu4B,KADv4B,EAC84B,OAD94B,EACu5B,MADv5B,EAC+5B,WAD/5B,EAC46B,OAD56B,EACq7B,WADr7B,EACk8B,QADl8B,EAC48B,aAD58B,EAC29B,aAD39B,EAC0+B,QAD1+B,EACo/B,WADp/B,EACigC,MADjgC,EACygC,aADzgC,EACwhC,aADxhC,EACuiC,MADviC,EAC+iC,MAD/iC,EACujC,cADvjC,EACukC,KADvkC,EAC8kC,cAD9kC,EAC8lC,SAD9lC,EACymC,eADzmC,EAC0nC,cAD1nC,EAC0oC,QAD1oC,EACopC,cADppC,EACoqC,cADpqC,EACorC,OADprC,EAC6rC,WAD7rC,EAC0sC,SAD1sC,EACqtC,aADrtC,EACouC,aADpuC,EACmvC,aADnvC,EACkwC,SADlwC,EAC6wC,cAD7wC,EAC6xC,aAD7xC,EAC4yC,SAD5yC,EACuzC,SADvzC,EACk0C,iBADl0C,EACq1C,gBADr1C,EACu2C,cADv2C,EACu3C,SADv3C,EACk4C,MADl4C,EAC04C,iBAD14C,EAC65C,cAD75C,EAC66C,cAD76C,EAC67C,oBAD77C,EACm9C,MADn9C,EAC29C,QAD39C,EACq+C,UADr+C,EACi/C,SADj/C,EAC4/C,eAD5/C,EAC6gD,MAD7gD,EACqhD,UADrhD,EACiiD,SADjiD,EAC4iD,MAD5iD,EACojD,OADpjD,EAC6jD,UAD7jD,EACykD,OADzkD,EACklD,MADllD,EAC0lD,QAD1lD,EAComD,MADpmD,EAC4mD,UAD5mD,EACwnD,KADxnD,EAC+nD,MAD/nD,EACuoD,kBADvoD,EAC2pD,QAD3pD,EACqqD,MADrqD,EAC6qD,aAD7qD,EAC4rD,QAD5rD,EACssD,WADtsD,EACmtD,WADntD,EACguD,KADhuD,EACuuD,SADvuD,EACkvD,cADlvD,EACkwD,QADlwD;AAPuB,CDShC;AEZF;AACA;AACA;;AAEA,SAAA,+BAAA,EAAA,0BAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,0BAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,KAAA,EAAA,yBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,UAAA,EAAA,kBAAA","sourcesContent":["import { isDevMode } from '@angular/core';\nimport { generate as generateColor } from '@ant-design/colors';\n\nimport { IconDefinition, ThemeType } from './types';\n\nexport const ANT_ICON_ANGULAR_CONSOLE_PREFIX = '[@ant-design/icons-angular]:';\n\nexport function error(message: string): void {\n  console.error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n}\n\nexport function warn(message: string): void {\n  if (isDevMode()) {\n    console.warn(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX} ${message}.`);\n  }\n}\n\nexport function getSecondaryColor(primaryColor: string): string {\n  return generateColor(primaryColor)[0];\n}\n\nexport function withSuffix(name: string, theme: ThemeType | undefined): string {\n  switch (theme) {\n    case 'fill': return `${name}-fill`;\n    case 'outline': return `${name}-o`;\n    case 'twotone': return `${name}-twotone`;\n    case undefined: return name;\n    default: throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Theme \"${theme}\" is not a recognized theme!`);\n  }\n}\n\nexport function withSuffixAndColor(name: string, theme: ThemeType, pri: string, sec: string): string {\n  return `${withSuffix(name, theme)}-${pri}-${sec}`;\n}\n\nexport function mapAbbrToTheme(abbr: string): ThemeType {\n  return abbr === 'o' ? 'outline' : abbr as ThemeType;\n}\n\nexport function alreadyHasAThemeSuffix(name: string): boolean {\n  return name.endsWith('-fill') || name.endsWith('-o') || name.endsWith('-twotone');\n}\n\nexport function isIconDefinition(target: string | IconDefinition): target is IconDefinition {\n  return (\n    typeof target === 'object' &&\n    typeof target.name === 'string' &&\n    (typeof target.theme === 'string' || target.theme === undefined) &&\n    typeof target.icon === 'string'\n  );\n}\n\n/**\n * Get an `IconDefinition` object from abbreviation type, like `account-book-fill`.\n * @param str\n */\nexport function getIconDefinitionFromAbbr(str: string): IconDefinition {\n  const arr = str.split('-');\n  const theme = mapAbbrToTheme(arr.splice(arr.length - 1, 1)[0]);\n  const name = arr.join('-');\n\n  return {\n    name,\n    theme,\n    icon: ''\n  } as IconDefinition;\n}\n\nexport function cloneSVG(svg: SVGElement): SVGElement {\n  return svg.cloneNode(true) as SVGElement;\n}\n\n/**\n * Parse inline SVG string and replace colors with placeholders. For twotone icons only.\n */\nexport function replaceFillColor(raw: string): string {\n  return raw\n    .replace(/['\"]#333['\"]/g, '\"primaryColor\"')\n    .replace(/['\"]#E6E6E6['\"]/g, '\"secondaryColor\"')\n    .replace(/['\"]#D9D9D9['\"]/g, '\"secondaryColor\"')\n    .replace(/['\"]#D8D8D8['\"]/g, '\"secondaryColor\"');\n}\n\n/**\n * Split a name with namespace in it into a tuple like [ name, namespace ].\n */\nexport function getNameAndNamespace(type: string): [string, string] {\n  const split = type.split(':');\n  switch (split.length) {\n    case 1: return [type, ''];\n    case 2: return [split[1], split[0]];\n    default: throw new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The icon type ${type} is not valid!`);\n  }\n}\n\nexport function hasNamespace(type: string): boolean {\n  return getNameAndNamespace(type)[1] !== '';\n}\n","import { error, ANT_ICON_ANGULAR_CONSOLE_PREFIX } from '../utils';\n\nexport function NameSpaceIsNotSpecifyError(): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Type should have a namespace. Try \"namespace:${name}\".`);\n}\n\nexport function IconNotFoundError(icon: string): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}the icon ${icon} does not exist or is not registered.`);\n}\n\nexport function HttpModuleNotImport(): null {\n  error(`you need to import \"HttpClientModule\" to use dynamic importing.`);\n  return null;\n}\n\nexport function UrlNotSafeError(url: string): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}The url \"${url}\" is unsafe.`);\n}\n\nexport function SVGTagNotFoundError(): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}<svg> tag not found.`);\n}\n\nexport function DynamicLoadingTimeoutError(): Error {\n  return new Error(`${ANT_ICON_ANGULAR_CONSOLE_PREFIX}Importing timeout error.`);\n}\n","import { DOCUMENT } from '@angular/common';\nimport { HttpBackend, HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional, Renderer2, RendererFactory2, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of as rxof, Observable, Subject } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  finalize,\n  map,\n  share,\n  take,\n  tap\n} from 'rxjs/operators';\nimport {\n  CachedIconDefinition,\n  IconDefinition,\n  ThemeType,\n  TwoToneColorPalette,\n  TwoToneColorPaletteSetter\n} from '../types';\nimport {\n  cloneSVG,\n  getIconDefinitionFromAbbr,\n  getNameAndNamespace,\n  getSecondaryColor,\n  hasNamespace,\n  isIconDefinition,\n  replaceFillColor,\n  warn,\n  withSuffix,\n  withSuffixAndColor\n} from '../utils';\nimport {\n  DynamicLoadingTimeoutError,\n  HttpModuleNotImport,\n  IconNotFoundError,\n  NameSpaceIsNotSpecifyError,\n  SVGTagNotFoundError,\n  UrlNotSafeError\n} from './icon.error';\n\nconst JSONP_HANDLER_NAME = '__ant_icon_load';\n\n@Injectable()\nexport class IconService {\n  defaultTheme: ThemeType = 'outline';\n\n  set twoToneColor({\n    primaryColor,\n    secondaryColor\n  }: TwoToneColorPaletteSetter) {\n    this._twoToneColorPalette.primaryColor = primaryColor;\n    this._twoToneColorPalette.secondaryColor =\n      secondaryColor || getSecondaryColor(primaryColor);\n  }\n\n  get twoToneColor(): TwoToneColorPaletteSetter {\n    // Make a copy to avoid unexpected changes.\n    return { ...this._twoToneColorPalette } as TwoToneColorPalette;\n  }\n\n  protected _renderer: Renderer2;\n  protected _http: HttpClient;\n\n  /**\n   * All icon definitions would be registered here.\n   */\n  protected readonly _svgDefinitions = new Map<string, IconDefinition>();\n\n  /**\n   * Cache all rendered icons. Icons are identified by name, theme,\n   * and for twotone icons, primary color and secondary color.\n   */\n  protected readonly _svgRenderedDefinitions = new Map<string, CachedIconDefinition>();\n\n  protected _inProgressFetches = new Map<\n    string,\n    Observable<IconDefinition | null>\n  >();\n\n  /**\n   * Url prefix for fetching inline SVG by dynamic importing.\n   */\n  protected _assetsUrlRoot = '';\n\n  protected _twoToneColorPalette: TwoToneColorPalette = {\n    primaryColor: '#333333',\n    secondaryColor: '#E6E6E6'\n  };\n\n  /** A flag indicates whether jsonp loading is enabled. */\n  private _enableJsonpLoading = false;\n  private readonly _jsonpIconLoad$ = new Subject<IconDefinition>();\n\n  constructor(\n    protected _rendererFactory: RendererFactory2,\n    @Optional() protected _handler: HttpBackend,\n    // tslint:disable-next-line:no-any\n    @Optional() @Inject(DOCUMENT) protected _document: any,\n    protected sanitizer: DomSanitizer\n  ) {\n    this._renderer = this._rendererFactory.createRenderer(null, null);\n    if (this._handler) {\n      this._http = new HttpClient(this._handler);\n    }\n  }\n\n  /**\n   * Call this method to switch to jsonp like loading.\n   */\n  useJsonpLoading(): void {\n    if (!this._enableJsonpLoading) {\n      this._enableJsonpLoading = true;\n\n      window[JSONP_HANDLER_NAME] = (icon: IconDefinition) => {\n        this._jsonpIconLoad$.next(icon);\n      };\n    } else {\n      warn('You are already using jsonp loading.');\n    }\n  }\n\n  /**\n   * Change the prefix of the inline svg resources, so they could be deployed elsewhere, like CDN.\n   * @param prefix\n   */\n  changeAssetsSource(prefix: string): void {\n    this._assetsUrlRoot = prefix.endsWith('/') ? prefix : prefix + '/';\n  }\n\n  /**\n   * Add icons provided by ant design.\n   * @param icons\n   */\n  addIcon(...icons: IconDefinition[]): void {\n    icons.forEach(icon => {\n      this._svgDefinitions.set(withSuffix(icon.name, icon.theme), icon);\n    });\n  }\n\n  /**\n   * Register an icon. Namespace is required.\n   * @param type\n   * @param literal\n   */\n  addIconLiteral(type: string, literal: string): void {\n    const [_, namespace] = getNameAndNamespace(type);\n    if (!namespace) {\n      throw NameSpaceIsNotSpecifyError();\n    }\n    this.addIcon({ name: type, icon: literal });\n  }\n\n  /**\n   * Remove all cache.\n   */\n  clear(): void {\n    this._svgDefinitions.clear();\n    this._svgRenderedDefinitions.clear();\n  }\n\n  /**\n   * Get a rendered `SVGElement`.\n   * @param icon\n   * @param twoToneColor\n   */\n  getRenderedContent(\n    icon: IconDefinition | string,\n    twoToneColor?: string\n  ): Observable<SVGElement> {\n    // If `icon` is a `IconDefinition`, go to the next step. If not, try to fetch it from cache.\n    const definitionOrNull: IconDefinition | null = isIconDefinition(icon)\n      ? (icon as IconDefinition)\n      : this._svgDefinitions.get(icon) || null;\n\n    // If `icon` is a `IconDefinition` of successfully fetch, wrap it in an `Observable`.\n    // Otherwise try to fetch it from remote.\n    const $iconDefinition = definitionOrNull\n      ? rxof(definitionOrNull)\n      : this._loadIconDynamically(icon as string);\n\n    // If finally get an `IconDefinition`, render and return it. Otherwise throw an error.\n    return $iconDefinition.pipe(\n      map(i => {\n        if (!i) {\n          throw IconNotFoundError(icon as string);\n        }\n        return this._loadSVGFromCacheOrCreateNew(i, twoToneColor);\n      })\n    );\n  }\n\n  getCachedIcons(): Map<string, IconDefinition> {\n    return this._svgDefinitions;\n  }\n\n  /**\n   * Get raw svg and assemble a `IconDefinition` object.\n   * @param type\n   */\n  protected _loadIconDynamically(\n    type: string\n  ): Observable<IconDefinition | null> {\n    // If developer doesn't provide HTTP module nor enable jsonp loading, just throw an error.\n    if (!this._http && !this._enableJsonpLoading) {\n      return rxof(HttpModuleNotImport());\n    }\n\n    // If multi directive ask for the same icon at the same time,\n    // request should only be fired once.\n    let inProgress = this._inProgressFetches.get(type);\n\n    if (!inProgress) {\n      const [name, namespace] = getNameAndNamespace(type);\n\n      // If the string has a namespace within, create a simple `IconDefinition`.\n      const icon: IconDefinition = namespace\n        ? { name: type, icon: '' }\n        : getIconDefinitionFromAbbr(name);\n\n      const suffix = this._enableJsonpLoading ? '.js' : '.svg';\n      const url =\n        (namespace\n          ? `${this._assetsUrlRoot}assets/${namespace}/${name}`\n          : `${this._assetsUrlRoot}assets/${icon.theme}/${icon.name}`) + suffix;\n\n      const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, url);\n\n      if (!safeUrl) {\n        throw UrlNotSafeError(url);\n      }\n\n      const source = !this._enableJsonpLoading\n        ? this._http\n            .get(safeUrl, { responseType: 'text' })\n            .pipe(map(literal => ({ ...icon, icon: literal })))\n        : this._loadIconDynamicallyWithJsonp(icon, safeUrl);\n\n      inProgress = source.pipe(\n        tap(definition => this.addIcon(definition)),\n        finalize(() => this._inProgressFetches.delete(type)),\n        catchError(() => rxof(null)),\n        share()\n      );\n\n      this._inProgressFetches.set(type, inProgress);\n    }\n\n    return inProgress;\n  }\n\n  protected _loadIconDynamicallyWithJsonp(icon: IconDefinition, url: string): Observable<IconDefinition> {\n    return new Observable<IconDefinition>(subscriber => {\n      const loader = this._document.createElement('script');\n      const timer = setTimeout(() => {\n        clean();\n        subscriber.error(DynamicLoadingTimeoutError());\n      }, 6000);\n\n      loader.src = url;\n\n      function clean(): void {\n        loader.parentNode.removeChild(loader);\n        clearTimeout(timer);\n      }\n\n      this._document.body.appendChild(loader);\n      this._jsonpIconLoad$\n          .pipe(\n              filter(i => i.name === icon.name && i.theme === icon.theme),\n              take(1)\n          )\n          .subscribe(i => {\n            subscriber.next(i);\n            clean();\n          });\n    });\n  }\n\n  /**\n   * Render a new `SVGElement` for a given `IconDefinition`, or make a copy from cache.\n   * @param icon\n   * @param twoToneColor\n   */\n  protected _loadSVGFromCacheOrCreateNew(\n    icon: IconDefinition,\n    twoToneColor?: string\n  ): SVGElement {\n    let svg: SVGElement;\n\n    const pri = twoToneColor || this._twoToneColorPalette.primaryColor;\n    const sec =\n      getSecondaryColor(pri) || this._twoToneColorPalette.secondaryColor;\n    const key =\n      icon.theme === 'twotone'\n        ? withSuffixAndColor(icon.name, icon.theme, pri, sec)\n        : icon.theme === undefined\n        ? icon.name\n        : withSuffix(icon.name, icon.theme);\n\n    // Try to make a copy from cache.\n    const cached = this._svgRenderedDefinitions.get(key);\n\n    if (cached) {\n      svg = cached.icon;\n    } else {\n      svg = this._setSVGAttribute(\n        this._colorizeSVGIcon(\n          // Icons provided by ant design should be refined to remove preset colors.\n          this._createSVGElementFromString(\n            hasNamespace(icon.name) ? icon.icon : replaceFillColor(icon.icon)\n          ),\n          icon.theme === 'twotone',\n          pri,\n          sec\n        )\n      );\n      // Cache it.\n      this._svgRenderedDefinitions.set(key, {\n        ...icon,\n        icon: svg\n      } as CachedIconDefinition);\n    }\n\n    return cloneSVG(svg);\n  }\n\n  protected _createSVGElementFromString(str: string): SVGElement {\n    const div = this._document.createElement('div');\n    div.innerHTML = str;\n    const svg: SVGElement = div.querySelector('svg');\n    if (!svg) {\n      throw SVGTagNotFoundError;\n    }\n    return svg;\n  }\n\n  protected _setSVGAttribute(svg: SVGElement): SVGElement {\n    this._renderer.setAttribute(svg, 'width', '1em');\n    this._renderer.setAttribute(svg, 'height', '1em');\n    return svg;\n  }\n\n  protected _colorizeSVGIcon(\n    svg: SVGElement,\n    twotone: boolean,\n    pri: string,\n    sec: string\n  ): SVGElement {\n    if (twotone) {\n      const children = svg.childNodes;\n      const length = children.length;\n      for (let i = 0; i < length; i++) {\n        const child: HTMLElement = children[i] as HTMLElement;\n        if (child.getAttribute('fill') === 'secondaryColor') {\n          this._renderer.setAttribute(child, 'fill', sec);\n        } else {\n          this._renderer.setAttribute(child, 'fill', pri);\n        }\n      }\n    }\n    this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    return svg;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { IconDefinition, ThemeType } from '../types';\nimport { alreadyHasAThemeSuffix, getNameAndNamespace, isIconDefinition, warn, withSuffix } from '../utils';\nimport { IconService } from './icon.service';\n\n@Directive({\n  selector: '[antIcon]'\n})\nexport class IconDirective implements OnChanges {\n  @Input() type: string | IconDefinition;\n  @Input() theme: ThemeType;\n  @Input() twoToneColor: string;\n\n  constructor(protected _iconService: IconService, protected _elementRef: ElementRef, protected _renderer: Renderer2) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.type || changes.theme || changes.twoToneColor) {\n      this._changeIcon();\n    }\n  }\n\n  /**\n   * Render a new icon in the current element. Remove the icon when `type` is falsy.\n   */\n  protected _changeIcon(): Promise<SVGElement | null> {\n    return new Promise<SVGElement | null>(resolve => {\n      if (!this.type) {\n        this._clearSVGElement();\n        resolve(null);\n      } else {\n        this._iconService.getRenderedContent(\n          this._parseIconType(this.type, this.theme),\n          this.twoToneColor\n        ).subscribe(svg => {\n          this._setSVGElement(svg);\n          resolve(svg);\n        });\n      }\n    });\n  }\n\n  /**\n   * Parse a icon to the standard form, an `IconDefinition` or a string like 'account-book-fill` (with a theme suffixed).\n   * If namespace is specified, ignore theme because it meaningless for users' icons.\n   * @param type\n   * @param theme\n   */\n  protected _parseIconType(type: string | IconDefinition, theme: ThemeType): IconDefinition | string {\n    if (isIconDefinition(type)) {\n      return type;\n    } else {\n      const [ name, namespace ] = getNameAndNamespace(type);\n      if (namespace) {\n        return type;\n      }\n      if (alreadyHasAThemeSuffix(name)) {\n        if (!!theme) {\n          warn(`'type' ${name} already gets a theme inside so 'theme' ${theme} would be ignored`);\n        }\n        return name;\n      } else {\n        return withSuffix(name, theme || this._iconService.defaultTheme);\n      }\n    }\n  }\n\n  protected _setSVGElement(svg: SVGElement): void {\n    this._clearSVGElement();\n    this._renderer.appendChild(this._elementRef.nativeElement, svg);\n  }\n\n  protected _clearSVGElement(): void {\n    const el: HTMLElement = this._elementRef.nativeElement;\n    const children = el.childNodes;\n    const length = children.length;\n    for (let i = length - 1; i >= 0; i--) {\n      const child = children[ i ] as HTMLElement;\n      if (child.tagName.toLowerCase() === 'svg') {\n        this._renderer.removeChild(el, child);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconDirective } from './icon.directive';\nimport { IconService } from './icon.service';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [IconDirective],\n  declarations: [IconDirective],\n  providers: [IconService]\n})\nexport class IconModule { }\n","\nimport { Manifest } from './types';\n\nexport const manifest: Manifest = {\n  fill: [\n    'alert', 'account-book', 'alipay-circle', 'alipay-square', 'amazon-circle', 'aliwangwang', 'amazon-square', 'android', 'api', 'apple', 'appstore', 'audio', 'backward', 'bank', 'behance-circle', 'book', 'box-plot', 'bell', 'behance-square', 'build', 'bug', 'bulb', 'calculator', 'camera', 'calendar', 'car', 'caret-left', 'caret-down', 'caret-up', 'caret-right', 'carry-out', 'check-circle', 'chrome', 'clock-circle', 'check-square', 'close-circle', 'ci-circle', 'code-sandbox-circle', 'close-square', 'cloud', 'code-sandbox-square', 'codepen-circle', 'code', 'contacts', 'compass', 'codepen-square', 'control', 'container', 'copy', 'credit-card', 'customer-service', 'copyright-circle', 'database', 'crown', 'dashboard', 'diff', 'delete', 'dingtalk-circle', 'dingtalk-square', 'dislike', 'dollar-circle', 'down-square', 'down-circle', 'dribbble-circle', 'dribbble-square', 'dropbox-circle', 'edit', 'dropbox-square', 'euro-circle', 'exclamation-circle', 'environment', 'eye-invisible', 'experiment', 'facebook', 'eye', 'fast-backward', 'fast-forward', 'file-excel', 'file-add', 'file-exclamation', 'file-pdf', 'file-image', 'file-markdown', 'file-ppt', 'file-text', 'file-unknown', 'file', 'file-zip', 'file-word', 'filter', 'fire', 'flag', 'folder-add', 'format-painter', 'folder', 'folder-open', 'forward', 'fund', 'frown', 'funnel-plot', 'github', 'gitlab', 'gift', 'gold', 'golden', 'google-circle', 'google-plus-circle', 'google-plus-square', 'google-square', 'hdd', 'heart', 'highlight', 'home', 'hourglass', 'html5', 'idcard', 'ie-circle', 'info-circle', 'ie-square', 'instagram', 'insurance', 'layout', 'interaction', 'linkedin', 'left-circle', 'left-square', 'like', 'lock', 'mac-command', 'mail', 'medicine-box', 'medium-circle', 'meh', 'message', 'medium-square', 'minus-circle', 'mobile', 'money-collect', 'minus-square', 'notification', 'pause-circle', 'pay-circle', 'phone', 'picture', 'pie-chart', 'plus-circle', 'play-circle', 'play-square', 'plus-square', 'pound-circle', 'printer', 'project', 'property-safety', 'profile', 'pushpin', 'qq-circle', 'qq-square', 'question-circle', 'read', 'red-envelope', 'reddit-circle', 'reconciliation', 'reddit-square', 'right-circle', 'right-square', 'robot', 'rest', 'safety-certificate', 'rocket', 'save', 'security-scan', 'schedule', 'sketch-circle', 'signal', 'setting', 'shop', 'shopping', 'skin', 'sketch-square', 'slack-circle', 'skype', 'smile', 'slack-square', 'sliders', 'sound', 'snippets', 'star', 'step-forward', 'stop', 'tag', 'step-backward', 'switcher', 'tablet', 'tags', 'thunderbolt', 'taobao-square', 'trademark-circle', 'taobao-circle', 'tool', 'twitter-circle', 'trophy', 'twitter-square', 'up-square', 'up-circle', 'warning', 'usb', 'unlock', 'wechat', 'video-camera', 'weibo-circle', 'windows', 'wallet', 'weibo-square', 'yuque', 'youtube', 'zhihu-square', 'yahoo', 'zhihu-circle'\n  ],\n  outline: [\n    'alert', 'account-book', 'aim', 'align-center', 'align-right', 'align-left', 'alibaba', 'alipay-circle', 'alipay', 'aliwangwang', 'aliyun', 'ant-design', 'android', 'apartment', 'ant-cloud', 'amazon', 'api', 'appstore-add', 'appstore', 'apple', 'area-chart', 'arrow-right', 'arrow-down', 'arrow-up', 'arrow-left', 'arrows-alt', 'audio-muted', 'audio', 'backward', 'audit', 'bank', 'barcode', 'bars', 'bar-chart', 'behance', 'behance-square', 'bg-colors', 'bell', 'block', 'bold', 'book', 'border-bottom', 'border-horizontal', 'border-left', 'border-outer', 'border-inner', 'border-right', 'border-top', 'border-verticle', 'border', 'box-plot', 'borderless-table', 'bug', 'branches', 'build', 'bulb', 'calculator', 'calendar', 'camera', 'caret-down', 'car', 'caret-left', 'caret-right', 'caret-up', 'carry-out', 'check-circle', 'check', 'check-square', 'ci-circle', 'ci', 'chrome', 'clock-circle', 'clear', 'close-circle', 'close-square', 'close', 'cloud-server', 'cloud-sync', 'cloud-upload', 'cloud-download', 'cluster', 'cloud', 'code-sandbox', 'code', 'codepen-circle', 'codepen', 'column-height', 'coffee', 'comment', 'compass', 'column-width', 'compress', 'console-sql', 'contacts', 'container', 'control', 'copy', 'copyright-circle', 'copyright', 'credit-card', 'dash', 'customer-service', 'crown', 'dashboard', 'database', 'delete-column', 'delete-row', 'delete', 'deployment-unit', 'desktop', 'delivered-procedure', 'dingtalk', 'diff', 'dingding', 'disconnect', 'dislike', 'dollar-circle', 'dollar', 'dot-chart', 'double-left', 'double-right', 'down-square', 'down', 'down-circle', 'download', 'dribbble', 'drag', 'dribbble-square', 'dropbox', 'edit', 'ellipsis', 'enter', 'euro-circle', 'environment', 'euro', 'exclamation-circle', 'expand-alt', 'exclamation', 'exception', 'expand', 'experiment', 'export', 'eye-invisible', 'eye', 'facebook', 'fast-backward', 'fall', 'fast-forward', 'field-binary', 'field-time', 'field-number', 'field-string', 'file-add', 'file-done', 'file-excel', 'file-exclamation', 'file-gif', 'file-image', 'file-jpg', 'file-ppt', 'file-markdown', 'file-pdf', 'file-protect', 'file-search', 'file-text', 'file-sync', 'file-unknown', 'file-word', 'file-zip', 'filter', 'fire', 'file', 'folder-add', 'folder-open', 'flag', 'font-colors', 'folder', 'font-size', 'folder-view', 'forward', 'fork', 'form', 'format-painter', 'fullscreen-exit', 'fund-projection-screen', 'frown', 'fullscreen', 'fund-view', 'function', 'fund', 'funnel-plot', 'gif', 'gateway', 'github', 'gift', 'gold', 'google-plus', 'google', 'gitlab', 'global', 'hdd', 'heat-map', 'group', 'highlight', 'heart', 'history', 'home', 'ie', 'hourglass', 'idcard', 'import', 'inbox', 'html5', 'info', 'info-circle', 'insert-row-right', 'insert-row-above', 'issues-close', 'instagram', 'insert-row-below', 'left-square', 'layout', 'insurance', 'key', 'laptop', 'insert-row-left', 'left', 'italic', 'left-circle', 'line-height', 'like', 'interaction', 'linkedin', 'loading', 'link', 'loading-3-quarters', 'login', 'line-chart', 'line', 'lock', 'medium-workmark', 'logout', 'mail', 'mac-command', 'man', 'medicine-box', 'menu-unfold', 'medium', 'menu-fold', 'menu', 'meh', 'minus-circle', 'minus', 'message', 'minus-square', 'merge-cells', 'more', 'node-collapse', 'node-index', 'mobile', 'one-to-one', 'node-expand', 'notification', 'money-collect', 'number', 'monitor', 'pause', 'pause-circle', 'pay-circle', 'ordered-list', 'partition', 'percentage', 'paper-clip', 'phone', 'pic-center', 'pic-left', 'play-circle', 'picture', 'pic-right', 'plus-circle', 'play-square', 'pie-chart', 'pound-circle', 'printer', 'pound', 'plus', 'project', 'poweroff', 'profile', 'pull-request', 'qrcode', 'plus-square', 'radius-bottomright', 'pushpin', 'radius-setting', 'radar-chart', 'qq', 'property-safety', 'radius-upleft', 'question-circle', 'reconciliation', 'radius-bottomleft', 'read', 'redo', 'question', 'radius-upright', 'rest', 'red-envelope', 'right', 'reload', 'reddit', 'retweet', 'right-square', 'rise', 'robot', 'right-circle', 'rollback', 'safety-certificate', 'rocket', 'safety', 'save', 'rotate-right', 'rotate-left', 'scan', 'schedule', 'search', 'share-alt', 'scissor', 'select', 'security-scan', 'shop', 'shrink', 'send', 'shake', 'setting', 'skin', 'shopping', 'sisternode', 'slack-square', 'shopping-cart', 'smile', 'skype', 'small-dash', 'slack', 'sketch', 'sliders', 'solution', 'sort-descending', 'step-backward', 'snippets', 'star', 'split-cells', 'step-forward', 'sort-ascending', 'stock', 'sound', 'stop', 'subnode', 'swap-left', 'table', 'strikethrough', 'swap', 'switcher', 'tablet', 'tags', 'swap-right', 'taobao', 'taobao-circle', 'team', 'sync', 'tool', 'tag', 'to-top', 'trademark', 'trademark-circle', 'twitter', 'thunderbolt', 'trophy', 'translation', 'transaction', 'undo', 'unordered-list', 'unlock', 'underline', 'up-circle', 'upload', 'up-square', 'up', 'user-switch', 'user-delete', 'ungroup', 'verified', 'user', 'usb', 'usergroup-delete', 'usergroup-add', 'vertical-left', 'user-add', 'vertical-align-middle', 'vertical-align-top', 'video-camera-add', 'vertical-align-bottom', 'wallet', 'vertical-right', 'video-camera', 'weibo-circle', 'wechat', 'warning', 'weibo', 'weibo-square', 'woman', 'whats-app', 'windows', 'yuque', 'yahoo', 'youtube', 'zoom-out', 'wifi', 'zoom-in', 'zhihu'\n  ],\n  twotone: [\n    'account-book', 'api', 'alert', 'appstore', 'bank', 'bell', 'audio', 'book', 'build', 'box-plot', 'bulb', 'bug', 'calculator', 'calendar', 'carry-out', 'check-circle', 'check-square', 'camera', 'car', 'ci-circle', 'ci', 'clock-circle', 'close-circle', 'code', 'close-square', 'cloud', 'contacts', 'container', 'compass', 'copy', 'control', 'copyright', 'copyright-circle', 'credit-card', 'crown', 'customer-service', 'dashboard', 'database', 'delete', 'diff', 'dollar-circle', 'dislike', 'dollar', 'down-circle', 'edit', 'environment', 'euro', 'down-square', 'euro-circle', 'experiment', 'eye-invisible', 'exclamation-circle', 'eye', 'file-add', 'file-excel', 'file-exclamation', 'file-ppt', 'file-image', 'file-markdown', 'file-pdf', 'file-text', 'file-unknown', 'file-zip', 'file-word', 'filter', 'file', 'fire', 'flag', 'folder-add', 'fund', 'folder-open', 'folder', 'frown', 'gift', 'gold', 'funnel-plot', 'hdd', 'heart', 'home', 'highlight', 'html5', 'hourglass', 'idcard', 'info-circle', 'interaction', 'layout', 'insurance', 'like', 'left-circle', 'left-square', 'mail', 'lock', 'medicine-box', 'meh', 'minus-circle', 'message', 'money-collect', 'minus-square', 'mobile', 'notification', 'pause-circle', 'phone', 'pie-chart', 'picture', 'play-circle', 'play-square', 'plus-circle', 'printer', 'pound-circle', 'plus-square', 'profile', 'project', 'property-safety', 'reconciliation', 'red-envelope', 'pushpin', 'rest', 'question-circle', 'right-circle', 'right-square', 'safety-certificate', 'save', 'rocket', 'schedule', 'setting', 'security-scan', 'shop', 'shopping', 'sliders', 'skin', 'smile', 'snippets', 'sound', 'star', 'tablet', 'stop', 'switcher', 'tag', 'tags', 'trademark-circle', 'unlock', 'tool', 'thunderbolt', 'trophy', 'up-circle', 'up-square', 'usb', 'warning', 'video-camera', 'wallet'\n  ]\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}