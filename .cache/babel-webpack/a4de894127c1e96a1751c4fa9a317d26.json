{"ast":null,"code":"import _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, ChangeDetectorRef, Renderer2, ContentChild, Input, NgModule } from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { NzIconDirective, NzIconModule } from 'ng-zorro-antd/icon';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith, filter } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { ɵNzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\n/**\n * @fileoverview added by tsickle\n * Generated from: button.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng-zorro-antd/icon';\nimport * as ɵngcc4 from 'ng-zorro-antd/core/transition-patch';\nvar _c0 = [\"nz-button\", \"\"];\n\nfunction NzButtonComponent_i_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 1);\n  }\n}\n\nvar _c1 = [\"*\"];\nvar NZ_CONFIG_COMPONENT_NAME = 'button';\n\nvar NzButtonComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} cdr\n   * @param {?} renderer\n   * @param {?} nzConfigService\n   */\n  function NzButtonComponent(elementRef, cdr, renderer, nzConfigService) {\n    var _this = this;\n\n    _classCallCheck(this, NzButtonComponent);\n\n    this.elementRef = elementRef;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.nzConfigService = nzConfigService;\n    this.nzBlock = false;\n    this.nzGhost = false;\n    this.nzSearch = false;\n    this.nzLoading = false;\n    this.nzDanger = false;\n    this.disabled = false;\n    this.tabIndex = null;\n    this.nzType = null;\n    this.nzShape = null;\n    this.nzSize = 'default';\n    this.destroy$ = new Subject();\n    this.loading$ = new Subject();\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).pipe(takeUntil(this.destroy$)).subscribe(\n    /**\n    * @return {?}\n    */\n    function () {\n      _this.cdr.markForCheck();\n    });\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _createClass(NzButtonComponent, [{\n    key: \"haltDisabledEvents\",\n    value: function haltDisabledEvents(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} renderer\n     * @return {?}\n     */\n\n  }, {\n    key: \"insertSpan\",\n    value: function insertSpan(nodes, renderer) {\n      nodes.forEach(\n      /**\n      * @param {?} node\n      * @return {?}\n      */\n      function (node) {\n        if (node.nodeName === '#text') {\n          /** @type {?} */\n          var span = renderer.createElement('span');\n          /** @type {?} */\n\n          var parent = renderer.parentNode(node);\n          renderer.insertBefore(parent, span, node);\n          renderer.appendChild(span, node);\n        }\n      });\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     * @return {?}\n     */\n\n  }, {\n    key: \"assertIconOnly\",\n    value: function assertIconOnly(element, renderer) {\n      /** @type {?} */\n      var listOfNode = Array.from(element.childNodes);\n      /** @type {?} */\n\n      var iconCount = listOfNode.filter(\n      /**\n      * @param {?} node\n      * @return {?}\n      */\n      function (node) {\n        return node.nodeName === 'I';\n      }).length;\n      /** @type {?} */\n\n      var noText = listOfNode.every(\n      /**\n      * @param {?} node\n      * @return {?}\n      */\n      function (node) {\n        return node.nodeName !== '#text';\n      });\n      /** @type {?} */\n\n      var noSpan = listOfNode.every(\n      /**\n      * @param {?} node\n      * @return {?}\n      */\n      function (node) {\n        return node.nodeName !== 'SPAN';\n      });\n      /** @type {?} */\n\n      var isIconOnly = noSpan && noText && iconCount >= 1;\n\n      if (isIconOnly) {\n        renderer.addClass(element, 'ant-btn-icon-only');\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzLoading = changes.nzLoading;\n\n      if (nzLoading) {\n        this.loading$.next(this.nzLoading);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n      this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this.loading$.pipe(startWith(this.nzLoading), filter(\n      /**\n      * @return {?}\n      */\n      function () {\n        return !!_this2.nzIconDirectiveElement;\n      }), takeUntil(this.destroy$)).subscribe(\n      /**\n      * @param {?} loading\n      * @return {?}\n      */\n      function (loading) {\n        /** @type {?} */\n        var nativeElement = _this2.nzIconDirectiveElement.nativeElement;\n\n        if (loading) {\n          _this2.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          _this2.renderer.removeStyle(nativeElement, 'display');\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzButtonComponent;\n}();\n\nNzButtonComponent.ɵfac = function NzButtonComponent_Factory(t) {\n  return new (t || NzButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService));\n};\n\nNzButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzButtonComponent,\n  selectors: [[\"button\", \"nz-button\", \"\"], [\"a\", \"nz-button\", \"\"]],\n  contentQueries: function NzButtonComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NzIconDirective, true, ElementRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nzIconDirectiveElement = _t.first);\n    }\n  },\n  hostVars: 30,\n  hostBindings: function NzButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NzButtonComponent_click_HostBindingHandler($event) {\n        return ctx.haltDisabledEvents($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex === null ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"ant-btn\", true)(\"ant-btn-primary\", ctx.nzType === \"primary\")(\"ant-btn-dashed\", ctx.nzType === \"dashed\")(\"ant-btn-link\", ctx.nzType === \"link\")(\"ant-btn-danger\", ctx.nzType === \"danger\")(\"ant-btn-circle\", ctx.nzShape === \"circle\")(\"ant-btn-round\", ctx.nzShape === \"round\")(\"ant-btn-lg\", ctx.nzSize === \"large\")(\"ant-btn-sm\", ctx.nzSize === \"small\")(\"ant-btn-dangerous\", ctx.nzDanger)(\"ant-btn-loading\", ctx.nzLoading)(\"ant-btn-background-ghost\", ctx.nzGhost)(\"ant-btn-block\", ctx.nzBlock)(\"ant-input-search-button\", ctx.nzSearch);\n    }\n  },\n  inputs: {\n    nzBlock: \"nzBlock\",\n    nzGhost: \"nzGhost\",\n    nzSearch: \"nzSearch\",\n    nzLoading: \"nzLoading\",\n    nzDanger: \"nzDanger\",\n    disabled: \"disabled\",\n    tabIndex: \"tabIndex\",\n    nzType: \"nzType\",\n    nzShape: \"nzShape\",\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzButton\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 1,\n  consts: [[\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"]],\n  template: function NzButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NzButtonComponent_i_0_Template, 1, 0, \"i\", 0);\n      ɵngcc0.ɵɵprojection(1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzLoading);\n    }\n  },\n  directives: [ɵngcc2.NgIf, ɵngcc3.NzIconDirective, ɵngcc4.ɵNzTransitionPatchDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzButtonComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NzConfigService\n  }];\n};\n\nNzButtonComponent.propDecorators = {\n  nzIconDirectiveElement: [{\n    type: ContentChild,\n    args: [NzIconDirective, {\n      read: ElementRef\n    }]\n  }],\n  nzBlock: [{\n    type: Input\n  }],\n  nzGhost: [{\n    type: Input\n  }],\n  nzSearch: [{\n    type: Input\n  }],\n  nzLoading: [{\n    type: Input\n  }],\n  nzDanger: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  nzType: [{\n    type: Input\n  }],\n  nzShape: [{\n    type: Input\n  }],\n  nzSize: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzBlock\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzGhost\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzSearch\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzLoading\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"nzDanger\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Boolean)], NzButtonComponent.prototype, \"disabled\", void 0);\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), __metadata(\"design:type\", String)], NzButtonComponent.prototype, \"nzSize\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'button[nz-button], a[nz-button]',\n      exportAs: 'nzButton',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <i nz-icon nzType=\\\"loading\\\" *ngIf=\\\"nzLoading\\\"></i>\\n    <ng-content></ng-content>\\n  \",\n      host: {\n        '[class.ant-btn]': \"true\",\n        '[class.ant-btn-primary]': \"nzType === 'primary'\",\n        '[class.ant-btn-dashed]': \"nzType === 'dashed'\",\n        '[class.ant-btn-link]': \"nzType === 'link'\",\n        '[class.ant-btn-danger]': \"nzType === 'danger'\",\n        '[class.ant-btn-circle]': \"nzShape === 'circle'\",\n        '[class.ant-btn-round]': \"nzShape === 'round'\",\n        '[class.ant-btn-lg]': \"nzSize === 'large'\",\n        '[class.ant-btn-sm]': \"nzSize === 'small'\",\n        '[class.ant-btn-dangerous]': \"nzDanger\",\n        '[class.ant-btn-loading]': \"nzLoading\",\n        '[class.ant-btn-background-ghost]': \"nzGhost\",\n        '[class.ant-btn-block]': \"nzBlock\",\n        '[class.ant-input-search-button]': \"nzSearch\",\n        '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'haltDisabledEvents($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.NzConfigService\n    }];\n  }, {\n    nzBlock: [{\n      type: Input\n    }],\n    nzGhost: [{\n      type: Input\n    }],\n    nzSearch: [{\n      type: Input\n    }],\n    nzLoading: [{\n      type: Input\n    }],\n    nzDanger: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    nzType: [{\n      type: Input\n    }],\n    nzShape: [{\n      type: Input\n    }],\n    nzSize: [{\n      type: Input\n    }],\n    nzIconDirectiveElement: [{\n      type: ContentChild,\n      args: [NzIconDirective, {\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzButtonComponent.ngAcceptInputType_nzBlock;\n  /** @type {?} */\n\n  NzButtonComponent.ngAcceptInputType_nzGhost;\n  /** @type {?} */\n\n  NzButtonComponent.ngAcceptInputType_nzSearch;\n  /** @type {?} */\n\n  NzButtonComponent.ngAcceptInputType_nzLoading;\n  /** @type {?} */\n\n  NzButtonComponent.ngAcceptInputType_nzDanger;\n  /** @type {?} */\n\n  NzButtonComponent.ngAcceptInputType_disabled;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzIconDirectiveElement;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzBlock;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzGhost;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzSearch;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzLoading;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzDanger;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.disabled;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.tabIndex;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzType;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzShape;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzSize;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzButtonComponent.prototype.destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzButtonComponent.prototype.loading$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzButtonComponent.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzButtonComponent.prototype.cdr;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzButtonComponent.prototype.renderer;\n  /** @type {?} */\n\n  NzButtonComponent.prototype.nzConfigService;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: button-group.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzButtonGroupComponent = /*#__PURE__*/_createClass(function NzButtonGroupComponent() {\n  _classCallCheck(this, NzButtonGroupComponent);\n\n  this.nzSize = 'default';\n});\n\nNzButtonGroupComponent.ɵfac = function NzButtonGroupComponent_Factory(t) {\n  return new (t || NzButtonGroupComponent)();\n};\n\nNzButtonGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzButtonGroupComponent,\n  selectors: [[\"nz-button-group\"]],\n  hostVars: 6,\n  hostBindings: function NzButtonGroupComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-btn-group\", true)(\"ant-btn-group-lg\", ctx.nzSize === \"large\")(\"ant-btn-group-sm\", ctx.nzSize === \"small\");\n    }\n  },\n  inputs: {\n    nzSize: \"nzSize\"\n  },\n  exportAs: [\"nzButtonGroup\"],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function NzButtonGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\nNzButtonGroupComponent.propDecorators = {\n  nzSize: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzButtonGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-button-group',\n      exportAs: 'nzButtonGroup',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.ant-btn-group]': \"true\",\n        '[class.ant-btn-group-lg]': \"nzSize === 'large'\",\n        '[class.ant-btn-group-sm]': \"nzSize === 'small'\"\n      },\n      preserveWhitespaces: false,\n      template: \" <ng-content></ng-content> \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    nzSize: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzButtonGroupComponent.prototype.nzSize;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: button.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzButtonModule = /*#__PURE__*/_createClass(function NzButtonModule() {\n  _classCallCheck(this, NzButtonModule);\n});\n\nNzButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzButtonModule\n});\nNzButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzButtonModule_Factory(t) {\n    return new (t || NzButtonModule)();\n  },\n  imports: [[CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule], ɵNzTransitionPatchModule, NzWaveModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzButtonModule, {\n    declarations: function declarations() {\n      return [NzButtonComponent, NzButtonGroupComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule];\n    },\n    exports: function exports() {\n      return [NzButtonComponent, NzButtonGroupComponent, ɵNzTransitionPatchModule, NzWaveModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzButtonComponent, NzButtonGroupComponent],\n      exports: [NzButtonComponent, NzButtonGroupComponent, ɵNzTransitionPatchModule, NzWaveModule],\n      imports: [CommonModule, NzWaveModule, NzIconModule, ɵNzTransitionPatchModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzButtonComponent, NzButtonGroupComponent, NzButtonModule };","map":{"version":3,"sources":["ng-zorro-antd/button/button.component.ts","ng-zorro-antd/button/button-group.component.ts","ng-zorro-antd/button/button.module.ts"],"names":["NzTransitionPatchModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCM,wBAAwB,GAAG,Q;;IAgCpB,iB;AAAoB;AAAQ;AAA6B;AAAsB;AACvE;AAChB;AAiDH,6BACU,UADV,EAEU,GAFV,EAGU,QAHV,EAIS,eAJT,EAIyC;AAAA;;AAAA;;AAH/B,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,GAAA,GAAA,GAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACD,SAAA,eAAA,GAAA,eAAA;AA9CgB,SAAA,OAAA,GAAmB,KAAnB;AACA,SAAA,OAAA,GAAmB,KAAnB;AACA,SAAA,QAAA,GAAoB,KAApB;AACA,SAAA,SAAA,GAAqB,KAArB;AACA,SAAA,QAAA,GAAoB,KAApB;AACA,SAAA,QAAA,GAAoB,KAApB;AAChB,SAAA,QAAA,GAAmC,IAAnC;AACA,SAAA,MAAA,GAAuB,IAAvB;AACA,SAAA,OAAA,GAAyB,IAAzB;AACsC,SAAA,MAAA,GAAuB,SAAvB;AACvC,SAAA,QAAA,GAAW,IAAI,OAAJ,EAAX;AACA,SAAA,QAAA,GAAW,IAAI,OAAJ,EAAX;AAqCN,SAAK,eAAL,CACG,gCADH,CACoC,wBADpC,EAEG,IAFH,CAEQ,SAAS,CAAC,KAAK,QAAN,CAFjB,EAGG,SAHH;AAGY;AAAM;AACF;AADH,gBAAA;AACT,MAAA,KAAI,CAAC,GAAL,CAAS,YAAT;AACD,KALH;AAMD;AACH;AACO;AAAwB;AAC3B;;;;;WA5CF,4BAAmB,KAAnB,EAA+B;AAC7B,UAAI,KAAK,QAAT,EAAmB;AACjB,QAAA,KAAK,CAAC,cAAN;AACA,QAAA,KAAK,CAAC,wBAAN;AACD;AACF;AACH;AACO;AAAwB;AAA2B;AACxC;;;;WADhB,oBAAW,KAAX,EAA4B,QAA5B,EAA+C;AAC7C,MAAA,KAAK,CAAC,OAAN;AAAa;AAAM;AACD;AAChB;AAFY,gBAAA,IAAI,EAAA;AAChB,YAAI,IAAI,CAAC,QAAL,KAAkB,OAAtB,EAA+B;AACrC;AAAiC,cAAnB,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAY;AACjC;;AAAiC,cAAnB,MAAM,GAAG,QAAQ,CAAC,UAAT,CAAoB,IAApB,CAAU;AACzB,UAAA,QAAQ,CAAC,YAAT,CAAsB,MAAtB,EAA8B,IAA9B,EAAoC,IAApC;AACA,UAAA,QAAQ,CAAC,WAAT,CAAqB,IAArB,EAA2B,IAA3B;AACD;AACF,OAPD;AAQD;AACH;AACO;AAA0B;AAA2B;AACvD;;;;WADH,wBAAe,OAAf,EAA2C,QAA3C,EAA8D;AAAI;AACjD,UAAT,UAAU,GAAG,KAAK,CAAC,IAAN,CAAW,OAAO,CAAC,UAAnB,CAAJ;AACnB;;AAAyB,UAAf,SAAS,GAAG,UAAU,CAAC,MAAX;AAAiB;AAAM;AAA2B;AACxD;AADwB,gBAAA,IAAI;AAAA,eAAI,IAAI,CAAC,QAAL,KAAkB,GAAtB;AAAA,OAAtB,EAAiD,MAA9C;AACzB;;AAAyB,UAAf,MAAM,GAAG,UAAU,CAAC,KAAX;AAAgB;AAAM;AAA2B;AACjD;AADiB,gBAAA,IAAI;AAAA,eAAI,IAAI,CAAC,QAAL,KAAkB,OAAtB;AAAA,OAArB,CAAM;AACzB;;AAAyB,UAAf,MAAM,GAAG,UAAU,CAAC,KAAX;AAAgB;AAAM;AAA2B;AAChD;AADgB,gBAAA,IAAI;AAAA,eAAI,IAAI,CAAC,QAAL,KAAkB,MAAtB;AAAA,OAArB,CAAM;AACzB;;AAAyB,UAAf,UAAU,GAAG,MAAM,IAAI,MAAV,IAAoB,SAAS,IAAI,CAA/B;;AACrB,UAAI,UAAJ,EAAgB;AACd,QAAA,QAAQ,CAAC,QAAT,CAAkB,OAAlB,EAA2B,mBAA3B;AACD;AACF;AACH;AACO;AACW;AACjB;;;;WAYC,qBAAY,OAAZ,EAAkC;AAAI,UAC5B,SAD4B,GACd,OADc,CAC5B,SAD4B;;AAEpC,UAAI,SAAJ,EAAe;AACb,aAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,SAAxB;AACD;AACF;AACH;AACO;AAAmB;;;;WAAxB,2BAAe;AACb,WAAK,cAAL,CAAoB,KAAK,UAAL,CAAgB,aAApC,EAAmD,KAAK,QAAxD;AACA,WAAK,UAAL,CAAgB,KAAK,UAAL,CAAgB,aAAhB,CAA8B,UAA9C,EAA0D,KAAK,QAA/D;AACD;AACH;AACO;AAAmB;;;;WAAxB,8BAAkB;AAAA;;AAChB,WAAK,QAAL,CACG,IADH,CAEI,SAAS,CAAC,KAAK,SAAN,CAFb,EAGI,MAAM;AAAA;AAAM;AAAuB;AAA5B;AAAA,eAAM,CAAC,CAAC,MAAI,CAAC,sBAAb;AAAA,OAAD,CAHV,EAII,SAAS,CAAC,KAAK,QAAN,CAJb,EAMG,SANH;AAMY;AAAM;AACA;AAAuB;AAD5B,gBAAA,OAAO,EAAA;AACxB;AAA6B,YAAf,aAAa,GAAG,MAAI,CAAC,sBAAL,CAA4B,aAA7B;;AACrB,YAAI,OAAJ,EAAa;AACX,UAAA,MAAI,CAAC,QAAL,CAAc,QAAd,CAAuB,aAAvB,EAAsC,SAAtC,EAAiD,MAAjD;AACD,SAFD,MAEO;AACL,UAAA,MAAI,CAAC,QAAL,CAAc,WAAd,CAA0B,aAA1B,EAAyC,SAAzC;AACD;AACF,OAbH;AAcD;AACH;AACO;AACL;;;;WADA,uBAAW;AACT,WAAK,QAAL,CAAc,IAAd;AACA,WAAK,QAAL,CAAc,QAAd;AACD;;;;;;kCA/HF,yB,CAAS,C,EAAC;AAAA,SAAA,KAAA,CAAA,IACT,iBADS,EACC,MAAA,CAAA,iBAAA,CAAiC,MAAA,CAAA,UAAjC,CADD,EAET,MAAU,CAAA,iBAAV,CAAoB,MAAA,CAAA,iBAApB,CAFS,EAGT,MAAqB,CAAA,iBAArB,CAA0B,MAC1B,CAAA,SADA,CAHS,EAIQ,MAAA,CAAA,iBAAA,CAAwB,MAAM,CAAA,eAA9B,CAJR,CAAA;AAKT,C;;AAAa,iBAAE,CAAA,IAAF,GAAmB,MAAK,CAAA,iBAAL,CAChC;AAAA,EAAA,IAAQ,EAAE,iBAAV;AAAU,EAAA,SAAA,EAAA,CAAA,CAAA,QAAA,EAAA,WAAA,EAAA,EAAA,CAAA,EAAA,CAAA,GAAA,EAAA,WAAA,EAAA,EAAA,CAAA,CAAV;AAAU,EAAA,cAGT,EAAA,SACD,gCADC,CAEC,EAFD,EAEC,GAFD,EAEC,QAFD,EAE0B;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AACzB,MAAA,MAAA,CAAA,cAAA,CAAyB,QAAzB,EAA2B,eAA3B,EAAiD,IAAjD,EAAiD,UAAjD;AACA;;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AAA0B,UAAA,EAAA;;AAAqB,MAAA,MAAA,CAAA,cAAA,CAAA,EAAA,GAC/C,MAAA,CAAA,WAAA,EAD+C,MACvB,GAAA,CAAA,sBAAA,GAAmB,EAAA,CAAA,KADI;;GAPjD;YAS0B,EAT1B;AAS4B,EAAA,YAAA,EAAA,SAAqB,8BAArB,CAC1B,EAD0B,EAC1B,GAD0B,EAC1B;AAAA,QAA0B,EAAA,GAAA,CAA1B,EAA0B;AAAsB,MAAA,MAAA,CAAA,UAAA,CAAA,OAAA,EAChD,SAAA,0CAAA,CAA8C,MAA9C,EAA8C;AAAA,eAC9C,GAAA,CAAA,kBAAA,CAAsB,MAAtB,CAD8C;AACxB,OAF0B;AAEN;;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AAC1C,MAAA,MAAA,CAAA,WAAA,CAAoB,UAApB,EAAsB,GAAA,CAAA,QAAA,GAAoB,CAAA,CAApB,GAAoB,GAAA,CAAA,QAAA,KAC1C,IAD0C,GAC1C,IAD0C,GAC1C,GAAA,CAAA,QADA,EAC6B,UAD7B,EACuC,GAAA,CAAA,QAAA,IACvC,IAFA;aAEyB,W,CAAE,S,EAAW,I,EAAA,iB,EACtC,GAAA,CAAA,MAAA,KAAA,S,EAAoC,gB,EAAS,GAAA,CAAA,MAAA,KAC7C,Q,EAAA,c,EAAyB,GAAA,CAAA,MAAA,KAAS,M,EAAA,gB,EAClC,GAAA,CAAA,MAAA,KAAA,Q,EAAmC,gB,EAAU,GAAA,CAAA,OAAA,KAC7C,Q,EAAA,e,EAAmB,GAAA,CAAA,OAAA,KAAA,O,EAAA,Y,EAAA,GAAuD,CAAA,MAAvD,KAAuD,O,EAC1E,Y,EAAA,GAAiB,CAAA,MAAjB,KAAmB,O,EAAkB,mB,EACrC,GAAA,CAAA,Q,EAAW,iB,EAAA,GAAA,CAAA,S,EAA4B,0B,EAE1C,GAAA,CAAA,O,EAAA,e,EAAA,GAAA,CAAA,O,EAAA,yB,EAAA,GAAA,CAAA,Q;;GAvBC;;;;;;;;;;;;GAAA;wBAAA;yCAAA;YAAA;yBAAA;UAAA;SAAA;iGAAA;;;;;;;;;;;GAAA;uFAAA;kBAAA;mBAwBE;AAxBF,CADgC,CAAnB;AAyBV;;AAAmB,iBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAA2C;AAAA,IAAA,IAAA,EApDjE;AAoDiE,GAA3C,EAnDtB;AAAA,IAAA,IAAA,EAJA;AAIA,GAmDsB,EAtDtB;AAAA,IAAA,IAAA,EAMA;AANA,GAsDsB,EA/CtB;AAAA,IAAA,IAAA,EAGO;AAHP,GA+CsB,CAAA;AAAA,CAAA;;AA5CM,iBAAA,CAAA,cAAA,GAAA;AAAqC,EAAA,sBAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAoDhE,YApDgE;AAoDpD,IAAA,IAAA,EAAA,CAAC,eAAD,EAAkB;AAAE,MAAA,IAAI,EAAE;AAAR,KAAlB;AApDoD,GAAA,CAArC;AAoD8B,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACzD;AADyD,GAAA,CApD9B;AAqDjB,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CArDiB;AAsDjB,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAtDiB;AAuDjB,EAAA,SAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAvDiB;AAwDjB,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAxDiB;AAyDjB,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CAzDiB;AA0DjB,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA1DiB;AA2DjB,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA3DiB;AA4DjB,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA,CA5DiB;AA6DjB,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EACV;AADU,GAAA;AA7DiB,CAAA;;AAqDH,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACb,iBAAA,CAAA,SADa,EACb,SADa,EACb,KADsC,CAAzB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACb,iBAAA,CAAA,SADa,EACb,SADa,EACb,KADsC,CAAzB,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACd,iBAAA,CAAA,SADc,EACd,UADc,EACd,KADwC,CAA1B,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACf,iBAAA,CAAA,SADe,EACf,WADe,EACf,KAD0C,CAA3B,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACd,iBAAA,CAAA,SADc,EACd,UADc,EACd,KADwC,CAA1B,CAAA;;AACA,UAAA,CAAA,CAAf,YAAY,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,OAAA,CAAD,CAAA,EACd,iBAAA,CAAA,SADc,EACd,UADc,EACd,KADwC,CAA1B,CAAA;;AAIsB,UAAA,CAAA,CAArC,UAAU,CAAC,wBAAD,CAA2B,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAC5C,iBAAA,CAAA,SAD4C,EAC5C,QAD4C,EAC5C,KAD6E,CAAjC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACjD,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAlBZ,EAAA,iBAAA,CAAA,yBAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,yBAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,0BAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,2BAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,0BAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,0BAAA;AACF;;AACE,EAAA,iBAAA,CAAA,SAAA,CAAA,sBAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,OAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,OAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,SAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,OAAA;AACF;;AAAE,EAAA,iBAAA,CAAA,SAAA,CAAA,MAAA;AACF;AAAQ;AAAiB;AAAgB;;AAAvC,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA;AACF;AAAQ;AAAiB;AAAgB;;AAAvC,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA;AACF;AACO;AAAiB;AAAgB;;AA8BpC,EAAA,iBAAA,CAAA,SAAA,CAAA,UAAA;AAA+B;AAC5B;AAAiB;AACpB;;AADA,EAAA,iBAAA,CAAA,SAAA,CAAA,GAAA;AAA+B;AAC5B;AAAiB;AACjB;;AADH,EAAA,iBAAA,CAAA,SAAA,CAAA,QAAA;AAA4B;;AAC5B,EAAA,iBAAA,CAAA,SAAA,CAAA,eAAA;AACJ;AAAG;AACF;AACS;AAA6C;AAO3C;;;IC3GC,sB,6BAbb,kCAAA;AAAA;;AAcW,OAAA,MAAA,GAA4B,SAA5B;AACV,C;;uCAfA,8B,CAAU,C,EAAA;AAAA,SAAA,KACT,CAAA,IAAA,sBADS,GAAA;AACkB,C;;AAC3B,sBAAU,CAAA,IAAV,GAAU,MAAe,CAAA,iBAAf,CACV;AAAA,EAAA,IAAA,EAAA,sBAAA;AAAiB,EAAA,SAAwB,EAAA,CAAM,CAAA,iBAAA,CAAN,CAAzC;AACA,EAAA,QAAA,EAAa,CADb;AACe,EAAA,YAAA,EAAA,SAAsB,mCAAtB,CACT,EADS,EACT,GADS,EAEb;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AAAyB,MAAA,MAAM,CAAA,WAAN,CAAM,eAAN,EACzB,IADyB,EACzB,kBADyB,EACG,GAAA,CAAA,MAAA,KAAoB,OADvB,EACuB,kBADvB,EAEzB,GAAA,CAAA,MAAA,KAAA,OAFyB;;GAH3B;AAKkD,EAAA,MAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GALlD;AAMC,EAAA,QAAA,EAAA,CACD,eADC,CAND;AAOA,EAAA,kBAA0B,EAAA,GAP1B;AAO0B,EAAA,KAC1B,EAAA,CARA;AAQQ,EAAA,IAAE,EAAA,CARV;AAQU,EAAA,QAAA,EAAA,SAAA,+BAAA,CACX,EADW,EACX,GADW,EACX;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;GATC;kBAAA;mBAUE;AAVF,CADU,CAAV;AAWG,sBAAA,CAAA,cAAA,GAAA;AACI,EAAA,MAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAAN;AAAM,GAAA;AADJ,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AACS,C;;AAAC,IAAA,KAAA,EAAA;AAAa;AAA1B,EAAA,sBAAA,CAAA,SAAA,CAAA,MAAA;AACF;AACC;AAAI;AAAkC;AAAoC;AAAsI;;;ICNpM,c;;;;6BALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACC,cAAA,CAAA,IAAA,GAAe,MAAA,CAAA,gBAAA,CAAmB;AAAA,EAAA,OAAA,EAAA,SAAuB,sBAAvB,CACxB,CADwB,EACxB;AAAA,WAAA,KAAiB,CAAA,IAAE,cAAnB,GAAA;AAAyC,GADjB;AACmBA,EAAAA,OAAAA,EAAAA,CAAAA,CAAAA,YAAAA,EAAyB,YAAzBA,EAAsC,YAAtCA,EAAsC,wBAAtCA,CAAAA,EAC7B,wBAD6BA,EACH,YADGA;AADnB,CAAnB,CAAf;;CAE2E,YAAC;AAAA,GAAA,OAC7E,SAD6E,KAC7E,WAD6E,IAC7E,SAD6E,KAC7E,MAAA,CAAA,kBAAA,CAAA,cAAA,EAAA;AAAA,IAAA,YAAA,EAAA,wBAAA;AAAA,aAAA,CAAA,iBAAA,EAAA,sBAAA,CAAA;AAAA,KAAA;AAAA,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,wBAAA,CAAA;AAAA,KAAA;AAAA,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,iBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,YAAA,CAAA;AAAA;AAAA,GAAA,CAD6E;AAC7E,C;;;;;;;;;;;;;AACI,C;AAAE;AAAI;AACG;AAAiC;AAAsI;;AAAK;AAAI;AAAkC;AAA2C;AAAsI;;;AAAK,SAAA,iBAAA,EAAA,sBAAA,EAAA,cAAA","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\n\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\n\nexport type NzButtonType = 'primary' | 'default' | 'dashed' | 'danger' | 'link' | null;\nexport type NzButtonShape = 'circle' | 'round' | null;\nexport type NzButtonSize = 'large' | 'default' | 'small';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'button';\n\n@Component({\n  selector: 'button[nz-button], a[nz-button]',\n  exportAs: 'nzButton',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <i nz-icon nzType=\"loading\" *ngIf=\"nzLoading\"></i>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class.ant-btn]': `true`,\n    '[class.ant-btn-primary]': `nzType === 'primary'`,\n    '[class.ant-btn-dashed]': `nzType === 'dashed'`,\n    '[class.ant-btn-link]': `nzType === 'link'`,\n    '[class.ant-btn-danger]': `nzType === 'danger'`,\n    '[class.ant-btn-circle]': `nzShape === 'circle'`,\n    '[class.ant-btn-round]': `nzShape === 'round'`,\n    '[class.ant-btn-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-sm]': `nzSize === 'small'`,\n    '[class.ant-btn-dangerous]': `nzDanger`,\n    '[class.ant-btn-loading]': `nzLoading`,\n    '[class.ant-btn-background-ghost]': `nzGhost`,\n    '[class.ant-btn-block]': `nzBlock`,\n    '[class.ant-input-search-button]': `nzSearch`,\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex === null ? null : tabIndex)',\n    '[attr.disabled]': 'disabled || null',\n    '(click)': 'haltDisabledEvents($event)'\n  }\n})\nexport class NzButtonComponent implements OnDestroy, OnChanges, AfterViewInit, AfterContentInit {\n  static ngAcceptInputType_nzBlock: BooleanInput;\n  static ngAcceptInputType_nzGhost: BooleanInput;\n  static ngAcceptInputType_nzSearch: BooleanInput;\n  static ngAcceptInputType_nzLoading: BooleanInput;\n  static ngAcceptInputType_nzDanger: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n\n  @ContentChild(NzIconDirective, { read: ElementRef }) nzIconDirectiveElement!: ElementRef;\n  @Input() @InputBoolean() nzBlock: boolean = false;\n  @Input() @InputBoolean() nzGhost: boolean = false;\n  @Input() @InputBoolean() nzSearch: boolean = false;\n  @Input() @InputBoolean() nzLoading: boolean = false;\n  @Input() @InputBoolean() nzDanger: boolean = false;\n  @Input() @InputBoolean() disabled: boolean = false;\n  @Input() tabIndex: number | string | null = null;\n  @Input() nzType: NzButtonType = null;\n  @Input() nzShape: NzButtonShape = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzSize: NzButtonSize = 'default';\n  private destroy$ = new Subject<void>();\n  private loading$ = new Subject<boolean>();\n\n  haltDisabledEvents(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n\n  insertSpan(nodes: NodeList, renderer: Renderer2): void {\n    nodes.forEach(node => {\n      if (node.nodeName === '#text') {\n        const span = renderer.createElement('span');\n        const parent = renderer.parentNode(node);\n        renderer.insertBefore(parent, span, node);\n        renderer.appendChild(span, node);\n      }\n    });\n  }\n\n  assertIconOnly(element: HTMLButtonElement, renderer: Renderer2): void {\n    const listOfNode = Array.from(element.childNodes);\n    const iconCount = listOfNode.filter(node => node.nodeName === 'I').length;\n    const noText = listOfNode.every(node => node.nodeName !== '#text');\n    const noSpan = listOfNode.every(node => node.nodeName !== 'SPAN');\n    const isIconOnly = noSpan && noText && iconCount >= 1;\n    if (isIconOnly) {\n      renderer.addClass(element, 'ant-btn-icon-only');\n    }\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    public nzConfigService: NzConfigService\n  ) {\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzLoading } = changes;\n    if (nzLoading) {\n      this.loading$.next(this.nzLoading);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.assertIconOnly(this.elementRef.nativeElement, this.renderer);\n    this.insertSpan(this.elementRef.nativeElement.childNodes, this.renderer);\n  }\n\n  ngAfterContentInit(): void {\n    this.loading$\n      .pipe(\n        startWith(this.nzLoading),\n        filter(() => !!this.nzIconDirectiveElement),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(loading => {\n        const nativeElement = this.nzIconDirectiveElement.nativeElement;\n        if (loading) {\n          this.renderer.setStyle(nativeElement, 'display', 'none');\n        } else {\n          this.renderer.removeStyle(nativeElement, 'display');\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport type NzButtonGroupSize = 'large' | 'default' | 'small';\n\n@Component({\n  selector: 'nz-button-group',\n  exportAs: 'nzButtonGroup',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-btn-group]': `true`,\n    '[class.ant-btn-group-lg]': `nzSize === 'large'`,\n    '[class.ant-btn-group-sm]': `nzSize === 'small'`\n  },\n  preserveWhitespaces: false,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzButtonGroupComponent {\n  @Input() nzSize: NzButtonGroupSize = 'default';\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ɵNzTransitionPatchModule as NzTransitionPatchModule } from 'ng-zorro-antd/core/transition-patch';\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzButtonGroupComponent } from './button-group.component';\nimport { NzButtonComponent } from './button.component';\n\n@NgModule({\n  declarations: [NzButtonComponent, NzButtonGroupComponent],\n  exports: [NzButtonComponent, NzButtonGroupComponent, NzTransitionPatchModule, NzWaveModule],\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzTransitionPatchModule]\n})\nexport class NzButtonModule {}\n"]},"metadata":{},"sourceType":"module"}