{"ast":null,"code":"(function (root, factory) {\n  if (root === undefined && window !== undefined) root = window;\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"chartist\"], function (a0) {\n      return root['Chartist.plugins.tooltip'] = factory(a0);\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(root[\"Chartist\"]);\n  }\n})(this, function (Chartist) {\n  /**\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\n   *\n   */\n\n  /* global Chartist */\n  (function (window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      currency: undefined,\n      currencyFormatCallback: undefined,\n      tooltipOffset: {\n        x: 0,\n        y: -20\n      },\n      anchorToPoint: false,\n      appendToBody: false,\n      class: undefined,\n      pointClass: 'ct-point'\n    };\n    Chartist.plugins = Chartist.plugins || {};\n\n    Chartist.plugins.tooltip = function (options) {\n      options = Chartist.extend({}, defaultOptions, options);\n      return function tooltip(chart) {\n        var tooltipSelector = options.pointClass;\n\n        if (chart instanceof Chartist.Bar) {\n          tooltipSelector = 'ct-bar';\n        } else if (chart instanceof Chartist.Pie) {\n          // Added support for donut graph\n          if (chart.options.donut) {\n            tooltipSelector = 'ct-slice-donut';\n          } else {\n            tooltipSelector = 'ct-slice-pie';\n          }\n        }\n\n        var $chart = chart.container;\n        var $toolTip;\n\n        if (!options.appendToBody) {\n          // searching for existing tooltip in the chart, because appendToBody is disabled\n          $toolTip = $chart.querySelector('.chartist-tooltip');\n        } else {\n          // searching for existing tooltip in the body, because appendToBody is enabled\n          $toolTip = document.querySelector('.chartist-tooltip');\n        }\n\n        if (!$toolTip) {\n          $toolTip = document.createElement('div');\n          $toolTip.className = !options.class ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n\n          if (!options.appendToBody) {\n            $chart.appendChild($toolTip);\n          } else {\n            document.body.appendChild($toolTip);\n          }\n        }\n\n        var height = $toolTip.offsetHeight;\n        var width = $toolTip.offsetWidth;\n        hide($toolTip);\n\n        function on(event, selector, callback) {\n          $chart.addEventListener(event, function (e) {\n            if (!selector || hasClass(e.target, selector)) callback(e);\n          });\n        }\n\n        on('mouseover', tooltipSelector, function (event) {\n          var $point = event.target;\n          var tooltipText = '';\n          var isPieChart = chart instanceof Chartist.Pie ? $point : $point.parentNode;\n          var seriesName = isPieChart ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n          var meta = $point.getAttribute('ct:meta') || seriesName || '';\n          var hasMeta = !!meta;\n          var value = $point.getAttribute('ct:value');\n\n          if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n            value = options.transformTooltipTextFnc(value);\n          }\n\n          if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n            tooltipText = options.tooltipFnc(meta, value);\n          } else {\n            if (options.metaIsHTML) {\n              var txt = document.createElement('textarea');\n              txt.innerHTML = meta;\n              meta = txt.value;\n            }\n\n            meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\n\n            if (hasMeta) {\n              tooltipText += meta + '<br>';\n            } else {\n              // For Pie Charts also take the labels into account\n              // Could add support for more charts here as well!\n              if (chart instanceof Chartist.Pie) {\n                var label = next($point, 'ct-label');\n\n                if (label) {\n                  tooltipText += text(label) + '<br>';\n                }\n              }\n            }\n\n            if (value) {\n              if (options.currency) {\n                if (options.currencyFormatCallback != undefined) {\n                  value = options.currencyFormatCallback(value, options);\n                } else {\n                  value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n                }\n              }\n\n              value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n              tooltipText += value;\n            }\n          }\n\n          if (tooltipText) {\n            $toolTip.innerHTML = tooltipText; // Calculate new width and height, as toolTip width/height may have changed with innerHTML change\n\n            height = $toolTip.offsetHeight;\n            width = $toolTip.offsetWidth;\n            setPosition(event);\n            show($toolTip); // Remember height and width to avoid wrong position in IE\n\n            height = $toolTip.offsetHeight;\n            width = $toolTip.offsetWidth;\n          }\n        });\n        on('mouseout', tooltipSelector, function () {\n          hide($toolTip);\n        });\n        on('mousemove', null, function (event) {\n          if (false === options.anchorToPoint) setPosition(event);\n        });\n\n        function setPosition(event) {\n          height = height || $toolTip.offsetHeight;\n          width = width || $toolTip.offsetWidth;\n          var offsetX = -width / 2 + options.tooltipOffset.x;\n          var offsetY = -height + options.tooltipOffset.y;\n          var anchorX, anchorY;\n\n          if (!options.appendToBody) {\n            var box = $chart.getBoundingClientRect();\n            var left = event.pageX - box.left - window.pageXOffset;\n            var top = event.pageY - box.top - window.pageYOffset;\n\n            if (true === options.anchorToPoint && event.target.x2 && event.target.y2) {\n              anchorX = parseInt(event.target.x2.baseVal.value);\n              anchorY = parseInt(event.target.y2.baseVal.value);\n            }\n\n            $toolTip.style.top = (anchorY || top) + offsetY + 'px';\n            $toolTip.style.left = (anchorX || left) + offsetX + 'px';\n          } else {\n            $toolTip.style.top = event.pageY + offsetY + 'px';\n            $toolTip.style.left = event.pageX + offsetX + 'px';\n          }\n        }\n      };\n    };\n\n    function show(element) {\n      if (!hasClass(element, 'tooltip-show')) {\n        element.className = element.className + ' tooltip-show';\n      }\n    }\n\n    function hide(element) {\n      var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n      element.className = element.className.replace(regex, '').trim();\n    }\n\n    function hasClass(element, className) {\n      return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n    }\n\n    function next(element, className) {\n      do {\n        element = element.nextSibling;\n      } while (element && !hasClass(element, className));\n\n      return element;\n    }\n\n    function text(element) {\n      return element.innerText || element.textContent;\n    }\n  })(window, document, Chartist);\n\n  return Chartist.plugins.tooltip;\n});","map":{"version":3,"sources":["D:/queen-supermarket/Biz1Market_EXE/node_modules/chartist-plugin-tooltips-updated/dist/chartist-plugin-tooltip.js"],"names":["root","factory","undefined","window","define","amd","a0","module","exports","require","Chartist","document","defaultOptions","currency","currencyFormatCallback","tooltipOffset","x","y","anchorToPoint","appendToBody","class","pointClass","plugins","tooltip","options","extend","chart","tooltipSelector","Bar","Pie","donut","$chart","container","$toolTip","querySelector","createElement","className","appendChild","body","height","offsetHeight","width","offsetWidth","hide","on","event","selector","callback","addEventListener","e","hasClass","target","$point","tooltipText","isPieChart","parentNode","seriesName","getAttribute","meta","hasMeta","value","transformTooltipTextFnc","tooltipFnc","metaIsHTML","txt","innerHTML","label","next","text","replace","setPosition","show","offsetX","offsetY","anchorX","anchorY","box","getBoundingClientRect","left","pageX","pageXOffset","top","pageY","pageYOffset","x2","y2","parseInt","baseVal","style","element","regex","RegExp","trim","indexOf","nextSibling","innerText","textContent"],"mappings":"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","sourcesContent":["(function (root, factory) {\n  if (root === undefined && window !== undefined) root = window;\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"chartist\"], function (a0) {\n      return (root['Chartist.plugins.tooltip'] = factory(a0));\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(root[\"Chartist\"]);\n  }\n}(this, function (Chartist) {\n\n/**\n * Chartist.js plugin to display a data label on top of the points in a line chart.\n *\n */\n/* global Chartist */\n(function (window, document, Chartist) {\n  'use strict';\n\n  var defaultOptions = {\n    currency: undefined,\n    currencyFormatCallback: undefined,\n    tooltipOffset: {\n      x: 0,\n      y: -20\n    },\n    anchorToPoint: false,\n    appendToBody: false,\n    class: undefined,\n    pointClass: 'ct-point'\n  };\n\n  Chartist.plugins = Chartist.plugins || {};\n  Chartist.plugins.tooltip = function (options) {\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function tooltip(chart) {\n      var tooltipSelector = options.pointClass;\n      if (chart instanceof Chartist.Bar) {\n        tooltipSelector = 'ct-bar';\n      } else if (chart instanceof Chartist.Pie) {\n        // Added support for donut graph\n        if (chart.options.donut) {\n          tooltipSelector = 'ct-slice-donut';\n        } else {\n          tooltipSelector = 'ct-slice-pie';\n        }\n      }\n\n      var $chart = chart.container;\n      var $toolTip;\n      if (!options.appendToBody) {\n        // searching for existing tooltip in the chart, because appendToBody is disabled\n        $toolTip = $chart.querySelector('.chartist-tooltip')\n      } else {\n        // searching for existing tooltip in the body, because appendToBody is enabled\n        $toolTip = document.querySelector('.chartist-tooltip');\n      }\n      if (!$toolTip) {\n        $toolTip = document.createElement('div');\n        $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n        if (!options.appendToBody) {\n          $chart.appendChild($toolTip);\n        } else {\n          document.body.appendChild($toolTip);\n        }\n      }\n      var height = $toolTip.offsetHeight;\n      var width = $toolTip.offsetWidth;\n\n      hide($toolTip);\n\n      function on(event, selector, callback) {\n        $chart.addEventListener(event, function (e) {\n          if (!selector || hasClass(e.target, selector))\n            callback(e);\n        });\n      }\n\n      on('mouseover', tooltipSelector, function (event) {\n        var $point = event.target;\n        var tooltipText = '';\n\n        var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\n        var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n        var meta = $point.getAttribute('ct:meta') || seriesName || '';\n        var hasMeta = !!meta;\n        var value = $point.getAttribute('ct:value');\n\n        if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n          value = options.transformTooltipTextFnc(value);\n        }\n\n        if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n          tooltipText = options.tooltipFnc(meta, value);\n        } else {\n          if (options.metaIsHTML) {\n            var txt = document.createElement('textarea');\n            txt.innerHTML = meta;\n            meta = txt.value;\n          }\n\n          meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\n\n          if (hasMeta) {\n            tooltipText += meta + '<br>';\n          } else {\n            // For Pie Charts also take the labels into account\n            // Could add support for more charts here as well!\n            if (chart instanceof Chartist.Pie) {\n              var label = next($point, 'ct-label');\n              if (label) {\n                tooltipText += text(label) + '<br>';\n              }\n            }\n          }\n\n          if (value) {\n            if (options.currency) {\n              if (options.currencyFormatCallback != undefined) {\n                value = options.currencyFormatCallback(value, options);\n              } else {\n                value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n              }\n            }\n            value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n            tooltipText += value;\n          }\n        }\n\n        if (tooltipText) {\n          $toolTip.innerHTML = tooltipText;\n\n          // Calculate new width and height, as toolTip width/height may have changed with innerHTML change\n          height = $toolTip.offsetHeight;\n          width = $toolTip.offsetWidth;\n\n          setPosition(event);\n          show($toolTip);\n\n          // Remember height and width to avoid wrong position in IE\n          height = $toolTip.offsetHeight;\n          width = $toolTip.offsetWidth;\n        }\n      });\n\n      on('mouseout', tooltipSelector, function () {\n        hide($toolTip);\n      });\n\n      on('mousemove', null, function (event) {\n        if (false === options.anchorToPoint)\n          setPosition(event);\n      });\n\n      function setPosition(event) {\n        height = height || $toolTip.offsetHeight;\n        width = width || $toolTip.offsetWidth;\n        var offsetX = -width / 2 + options.tooltipOffset.x;\n        var offsetY = -height + options.tooltipOffset.y;\n        var anchorX, anchorY;\n\n        if (!options.appendToBody) {\n          var box = $chart.getBoundingClientRect();\n          var left = event.pageX - box.left - window.pageXOffset;\n          var top = event.pageY - box.top - window.pageYOffset;\n\n          if (true === options.anchorToPoint && event.target.x2 && event.target.y2) {\n            anchorX = parseInt(event.target.x2.baseVal.value);\n            anchorY = parseInt(event.target.y2.baseVal.value);\n          }\n\n          $toolTip.style.top = (anchorY || top) + offsetY + 'px';\n          $toolTip.style.left = (anchorX || left) + offsetX + 'px';\n        } else {\n          $toolTip.style.top = event.pageY + offsetY + 'px';\n          $toolTip.style.left = event.pageX + offsetX + 'px';\n        }\n      }\n    }\n  };\n\n  function show(element) {\n    if (!hasClass(element, 'tooltip-show')) {\n      element.className = element.className + ' tooltip-show';\n    }\n  }\n\n  function hide(element) {\n    var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n    element.className = element.className.replace(regex, '').trim();\n  }\n\n  function hasClass(element, className) {\n    return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n  function next(element, className) {\n    do {\n      element = element.nextSibling;\n    } while (element && !hasClass(element, className));\n    return element;\n  }\n\n  function text(element) {\n    return element.innerText || element.textContent;\n  }\n\n}(window, document, Chartist));\n\nreturn Chartist.plugins.tooltip;\n\n}));\n"]},"metadata":{},"sourceType":"script"}