{"ast":null,"code":"import _inherits from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Directive, ElementRef, ViewContainerRef, ComponentFactoryResolver, Renderer2, Input, Output, ChangeDetectorRef, ViewChild, TemplateRef, Host, Optional, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { zoomBigMotion } from 'ng-zorro-antd/core/animation';\nimport { NzNoAnimationDirective, NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { DEFAULT_TOOLTIP_POSITIONS, POSITION_MAP, getPlacementName, NzOverlayModule } from 'ng-zorro-antd/core/overlay';\nimport { toBoolean, isNotNil } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\n/**\n * @fileoverview added by tsickle\n * Generated from: base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/no-animation';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from 'ng-zorro-antd/core/overlay';\nimport * as ɵngcc4 from '@angular/common';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nvar _c0 = [\"overlay\"];\n\nfunction NzToolTipComponent_ng_template_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.nzTitle);\n  }\n}\n\nfunction NzToolTipComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵelement(2, \"div\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(4, NzToolTipComponent_ng_template_0_ng_container_4_Template, 2, 1, \"ng-container\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1._classMap)(\"ngStyle\", ctx_r1.nzOverlayStyle)(\"@.disabled\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"nzNoAnimation\", ctx_r1.noAnimation == null ? null : ctx_r1.noAnimation.nzNoAnimation)(\"@zoomBigMotion\", \"active\");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.nzTitle);\n  }\n}\n\nvar NzTooltipBaseDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} hostView\n   * @param {?} resolver\n   * @param {?} renderer\n   * @param {?=} noAnimation\n   */\n  function NzTooltipBaseDirective(elementRef, hostView, resolver, renderer, noAnimation) {\n    _classCallCheck(this, NzTooltipBaseDirective);\n\n    this.elementRef = elementRef;\n    this.hostView = hostView;\n    this.resolver = resolver;\n    this.renderer = renderer;\n    this.noAnimation = noAnimation;\n    this.specificVisibleChange = new EventEmitter();\n    /**\n     * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n     * Please use a more specific API. Like `nzTooltipTrigger`.\n     */\n\n    this.nzTrigger = 'hover';\n    /**\n     * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n     * Please use a more specific API. Like `nzTooltipPlacement`.\n     */\n\n    this.nzPlacement = 'top';\n    this.visible = false;\n    this.needProxyProperties = ['noAnimation'];\n    this.nzVisibleChange = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.triggerDisposables = [];\n  }\n  /**\n   * This true title that would be used in other parts on this component.\n   * @protected\n   * @return {?}\n   */\n\n\n  _createClass(NzTooltipBaseDirective, [{\n    key: \"title\",\n    get: function get() {\n      return this.specificTitle || this.directiveNameTitle || this.nzTitle || null;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this.specificContent || this.directiveNameContent || this.nzContent || null;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"placement\",\n    get: function get() {\n      return this.specificPlacement || this.nzPlacement;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"trigger\",\n    get: function get() {\n      // NzTooltipTrigger can be null.\n      return typeof this.specificTrigger !== 'undefined' ? this.specificTrigger : this.nzTrigger;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"isVisible\",\n    get: function get() {\n      return this.specificVisible || this.nzVisible || false;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"mouseEnterDelay\",\n    get: function get() {\n      return this.specificMouseEnterDelay || this.nzMouseEnterDelay || 0.15;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"mouseLeaveDelay\",\n    get: function get() {\n      return this.specificMouseLeaveDelay || this.nzMouseLeaveDelay || 0.1;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"overlayClassName\",\n    get: function get() {\n      return this.specificOverlayClassName || this.nzOverlayClassName || null;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"overlayStyle\",\n    get: function get() {\n      return this.specificOverlayStyle || this.nzOverlayStyle || null;\n    }\n    /**\n     * @param {?} isNeeded\n     * @param {?} property\n     * @param {?} newProperty\n     * @param {?=} comp\n     * @param {?=} shared\n     * @return {?}\n     */\n\n  }, {\n    key: \"warnDeprecationIfNeeded\",\n    value: function warnDeprecationIfNeeded(isNeeded, property, newProperty) {\n      var comp = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'nz-tooltip';\n      var shared = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n      if (isNeeded) {\n        /** @type {?} */\n        var message = \"'\".concat(property, \"' of '\").concat(comp, \"' is deprecated and will be removed in 10.0.0.\\n      Please use '\").concat(newProperty, \"' instead.\");\n\n        if (shared) {\n          message = \"\".concat(message, \" The same with 'nz-popover' and 'nz-popconfirm'.\");\n        }\n\n        warnDeprecation(message);\n      }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"warnDeprecationByChanges\",\n    value: function warnDeprecationByChanges(changes) {\n      // warn deprecated things when specific property is not given\n      this.warnDeprecationIfNeeded(changes.nzTitle && !this.specificTitle && !this.directiveNameTitle, 'nzTitle', 'nzTooltipTitle');\n      this.warnDeprecationIfNeeded(changes.nzContent && !this.specificContent, 'nzContent', 'nzPopoverContent', 'nz-popover', false);\n      this.warnDeprecationIfNeeded(changes.nzPlacement && !this.specificPlacement, 'nzPlacement', 'nzTooltipPlacement');\n      this.warnDeprecationIfNeeded(changes.nzTrigger && !this.specificTrigger, 'nzTrigger', 'nzTooltipTrigger');\n      this.warnDeprecationIfNeeded(changes.nzVisible && !this.specificVisible, 'nzVisible', 'nzTooltipVisible');\n      this.warnDeprecationIfNeeded(changes.nzMouseEnterDelay && !this.specificMouseEnterDelay, 'nzMouseEnterDelay', 'nzTooltipMouseEnterDelay');\n      this.warnDeprecationIfNeeded(changes.nzMouseLeaveDelay && !this.specificMouseLeaveDelay, 'nzMouseLeaveDelay', 'nzTooltipMouseLeaveDelay');\n      this.warnDeprecationIfNeeded(changes.nzOverlayClassName && !this.specificOverlayClassName, 'nzOverlayClassName', 'nzTooltipClassName');\n      this.warnDeprecationIfNeeded(changes.nzOverlayStyle && !this.specificOverlayStyle, 'nzOverlayStyle', 'nzTooltipOverlayStyle');\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzTrigger = changes.nzTrigger,\n          specificTrigger = changes.specificTrigger;\n      /** @type {?} */\n\n      var trigger = specificTrigger || nzTrigger;\n\n      if (trigger && !trigger.isFirstChange()) {\n        this.registerTriggers();\n      }\n\n      if (this.component) {\n        this.updateChangedProperties(changes);\n      }\n\n      this.warnDeprecationByChanges(changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.createComponent();\n      this.registerTriggers();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete(); // Clear toggling timer. Issue #3875 #4317 #4386\n\n      this.clearTogglingTimer();\n      this.removeTriggerListeners();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _a;\n\n      (_a = this.component) === null || _a === void 0 ? void 0 : _a.show();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var _a;\n\n      (_a = this.component) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    /**\n     * Force the component to update its position.\n     * @return {?}\n     */\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      if (this.component) {\n        this.component.updatePosition();\n      }\n    }\n    /**\n     * Create a dynamic tooltip component. This method can be override.\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"createComponent\",\n    value: function createComponent() {\n      var _this = this;\n\n      /** @type {?} */\n      var componentRef = this.hostView.createComponent(this.componentFactory);\n      this.component = componentRef.instance; // Remove the component's DOM because it should be in the overlay container.\n\n      this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), componentRef.location.nativeElement);\n      this.component.setOverlayOrigin({\n        elementRef: this.specificOrigin || this.elementRef\n      });\n      this.updateChangedProperties(this.needProxyProperties);\n      this.component.nzVisibleChange.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe(\n      /**\n      * @param {?} visible\n      * @return {?}\n      */\n      function (visible) {\n        _this.visible = visible;\n\n        _this.specificVisibleChange.emit(visible);\n\n        _this.nzVisibleChange.emit(visible);\n      });\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerTriggers\",\n    value: function registerTriggers() {\n      var _this2 = this;\n\n      // When the method gets invoked, all properties has been synced to the dynamic component.\n      // After removing the old API, we can just check the directive's own `nzTrigger`.\n\n      /** @type {?} */\n      var el = this.elementRef.nativeElement;\n      /** @type {?} */\n\n      var trigger = this.trigger;\n      this.removeTriggerListeners();\n\n      if (trigger === 'hover') {\n        /** @type {?} */\n        var overlayElement;\n        this.triggerDisposables.push(this.renderer.listen(el, 'mouseenter',\n        /**\n        * @return {?}\n        */\n        function () {\n          _this2.delayEnterLeave(true, true, _this2.mouseEnterDelay);\n        }));\n        this.triggerDisposables.push(this.renderer.listen(el, 'mouseleave',\n        /**\n        * @return {?}\n        */\n        function () {\n          var _a;\n\n          _this2.delayEnterLeave(true, false, _this2.mouseLeaveDelay);\n\n          if (((_a = _this2.component) === null || _a === void 0 ? void 0 : _a.overlay.overlayRef) && !overlayElement) {\n            overlayElement = _this2.component.overlay.overlayRef.overlayElement;\n\n            _this2.triggerDisposables.push(_this2.renderer.listen(overlayElement, 'mouseenter',\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2.delayEnterLeave(false, true);\n            }));\n\n            _this2.triggerDisposables.push(_this2.renderer.listen(overlayElement, 'mouseleave',\n            /**\n            * @return {?}\n            */\n            function () {\n              _this2.delayEnterLeave(false, false);\n            }));\n          }\n        }));\n      } else if (trigger === 'focus') {\n        this.triggerDisposables.push(this.renderer.listen(el, 'focus',\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this2.show();\n        }));\n        this.triggerDisposables.push(this.renderer.listen(el, 'blur',\n        /**\n        * @return {?}\n        */\n        function () {\n          return _this2.hide();\n        }));\n      } else if (trigger === 'click') {\n        this.triggerDisposables.push(this.renderer.listen(el, 'click',\n        /**\n        * @param {?} e\n        * @return {?}\n        */\n        function (e) {\n          e.preventDefault();\n\n          _this2.show();\n        }));\n      } // Else do nothing because user wants to control the visibility programmatically.\n\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"updatePropertiesByChanges\",\n    value: function updatePropertiesByChanges(changes) {\n      var _this3 = this;\n\n      /** @type {?} */\n      var properties = {\n        specificTitle: ['nzTitle', this.title],\n        directiveNameTitle: ['nzTitle', this.title],\n        nzTitle: ['nzTitle', this.title],\n        specificContent: ['nzContent', this.content],\n        directiveNameContent: ['nzContent', this.content],\n        nzContent: ['nzContent', this.content],\n        specificTrigger: ['nzTrigger', this.trigger],\n        nzTrigger: ['nzTrigger', this.trigger],\n        specificPlacement: ['nzPlacement', this.placement],\n        nzPlacement: ['nzPlacement', this.placement],\n        specificVisible: ['nzVisible', this.isVisible],\n        nzVisible: ['nzVisible', this.isVisible],\n        specificMouseEnterDelay: ['nzMouseEnterDelay', this.mouseEnterDelay],\n        nzMouseEnterDelay: ['nzMouseEnterDelay', this.mouseEnterDelay],\n        specificMouseLeaveDelay: ['nzMouseLeaveDelay', this.mouseLeaveDelay],\n        nzMouseLeaveDelay: ['nzMouseLeaveDelay', this.mouseLeaveDelay],\n        specificOverlayClassName: ['nzOverlayClassName', this.overlayClassName],\n        nzOverlayClassName: ['nzOverlayClassName', this.overlayClassName],\n        specificOverlayStyle: ['nzOverlayStyle', this.overlayStyle],\n        nzOverlayStyle: ['nzOverlayStyle', this.overlayStyle]\n      };\n      /** @type {?} */\n\n      var keys = Object.keys(changes);\n      keys.forEach(\n      /**\n      * @param {?} property\n      * @return {?}\n      */\n      function (property) {\n        // @ts-ignore\n        if (properties[property]) {\n          // @ts-ignore\n          var _properties$property = _slicedToArray(properties[property], 2),\n              name = _properties$property[0],\n              value = _properties$property[1];\n\n          _this3.updateComponentValue(name, value);\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updatePropertiesByArray\",\n    value: function updatePropertiesByArray() {\n      this.updateComponentValue('nzTitle', this.title);\n      this.updateComponentValue('nzContent', this.content);\n      this.updateComponentValue('nzPlacement', this.placement);\n      this.updateComponentValue('nzTrigger', this.trigger);\n      this.updateComponentValue('nzVisible', this.isVisible);\n      this.updateComponentValue('nzMouseEnterDelay', this.mouseEnterDelay);\n      this.updateComponentValue('nzMouseLeaveDelay', this.mouseLeaveDelay);\n      this.updateComponentValue('nzOverlayClassName', this.overlayClassName);\n      this.updateComponentValue('nzOverlayStyle', this.overlayStyle);\n    }\n    /**\n     * Sync changed properties to the component and trigger change detection in that component.\n     * @protected\n     * @param {?} propertiesOrChanges\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateChangedProperties\",\n    value: function updateChangedProperties(propertiesOrChanges) {\n      var _this4 = this;\n\n      var _a;\n      /** @type {?} */\n\n\n      var isArray = Array.isArray(propertiesOrChanges);\n      /** @type {?} */\n\n      var keys = isArray ?\n      /** @type {?} */\n      propertiesOrChanges : Object.keys(propertiesOrChanges);\n      keys.forEach(\n      /**\n      * @param {?} property\n      * @return {?}\n      */\n      function (property) {\n        if (_this4.needProxyProperties.indexOf(property) !== -1) {\n          // @ts-ignore\n          _this4.updateComponentValue(property, _this4[property]);\n        }\n      });\n\n      if (isArray) {\n        this.updatePropertiesByArray();\n      } else {\n        this.updatePropertiesByChanges(\n        /** @type {?} */\n        propertiesOrChanges);\n      }\n\n      (_a = this.component) === null || _a === void 0 ? void 0 : _a.updateByDirective();\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateComponentValue\",\n    value: function updateComponentValue(key, value) {\n      if (typeof value !== 'undefined') {\n        // @ts-ignore\n        this.component[key] = value;\n      }\n    }\n    /**\n     * @private\n     * @param {?} isOrigin\n     * @param {?} isEnter\n     * @param {?=} delay\n     * @return {?}\n     */\n\n  }, {\n    key: \"delayEnterLeave\",\n    value: function delayEnterLeave(isOrigin, isEnter) {\n      var _this5 = this;\n\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n\n      if (this.delayTimer) {\n        this.clearTogglingTimer();\n      } else if (delay > 0) {\n        this.delayTimer = setTimeout(\n        /**\n        * @return {?}\n        */\n        function () {\n          _this5.delayTimer = undefined;\n          isEnter ? _this5.show() : _this5.hide();\n        }, delay * 1000);\n      } else {\n        // `isOrigin` is used due to the tooltip will not hide immediately\n        // (may caused by the fade-out animation).\n        isEnter && isOrigin ? this.show() : this.hide();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeTriggerListeners\",\n    value: function removeTriggerListeners() {\n      this.triggerDisposables.forEach(\n      /**\n      * @param {?} dispose\n      * @return {?}\n      */\n      function (dispose) {\n        return dispose();\n      });\n      this.triggerDisposables.length = 0;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"clearTogglingTimer\",\n    value: function clearTogglingTimer() {\n      if (this.delayTimer) {\n        clearTimeout(this.delayTimer);\n        this.delayTimer = undefined;\n      }\n    }\n  }]);\n\n  return NzTooltipBaseDirective;\n}();\n\nNzTooltipBaseDirective.ɵfac = function NzTooltipBaseDirective_Factory(t) {\n  return new (t || NzTooltipBaseDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective));\n};\n\nNzTooltipBaseDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTooltipBaseDirective,\n  inputs: {\n    nzTrigger: \"nzTrigger\",\n    nzPlacement: \"nzPlacement\",\n    nzTitle: \"nzTitle\",\n    nzContent: \"nzContent\",\n    nzMouseEnterDelay: \"nzMouseEnterDelay\",\n    nzMouseLeaveDelay: \"nzMouseLeaveDelay\",\n    nzOverlayClassName: \"nzOverlayClassName\",\n    nzOverlayStyle: \"nzOverlayStyle\",\n    nzVisible: \"nzVisible\"\n  },\n  outputs: {\n    nzVisibleChange: \"nzVisibleChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nNzTooltipBaseDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: Renderer2\n  }, {\n    type: NzNoAnimationDirective\n  }];\n};\n\nNzTooltipBaseDirective.propDecorators = {\n  nzTitle: [{\n    type: Input\n  }],\n  nzContent: [{\n    type: Input\n  }],\n  nzTrigger: [{\n    type: Input\n  }],\n  nzPlacement: [{\n    type: Input\n  }],\n  nzMouseEnterDelay: [{\n    type: Input\n  }],\n  nzMouseLeaveDelay: [{\n    type: Input\n  }],\n  nzOverlayClassName: [{\n    type: Input\n  }],\n  nzOverlayStyle: [{\n    type: Input\n  }],\n  nzVisible: [{\n    type: Input\n  }],\n  nzVisibleChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTooltipBaseDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective\n    }];\n  }, {\n    nzTrigger: [{\n      type: Input\n    }],\n    nzPlacement: [{\n      type: Input\n    }],\n    nzVisibleChange: [{\n      type: Output\n    }],\n    nzTitle: [{\n      type: Input\n    }],\n    nzContent: [{\n      type: Input\n    }],\n    nzMouseEnterDelay: [{\n      type: Input\n    }],\n    nzMouseLeaveDelay: [{\n      type: Input\n    }],\n    nzOverlayClassName: [{\n      type: Input\n    }],\n    nzOverlayStyle: [{\n      type: Input\n    }],\n    nzVisible: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzTooltipBaseDirective.prototype.directiveNameTitle;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificTitle;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.directiveNameContent;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificContent;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificTrigger;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificPlacement;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificOrigin;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificVisible;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificMouseEnterDelay;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificMouseLeaveDelay;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificOverlayClassName;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificOverlayStyle;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.specificVisibleChange;\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzTooltipTitle`.\n   * @type {?}\n   */\n\n  NzTooltipBaseDirective.prototype.nzTitle;\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzPopoverContent`.\n   * @type {?}\n   */\n\n  NzTooltipBaseDirective.prototype.nzContent;\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzTooltipTrigger`.\n   * @type {?}\n   */\n\n  NzTooltipBaseDirective.prototype.nzTrigger;\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzTooltipPlacement`.\n   * @type {?}\n   */\n\n  NzTooltipBaseDirective.prototype.nzPlacement;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.nzMouseEnterDelay;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.nzMouseLeaveDelay;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.nzOverlayClassName;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.nzOverlayStyle;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.nzVisible;\n  /**\n   * For create tooltip dynamically. This should be override for each different component.\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.componentFactory;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.visible;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.needProxyProperties;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.nzVisibleChange;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.component;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.destroy$;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.triggerDisposables;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzTooltipBaseDirective.prototype.delayTimer;\n  /** @type {?} */\n\n  NzTooltipBaseDirective.prototype.elementRef;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.hostView;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.resolver;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.renderer;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseDirective.prototype.noAnimation;\n}\n/**\n * @abstract\n */\n// tslint:disable-next-line:directive-class-suffix\n\n\nvar NzTooltipBaseComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} cdr\n   * @param {?=} noAnimation\n   */\n  function NzTooltipBaseComponent(cdr, noAnimation) {\n    _classCallCheck(this, NzTooltipBaseComponent);\n\n    this.cdr = cdr;\n    this.noAnimation = noAnimation;\n    this.nzVisibleChange = new Subject();\n    this.nzTitle = null;\n    this.nzContent = null;\n    this.nzOverlayStyle = {};\n    this._visible = false;\n    this._trigger = 'hover';\n    this.preferredPlacement = 'top';\n    this._classMap = {};\n    this._hasBackdrop = false;\n    this._prefix = 'ant-tooltip-placement';\n    this._positions = _toConsumableArray(DEFAULT_TOOLTIP_POSITIONS);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(NzTooltipBaseComponent, [{\n    key: \"nzVisible\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._visible;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      /** @type {?} */\n      var visible = toBoolean(value);\n\n      if (this._visible !== visible) {\n        this._visible = visible;\n        this.nzVisibleChange.next(visible);\n      }\n    }\n  }, {\n    key: \"nzTrigger\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._trigger;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._trigger = value;\n      this._hasBackdrop = this._trigger === 'click';\n    }\n  }, {\n    key: \"nzPlacement\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this.preferredPlacement;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      if (value !== this.preferredPlacement) {\n        this.preferredPlacement = value;\n        this._positions = [POSITION_MAP[this.nzPlacement]].concat(_toConsumableArray(this._positions));\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.nzVisibleChange.complete();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.nzVisible) {\n        return;\n      }\n\n      if (!this.isEmpty()) {\n        this.nzVisible = true;\n        this.nzVisibleChange.next(true);\n        this.cdr.detectChanges();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.nzVisible) {\n        return;\n      }\n\n      this.nzVisible = false;\n      this.nzVisibleChange.next(false);\n      this.cdr.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateByDirective\",\n    value: function updateByDirective() {\n      var _this6 = this;\n\n      this.setClassMap();\n      this.cdr.detectChanges();\n      Promise.resolve().then(\n      /**\n      * @return {?}\n      */\n      function () {\n        _this6.updatePosition();\n\n        _this6.updateVisibilityByTitle();\n      });\n    }\n    /**\n     * Force the component to update its position.\n     * @return {?}\n     */\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      if (this.origin && this.overlay && this.overlay.overlayRef) {\n        this.overlay.overlayRef.updatePosition();\n      }\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n\n  }, {\n    key: \"onPositionChange\",\n    value: function onPositionChange(position) {\n      this.preferredPlacement =\n      /** @type {?} */\n      getPlacementName(position);\n      this.setClassMap();\n      this.cdr.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"setClassMap\",\n    value: function setClassMap() {\n      var _this$_classMap;\n\n      this._classMap = (_this$_classMap = {}, _defineProperty(_this$_classMap, this.nzOverlayClassName, true), _defineProperty(_this$_classMap, \"\".concat(this._prefix, \"-\").concat(this.preferredPlacement), true), _this$_classMap);\n    }\n    /**\n     * @param {?} origin\n     * @return {?}\n     */\n\n  }, {\n    key: \"setOverlayOrigin\",\n    value: function setOverlayOrigin(origin) {\n      this.origin = origin;\n      this.cdr.markForCheck();\n    }\n    /**\n     * Hide the component while the content is empty.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateVisibilityByTitle\",\n    value: function updateVisibilityByTitle() {\n      if (this.isEmpty()) {\n        this.hide();\n      }\n    }\n  }]);\n\n  return NzTooltipBaseComponent;\n}();\n\nNzTooltipBaseComponent.ɵfac = function NzTooltipBaseComponent_Factory(t) {\n  return new (t || NzTooltipBaseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective));\n};\n\nNzTooltipBaseComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTooltipBaseComponent,\n  viewQuery: function NzTooltipBaseComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlay = _t.first);\n    }\n  }\n});\n/** @nocollapse */\n\nNzTooltipBaseComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzNoAnimationDirective\n  }];\n};\n\nNzTooltipBaseComponent.propDecorators = {\n  overlay: [{\n    type: ViewChild,\n    args: ['overlay', {\n      static: false\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTooltipBaseComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective\n    }];\n  }, {\n    overlay: [{\n      type: ViewChild,\n      args: ['overlay', {\n        static: false\n      }]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzTooltipBaseComponent.ngAcceptInputType_nzVisible;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.overlay;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.nzVisibleChange;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.nzTitle;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.nzContent;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.nzOverlayClassName;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.nzOverlayStyle;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.nzMouseEnterDelay;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.nzMouseLeaveDelay;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype._visible;\n  /**\n   * @type {?}\n   * @protected\n   */\n\n  NzTooltipBaseComponent.prototype._trigger;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.origin;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.preferredPlacement;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype._classMap;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype._hasBackdrop;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype._prefix;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype._positions;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.cdr;\n  /** @type {?} */\n\n  NzTooltipBaseComponent.prototype.noAnimation;\n  /**\n   * Empty component cannot be opened.\n   * @abstract\n   * @protected\n   * @return {?}\n   */\n\n  NzTooltipBaseComponent.prototype.isEmpty = function () {};\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isTooltipEmpty(value) {\n  return value instanceof TemplateRef ? false : value === '' || !isNotNil(value);\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzTooltipDirective = /*#__PURE__*/function (_NzTooltipBaseDirecti) {\n  _inherits(NzTooltipDirective, _NzTooltipBaseDirecti);\n\n  var _super = _createSuper(NzTooltipDirective);\n\n  /**\n   * @param {?} elementRef\n   * @param {?} hostView\n   * @param {?} resolver\n   * @param {?} renderer\n   * @param {?=} noAnimation\n   */\n  function NzTooltipDirective(elementRef, hostView, resolver, renderer, noAnimation) {\n    var _this7;\n\n    _classCallCheck(this, NzTooltipDirective);\n\n    _this7 = _super.call(this, elementRef, hostView, resolver, renderer, noAnimation); // tslint:disable-next-line:no-output-rename\n\n    _this7.specificVisibleChange = new EventEmitter();\n    _this7.componentFactory = _this7.resolver.resolveComponentFactory(NzToolTipComponent);\n    return _this7;\n  }\n\n  return _createClass(NzTooltipDirective);\n}(NzTooltipBaseDirective);\n\nNzTooltipDirective.ɵfac = function NzTooltipDirective_Factory(t) {\n  return new (t || NzTooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective, 9));\n};\n\nNzTooltipDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzTooltipDirective,\n  selectors: [[\"\", \"nz-tooltip\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NzTooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-tooltip-open\", ctx.visible);\n    }\n  },\n  inputs: {\n    specificTitle: [\"nzTooltipTitle\", \"specificTitle\"],\n    directiveNameTitle: [\"nz-tooltip\", \"directiveNameTitle\"],\n    specificTrigger: [\"nzTooltipTrigger\", \"specificTrigger\"],\n    specificPlacement: [\"nzTooltipPlacement\", \"specificPlacement\"],\n    specificOrigin: [\"nzTooltipOrigin\", \"specificOrigin\"],\n    specificVisible: [\"nzTooltipVisible\", \"specificVisible\"],\n    specificMouseEnterDelay: [\"nzTooltipMouseEnterDelay\", \"specificMouseEnterDelay\"],\n    specificMouseLeaveDelay: [\"nzTooltipMouseLeaveDelay\", \"specificMouseLeaveDelay\"],\n    specificOverlayClassName: [\"nzTooltipOverlayClassName\", \"specificOverlayClassName\"],\n    specificOverlayStyle: [\"nzTooltipOverlayStyle\", \"specificOverlayStyle\"]\n  },\n  outputs: {\n    specificVisibleChange: \"nzTooltipVisibleChange\"\n  },\n  exportAs: [\"nzTooltip\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nNzTooltipDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: Renderer2\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzTooltipDirective.propDecorators = {\n  specificTitle: [{\n    type: Input,\n    args: ['nzTooltipTitle']\n  }],\n  directiveNameTitle: [{\n    type: Input,\n    args: ['nz-tooltip']\n  }],\n  specificTrigger: [{\n    type: Input,\n    args: ['nzTooltipTrigger']\n  }],\n  specificPlacement: [{\n    type: Input,\n    args: ['nzTooltipPlacement']\n  }],\n  specificOrigin: [{\n    type: Input,\n    args: ['nzTooltipOrigin']\n  }],\n  specificVisible: [{\n    type: Input,\n    args: ['nzTooltipVisible']\n  }],\n  specificMouseEnterDelay: [{\n    type: Input,\n    args: ['nzTooltipMouseEnterDelay']\n  }],\n  specificMouseLeaveDelay: [{\n    type: Input,\n    args: ['nzTooltipMouseLeaveDelay']\n  }],\n  specificOverlayClassName: [{\n    type: Input,\n    args: ['nzTooltipOverlayClassName']\n  }],\n  specificOverlayStyle: [{\n    type: Input,\n    args: ['nzTooltipOverlayStyle']\n  }],\n  specificVisibleChange: [{\n    type: Output,\n    args: ['nzTooltipVisibleChange']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzTooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-tooltip]',\n      exportAs: 'nzTooltip',\n      host: {\n        '[class.ant-tooltip-open]': 'visible'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    specificVisibleChange: [{\n      type: Output,\n      args: ['nzTooltipVisibleChange']\n    }],\n    specificTitle: [{\n      type: Input,\n      args: ['nzTooltipTitle']\n    }],\n    directiveNameTitle: [{\n      type: Input,\n      args: ['nz-tooltip']\n    }],\n    specificTrigger: [{\n      type: Input,\n      args: ['nzTooltipTrigger']\n    }],\n    specificPlacement: [{\n      type: Input,\n      args: ['nzTooltipPlacement']\n    }],\n    specificOrigin: [{\n      type: Input,\n      args: ['nzTooltipOrigin']\n    }],\n    specificVisible: [{\n      type: Input,\n      args: ['nzTooltipVisible']\n    }],\n    specificMouseEnterDelay: [{\n      type: Input,\n      args: ['nzTooltipMouseEnterDelay']\n    }],\n    specificMouseLeaveDelay: [{\n      type: Input,\n      args: ['nzTooltipMouseLeaveDelay']\n    }],\n    specificOverlayClassName: [{\n      type: Input,\n      args: ['nzTooltipOverlayClassName']\n    }],\n    specificOverlayStyle: [{\n      type: Input,\n      args: ['nzTooltipOverlayStyle']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzTooltipDirective.prototype.specificTitle;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.directiveNameTitle;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificTrigger;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificPlacement;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificOrigin;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificVisible;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificMouseEnterDelay;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificMouseLeaveDelay;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificOverlayClassName;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificOverlayStyle;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.specificVisibleChange;\n  /** @type {?} */\n\n  NzTooltipDirective.prototype.componentFactory;\n}\n\nvar NzToolTipComponent = /*#__PURE__*/function (_NzTooltipBaseCompone) {\n  _inherits(NzToolTipComponent, _NzTooltipBaseCompone);\n\n  var _super2 = _createSuper(NzToolTipComponent);\n\n  /**\n   * @param {?} cdr\n   * @param {?=} noAnimation\n   */\n  function NzToolTipComponent(cdr, noAnimation) {\n    var _this8;\n\n    _classCallCheck(this, NzToolTipComponent);\n\n    _this8 = _super2.call(this, cdr, noAnimation);\n    _this8.noAnimation = noAnimation;\n    _this8.nzTitle = null;\n    return _this8;\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n\n\n  _createClass(NzToolTipComponent, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return isTooltipEmpty(this.nzTitle);\n    }\n  }]);\n\n  return NzToolTipComponent;\n}(NzTooltipBaseComponent);\n\nNzToolTipComponent.ɵfac = function NzToolTipComponent_Factory(t) {\n  return new (t || NzToolTipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzNoAnimationDirective, 9));\n};\n\nNzToolTipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzToolTipComponent,\n  selectors: [[\"nz-tooltip\"]],\n  inputs: {\n    nzTitle: \"nzTitle\"\n  },\n  exportAs: [\"nzTooltipComponent\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 4,\n  consts: [[\"cdkConnectedOverlay\", \"\", \"nzConnectedOverlay\", \"\", 3, \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayPositions\", \"backdropClick\", \"detach\", \"positionChange\"], [\"overlay\", \"cdkConnectedOverlay\"], [1, \"ant-tooltip\", 3, \"ngClass\", \"ngStyle\", \"nzNoAnimation\"], [1, \"ant-tooltip-content\"], [1, \"ant-tooltip-arrow\"], [1, \"ant-tooltip-inner\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzToolTipComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NzToolTipComponent_ng_template_0_Template, 5, 6, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵlistener(\"backdropClick\", function NzToolTipComponent_Template_ng_template_backdropClick_0_listener() {\n        return ctx.hide();\n      })(\"detach\", function NzToolTipComponent_Template_ng_template_detach_0_listener() {\n        return ctx.hide();\n      })(\"positionChange\", function NzToolTipComponent_Template_ng_template_positionChange_0_listener($event) {\n        return ctx.onPositionChange($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayOrigin\", ctx.origin)(\"cdkConnectedOverlayOpen\", ctx._visible)(\"cdkConnectedOverlayHasBackdrop\", ctx._hasBackdrop)(\"cdkConnectedOverlayPositions\", ctx._positions);\n    }\n  },\n  directives: [ɵngcc2.CdkConnectedOverlay, ɵngcc3.NzConnectedOverlayDirective, ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc1.NzNoAnimationDirective, ɵngcc5.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [zoomBigMotion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzToolTipComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NzNoAnimationDirective,\n    decorators: [{\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nNzToolTipComponent.propDecorators = {\n  nzTitle: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzToolTipComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-tooltip',\n      exportAs: 'nzTooltipComponent',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [zoomBigMotion],\n      template: \"\\n    <ng-template\\n      #overlay=\\\"cdkConnectedOverlay\\\"\\n      cdkConnectedOverlay\\n      nzConnectedOverlay\\n      [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n      [cdkConnectedOverlayOpen]=\\\"_visible\\\"\\n      [cdkConnectedOverlayHasBackdrop]=\\\"_hasBackdrop\\\"\\n      [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n      (backdropClick)=\\\"hide()\\\"\\n      (detach)=\\\"hide()\\\"\\n      (positionChange)=\\\"onPositionChange($event)\\\"\\n    >\\n      <div\\n        class=\\\"ant-tooltip\\\"\\n        [ngClass]=\\\"_classMap\\\"\\n        [ngStyle]=\\\"nzOverlayStyle\\\"\\n        [@.disabled]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [nzNoAnimation]=\\\"noAnimation?.nzNoAnimation\\\"\\n        [@zoomBigMotion]=\\\"'active'\\\"\\n      >\\n        <div class=\\\"ant-tooltip-content\\\">\\n          <div class=\\\"ant-tooltip-arrow\\\"></div>\\n          <div class=\\\"ant-tooltip-inner\\\">\\n            <ng-container *nzStringTemplateOutlet=\\\"nzTitle\\\">{{ nzTitle }}</ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \",\n      preserveWhitespaces: false\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.NzNoAnimationDirective,\n      decorators: [{\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    nzTitle: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzToolTipComponent.prototype.nzTitle;\n  /** @type {?} */\n\n  NzToolTipComponent.prototype.noAnimation;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: tooltip.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzToolTipModule = /*#__PURE__*/_createClass(function NzToolTipModule() {\n  _classCallCheck(this, NzToolTipModule);\n});\n\nNzToolTipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzToolTipModule\n});\nNzToolTipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzToolTipModule_Factory(t) {\n    return new (t || NzToolTipModule)();\n  },\n  imports: [[CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzToolTipModule, {\n    declarations: function declarations() {\n      return [NzToolTipComponent, NzTooltipDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule];\n    },\n    exports: function exports() {\n      return [NzToolTipComponent, NzTooltipDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzToolTipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzToolTipComponent, NzTooltipDirective],\n      exports: [NzToolTipComponent, NzTooltipDirective],\n      entryComponents: [NzToolTipComponent],\n      imports: [CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzToolTipComponent, NzToolTipModule, NzTooltipBaseComponent, NzTooltipBaseDirective, NzTooltipDirective, isTooltipEmpty };","map":{"version":3,"sources":["ng-zorro-antd/tooltip/base.ts","ng-zorro-antd/tooltip/tooltip.ts","ng-zorro-antd/tooltip/tooltip.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { DEFAULT_TOOLTIP_POSITIONS, getPlacementName, POSITION_MAP } from 'ng-zorro-antd/core/overlay';\nimport { BooleanInput, NgClassInterface, NgStyleInterface, NzSafeAny, NzTSType } from 'ng-zorro-antd/core/types';\nimport { isNotNil, toBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nexport type NzTooltipTrigger = 'click' | 'focus' | 'hover' | null;\n\n@Directive()\nexport abstract class NzTooltipBaseDirective implements OnChanges, OnDestroy, AfterViewInit {\n  directiveNameTitle?: NzTSType | null;\n  specificTitle?: NzTSType | null;\n  directiveNameContent?: NzTSType | null;\n  specificContent?: NzTSType | null;\n  specificTrigger?: NzTooltipTrigger;\n  specificPlacement?: string;\n  specificOrigin?: ElementRef<HTMLElement>;\n  specificVisible?: boolean;\n  specificMouseEnterDelay?: number;\n  specificMouseLeaveDelay?: number;\n  specificOverlayClassName?: string;\n  specificOverlayStyle?: NgStyleInterface;\n  specificVisibleChange = new EventEmitter<boolean>();\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzTooltipTitle`.\n   */\n  @Input() nzTitle?: NzTSType | null;\n\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzPopoverContent`.\n   */\n  @Input() nzContent?: NzTSType | null;\n\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzTooltipTrigger`.\n   */\n  @Input() nzTrigger: NzTooltipTrigger = 'hover';\n\n  /**\n   * @deprecated 10.0.0. This is deprecated and going to be removed in 10.0.0.\n   * Please use a more specific API. Like `nzTooltipPlacement`.\n   */\n  @Input() nzPlacement: string = 'top';\n\n  @Input() nzMouseEnterDelay?: number;\n  @Input() nzMouseLeaveDelay?: number;\n  @Input() nzOverlayClassName?: string;\n  @Input() nzOverlayStyle?: NgStyleInterface;\n  @Input() nzVisible?: boolean;\n\n  /**\n   * For create tooltip dynamically. This should be override for each different component.\n   */\n  protected componentFactory!: ComponentFactory<NzTooltipBaseComponent>;\n\n  /**\n   * This true title that would be used in other parts on this component.\n   */\n  protected get title(): NzTSType | null {\n    return this.specificTitle || this.directiveNameTitle || this.nzTitle || null;\n  }\n\n  protected get content(): NzTSType | null {\n    return this.specificContent || this.directiveNameContent || this.nzContent || null;\n  }\n\n  protected get placement(): string {\n    return this.specificPlacement || this.nzPlacement;\n  }\n\n  protected get trigger(): NzTooltipTrigger {\n    // NzTooltipTrigger can be null.\n    return typeof this.specificTrigger !== 'undefined' ? this.specificTrigger : this.nzTrigger;\n  }\n\n  protected get isVisible(): boolean {\n    return this.specificVisible || this.nzVisible || false;\n  }\n\n  protected get mouseEnterDelay(): number {\n    return this.specificMouseEnterDelay || this.nzMouseEnterDelay || 0.15;\n  }\n\n  protected get mouseLeaveDelay(): number {\n    return this.specificMouseLeaveDelay || this.nzMouseLeaveDelay || 0.1;\n  }\n\n  protected get overlayClassName(): string | null {\n    return this.specificOverlayClassName || this.nzOverlayClassName || null;\n  }\n\n  protected get overlayStyle(): NgStyleInterface | null {\n    return this.specificOverlayStyle || this.nzOverlayStyle || null;\n  }\n\n  visible = false;\n  protected needProxyProperties = ['noAnimation'];\n\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n\n  component?: NzTooltipBaseComponent;\n\n  protected readonly destroy$ = new Subject<void>();\n  protected readonly triggerDisposables: Array<() => void> = [];\n\n  private delayTimer?: number;\n\n  constructor(\n    public elementRef: ElementRef,\n    protected hostView: ViewContainerRef,\n    protected resolver: ComponentFactoryResolver,\n    protected renderer: Renderer2,\n    protected noAnimation?: NzNoAnimationDirective\n  ) {}\n\n  warnDeprecationIfNeeded(\n    isNeeded: boolean,\n    property: string,\n    newProperty: string,\n    comp: string = 'nz-tooltip',\n    shared: boolean = true\n  ): void {\n    if (isNeeded) {\n      let message = `'${property}' of '${comp}' is deprecated and will be removed in 10.0.0.\n      Please use '${newProperty}' instead.`;\n\n      if (shared) {\n        message = `${message} The same with 'nz-popover' and 'nz-popconfirm'.`;\n      }\n      warnDeprecation(message);\n    }\n  }\n\n  warnDeprecationByChanges(changes: SimpleChanges): void {\n    // warn deprecated things when specific property is not given\n    this.warnDeprecationIfNeeded(changes.nzTitle && !this.specificTitle && !this.directiveNameTitle, 'nzTitle', 'nzTooltipTitle');\n    this.warnDeprecationIfNeeded(changes.nzContent && !this.specificContent, 'nzContent', 'nzPopoverContent', 'nz-popover', false);\n    this.warnDeprecationIfNeeded(changes.nzPlacement && !this.specificPlacement, 'nzPlacement', 'nzTooltipPlacement');\n    this.warnDeprecationIfNeeded(changes.nzTrigger && !this.specificTrigger, 'nzTrigger', 'nzTooltipTrigger');\n    this.warnDeprecationIfNeeded(changes.nzVisible && !this.specificVisible, 'nzVisible', 'nzTooltipVisible');\n    this.warnDeprecationIfNeeded(\n      changes.nzMouseEnterDelay && !this.specificMouseEnterDelay,\n      'nzMouseEnterDelay',\n      'nzTooltipMouseEnterDelay'\n    );\n    this.warnDeprecationIfNeeded(\n      changes.nzMouseLeaveDelay && !this.specificMouseLeaveDelay,\n      'nzMouseLeaveDelay',\n      'nzTooltipMouseLeaveDelay'\n    );\n    this.warnDeprecationIfNeeded(changes.nzOverlayClassName && !this.specificOverlayClassName, 'nzOverlayClassName', 'nzTooltipClassName');\n    this.warnDeprecationIfNeeded(changes.nzOverlayStyle && !this.specificOverlayStyle, 'nzOverlayStyle', 'nzTooltipOverlayStyle');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzTrigger, specificTrigger } = changes;\n    const trigger = specificTrigger || nzTrigger;\n\n    if (trigger && !trigger.isFirstChange()) {\n      this.registerTriggers();\n    }\n\n    if (this.component) {\n      this.updateChangedProperties(changes);\n    }\n\n    this.warnDeprecationByChanges(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this.createComponent();\n    this.registerTriggers();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n\n    // Clear toggling timer. Issue #3875 #4317 #4386\n    this.clearTogglingTimer();\n    this.removeTriggerListeners();\n  }\n\n  show(): void {\n    this.component?.show();\n  }\n\n  hide(): void {\n    this.component?.hide();\n  }\n\n  /**\n   * Force the component to update its position.\n   */\n  updatePosition(): void {\n    if (this.component) {\n      this.component.updatePosition();\n    }\n  }\n\n  /**\n   * Create a dynamic tooltip component. This method can be override.\n   */\n  protected createComponent(): void {\n    const componentRef = this.hostView.createComponent(this.componentFactory);\n\n    this.component = componentRef.instance;\n\n    // Remove the component's DOM because it should be in the overlay container.\n    this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), componentRef.location.nativeElement);\n    this.component.setOverlayOrigin({ elementRef: this.specificOrigin || this.elementRef });\n\n    this.updateChangedProperties(this.needProxyProperties);\n\n    this.component.nzVisibleChange.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe((visible: boolean) => {\n      this.visible = visible;\n      this.specificVisibleChange.emit(visible);\n      this.nzVisibleChange.emit(visible);\n    });\n  }\n\n  protected registerTriggers(): void {\n    // When the method gets invoked, all properties has been synced to the dynamic component.\n    // After removing the old API, we can just check the directive's own `nzTrigger`.\n    const el = this.elementRef.nativeElement;\n    const trigger = this.trigger;\n\n    this.removeTriggerListeners();\n\n    if (trigger === 'hover') {\n      let overlayElement: HTMLElement;\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'mouseenter', () => {\n          this.delayEnterLeave(true, true, this.mouseEnterDelay);\n        })\n      );\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'mouseleave', () => {\n          this.delayEnterLeave(true, false, this.mouseLeaveDelay);\n          if (this.component?.overlay.overlayRef && !overlayElement) {\n            overlayElement = this.component.overlay.overlayRef.overlayElement;\n            this.triggerDisposables.push(\n              this.renderer.listen(overlayElement, 'mouseenter', () => {\n                this.delayEnterLeave(false, true);\n              })\n            );\n            this.triggerDisposables.push(\n              this.renderer.listen(overlayElement, 'mouseleave', () => {\n                this.delayEnterLeave(false, false);\n              })\n            );\n          }\n        })\n      );\n    } else if (trigger === 'focus') {\n      this.triggerDisposables.push(this.renderer.listen(el, 'focus', () => this.show()));\n      this.triggerDisposables.push(this.renderer.listen(el, 'blur', () => this.hide()));\n    } else if (trigger === 'click') {\n      this.triggerDisposables.push(\n        this.renderer.listen(el, 'click', e => {\n          e.preventDefault();\n          this.show();\n        })\n      );\n    } // Else do nothing because user wants to control the visibility programmatically.\n  }\n\n  updatePropertiesByChanges(changes: SimpleChanges): void {\n    const properties = {\n      specificTitle: ['nzTitle', this.title],\n      directiveNameTitle: ['nzTitle', this.title],\n      nzTitle: ['nzTitle', this.title],\n      specificContent: ['nzContent', this.content],\n      directiveNameContent: ['nzContent', this.content],\n      nzContent: ['nzContent', this.content],\n      specificTrigger: ['nzTrigger', this.trigger],\n      nzTrigger: ['nzTrigger', this.trigger],\n      specificPlacement: ['nzPlacement', this.placement],\n      nzPlacement: ['nzPlacement', this.placement],\n      specificVisible: ['nzVisible', this.isVisible],\n      nzVisible: ['nzVisible', this.isVisible],\n      specificMouseEnterDelay: ['nzMouseEnterDelay', this.mouseEnterDelay],\n      nzMouseEnterDelay: ['nzMouseEnterDelay', this.mouseEnterDelay],\n      specificMouseLeaveDelay: ['nzMouseLeaveDelay', this.mouseLeaveDelay],\n      nzMouseLeaveDelay: ['nzMouseLeaveDelay', this.mouseLeaveDelay],\n      specificOverlayClassName: ['nzOverlayClassName', this.overlayClassName],\n      nzOverlayClassName: ['nzOverlayClassName', this.overlayClassName],\n      specificOverlayStyle: ['nzOverlayStyle', this.overlayStyle],\n      nzOverlayStyle: ['nzOverlayStyle', this.overlayStyle]\n    };\n\n    const keys = Object.keys(changes);\n    keys.forEach((property: NzSafeAny) => {\n      // @ts-ignore\n      if (properties[property]) {\n        // @ts-ignore\n        const [name, value] = properties[property];\n        this.updateComponentValue(name, value);\n      }\n    });\n  }\n\n  updatePropertiesByArray(): void {\n    this.updateComponentValue('nzTitle', this.title);\n    this.updateComponentValue('nzContent', this.content);\n    this.updateComponentValue('nzPlacement', this.placement);\n    this.updateComponentValue('nzTrigger', this.trigger);\n    this.updateComponentValue('nzVisible', this.isVisible);\n    this.updateComponentValue('nzMouseEnterDelay', this.mouseEnterDelay);\n    this.updateComponentValue('nzMouseLeaveDelay', this.mouseLeaveDelay);\n    this.updateComponentValue('nzOverlayClassName', this.overlayClassName);\n    this.updateComponentValue('nzOverlayStyle', this.overlayStyle);\n  }\n  /**\n   * Sync changed properties to the component and trigger change detection in that component.\n   */\n  protected updateChangedProperties(propertiesOrChanges: string[] | SimpleChanges): void {\n    const isArray = Array.isArray(propertiesOrChanges);\n    const keys = isArray ? (propertiesOrChanges as string[]) : Object.keys(propertiesOrChanges);\n\n    keys.forEach((property: NzSafeAny) => {\n      if (this.needProxyProperties.indexOf(property) !== -1) {\n        // @ts-ignore\n        this.updateComponentValue(property, this[property]);\n      }\n    });\n    if (isArray) {\n      this.updatePropertiesByArray();\n    } else {\n      this.updatePropertiesByChanges(propertiesOrChanges as SimpleChanges);\n    }\n    this.component?.updateByDirective();\n  }\n\n  private updateComponentValue(key: string, value: NzSafeAny): void {\n    if (typeof value !== 'undefined') {\n      // @ts-ignore\n      this.component[key] = value;\n    }\n  }\n\n  private delayEnterLeave(isOrigin: boolean, isEnter: boolean, delay: number = -1): void {\n    if (this.delayTimer) {\n      this.clearTogglingTimer();\n    } else if (delay > 0) {\n      this.delayTimer = setTimeout(() => {\n        this.delayTimer = undefined;\n        isEnter ? this.show() : this.hide();\n      }, delay * 1000);\n    } else {\n      // `isOrigin` is used due to the tooltip will not hide immediately\n      // (may caused by the fade-out animation).\n      isEnter && isOrigin ? this.show() : this.hide();\n    }\n  }\n\n  private removeTriggerListeners(): void {\n    this.triggerDisposables.forEach(dispose => dispose());\n    this.triggerDisposables.length = 0;\n  }\n\n  private clearTogglingTimer(): void {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = undefined;\n    }\n  }\n}\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class NzTooltipBaseComponent implements OnDestroy {\n  static ngAcceptInputType_nzVisible: BooleanInput;\n\n  @ViewChild('overlay', { static: false }) overlay!: CdkConnectedOverlay;\n\n  nzVisibleChange = new Subject<boolean>();\n  nzTitle: NzTSType | null = null;\n  nzContent: NzTSType | null = null;\n  nzOverlayClassName!: string;\n  nzOverlayStyle: NgStyleInterface = {};\n  nzMouseEnterDelay?: number;\n  nzMouseLeaveDelay?: number;\n\n  set nzVisible(value: boolean) {\n    const visible = toBoolean(value);\n    if (this._visible !== visible) {\n      this._visible = visible;\n      this.nzVisibleChange.next(visible);\n    }\n  }\n\n  get nzVisible(): boolean {\n    return this._visible;\n  }\n\n  _visible = false;\n\n  set nzTrigger(value: NzTooltipTrigger) {\n    this._trigger = value;\n    this._hasBackdrop = this._trigger === 'click';\n  }\n\n  get nzTrigger(): NzTooltipTrigger {\n    return this._trigger;\n  }\n\n  protected _trigger: NzTooltipTrigger = 'hover';\n\n  set nzPlacement(value: string) {\n    if (value !== this.preferredPlacement) {\n      this.preferredPlacement = value;\n      this._positions = [POSITION_MAP[this.nzPlacement], ...this._positions];\n    }\n  }\n\n  get nzPlacement(): string {\n    return this.preferredPlacement;\n  }\n\n  origin?: CdkOverlayOrigin;\n  preferredPlacement = 'top';\n\n  _classMap: NgClassInterface = {};\n  _hasBackdrop = false;\n  _prefix = 'ant-tooltip-placement';\n  _positions: ConnectionPositionPair[] = [...DEFAULT_TOOLTIP_POSITIONS];\n\n  constructor(public cdr: ChangeDetectorRef, public noAnimation?: NzNoAnimationDirective) {}\n\n  ngOnDestroy(): void {\n    this.nzVisibleChange.complete();\n  }\n\n  show(): void {\n    if (this.nzVisible) {\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      this.nzVisible = true;\n      this.nzVisibleChange.next(true);\n      this.cdr.detectChanges();\n    }\n  }\n\n  hide(): void {\n    if (!this.nzVisible) {\n      return;\n    }\n\n    this.nzVisible = false;\n    this.nzVisibleChange.next(false);\n    this.cdr.detectChanges();\n  }\n\n  updateByDirective(): void {\n    this.setClassMap();\n    this.cdr.detectChanges();\n\n    Promise.resolve().then(() => {\n      this.updatePosition();\n      this.updateVisibilityByTitle();\n    });\n  }\n\n  /**\n   * Force the component to update its position.\n   */\n  updatePosition(): void {\n    if (this.origin && this.overlay && this.overlay.overlayRef) {\n      this.overlay.overlayRef.updatePosition();\n    }\n  }\n\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\n    this.preferredPlacement = getPlacementName(position)!;\n    this.setClassMap();\n    this.cdr.detectChanges();\n  }\n\n  setClassMap(): void {\n    this._classMap = {\n      [this.nzOverlayClassName]: true,\n      [`${this._prefix}-${this.preferredPlacement}`]: true\n    };\n  }\n\n  setOverlayOrigin(origin: CdkOverlayOrigin): void {\n    this.origin = origin;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Hide the component while the content is empty.\n   */\n  private updateVisibilityByTitle(): void {\n    if (this.isEmpty()) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Empty component cannot be opened.\n   */\n  protected abstract isEmpty(): boolean;\n}\n\nexport function isTooltipEmpty(value: string | TemplateRef<void> | null): boolean {\n  return value instanceof TemplateRef ? false : value === '' || !isNotNil(value);\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  Renderer2,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { zoomBigMotion } from 'ng-zorro-antd/core/animation';\nimport { NzNoAnimationDirective } from 'ng-zorro-antd/core/no-animation';\nimport { NgStyleInterface, NzTSType } from 'ng-zorro-antd/core/types';\n\nimport { isTooltipEmpty, NzTooltipBaseComponent, NzTooltipBaseDirective, NzTooltipTrigger } from './base';\n\n@Directive({\n  selector: '[nz-tooltip]',\n  exportAs: 'nzTooltip',\n  host: {\n    '[class.ant-tooltip-open]': 'visible'\n  }\n})\nexport class NzTooltipDirective extends NzTooltipBaseDirective {\n  @Input('nzTooltipTitle') specificTitle?: NzTSType | null;\n  @Input('nz-tooltip') directiveNameTitle?: NzTSType | null;\n  @Input('nzTooltipTrigger') specificTrigger?: NzTooltipTrigger;\n  @Input('nzTooltipPlacement') specificPlacement?: string;\n  @Input('nzTooltipOrigin') specificOrigin?: ElementRef<HTMLElement>;\n  @Input('nzTooltipVisible') specificVisible?: boolean;\n  @Input('nzTooltipMouseEnterDelay') specificMouseEnterDelay?: number;\n  @Input('nzTooltipMouseLeaveDelay') specificMouseLeaveDelay?: number;\n  @Input('nzTooltipOverlayClassName') specificOverlayClassName?: string;\n  @Input('nzTooltipOverlayStyle') specificOverlayStyle?: NgStyleInterface;\n\n  // tslint:disable-next-line:no-output-rename\n  @Output('nzTooltipVisibleChange') readonly specificVisibleChange = new EventEmitter<boolean>();\n  componentFactory: ComponentFactory<NzToolTipComponent> = this.resolver.resolveComponentFactory(NzToolTipComponent);\n\n  constructor(\n    elementRef: ElementRef,\n    hostView: ViewContainerRef,\n    resolver: ComponentFactoryResolver,\n    renderer: Renderer2,\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective\n  ) {\n    super(elementRef, hostView, resolver, renderer, noAnimation);\n  }\n}\n\n@Component({\n  selector: 'nz-tooltip',\n  exportAs: 'nzTooltipComponent',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [zoomBigMotion],\n  template: `\n    <ng-template\n      #overlay=\"cdkConnectedOverlay\"\n      cdkConnectedOverlay\n      nzConnectedOverlay\n      [cdkConnectedOverlayOrigin]=\"origin\"\n      [cdkConnectedOverlayOpen]=\"_visible\"\n      [cdkConnectedOverlayHasBackdrop]=\"_hasBackdrop\"\n      [cdkConnectedOverlayPositions]=\"_positions\"\n      (backdropClick)=\"hide()\"\n      (detach)=\"hide()\"\n      (positionChange)=\"onPositionChange($event)\"\n    >\n      <div\n        class=\"ant-tooltip\"\n        [ngClass]=\"_classMap\"\n        [ngStyle]=\"nzOverlayStyle\"\n        [@.disabled]=\"noAnimation?.nzNoAnimation\"\n        [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\n        [@zoomBigMotion]=\"'active'\"\n      >\n        <div class=\"ant-tooltip-content\">\n          <div class=\"ant-tooltip-arrow\"></div>\n          <div class=\"ant-tooltip-inner\">\n            <ng-container *nzStringTemplateOutlet=\"nzTitle\">{{ nzTitle }}</ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  preserveWhitespaces: false\n})\nexport class NzToolTipComponent extends NzTooltipBaseComponent {\n  @Input() nzTitle: NzTSType | null = null;\n\n  constructor(cdr: ChangeDetectorRef, @Host() @Optional() public noAnimation?: NzNoAnimationDirective) {\n    super(cdr, noAnimation);\n  }\n\n  protected isEmpty(): boolean {\n    return isTooltipEmpty(this.nzTitle);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n// NOTE: the `t` is not uppercase in directives. Change this would however introduce breaking change.\nimport { NzToolTipComponent, NzTooltipDirective } from './tooltip';\n\n@NgModule({\n  declarations: [NzToolTipComponent, NzTooltipDirective],\n  exports: [NzToolTipComponent, NzTooltipDirective],\n  entryComponents: [NzToolTipComponent],\n  imports: [CommonModule, OverlayModule, NzOutletModule, NzOverlayModule, NzNoAnimationModule]\n})\nexport class NzToolTipModule {}\n"]},"metadata":{},"sourceType":"module"}