{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toArray from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/queen-supermarket/Biz1Market_EXE/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Injectable, InjectionToken, Inject, isDevMode, NgZone, NgModule, Optional, SkipSelf, Injector } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: src/globals.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nvar REGISTERED_ACTION_TYPES = {};\n/**\n * @return {?}\n */\n\nfunction resetRegisteredActionTypes() {\n  for (var _i = 0, _Object$keys = Object.keys(REGISTERED_ACTION_TYPES); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    delete REGISTERED_ACTION_TYPES[key];\n  }\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/action_creator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * \\@usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n * @template T, C\n * @param {?} type Describes the action that will be dispatched\n * @param {?=} config Additional metadata needed for the handling of the action.  See {\\@link createAction#usage-notes Usage Notes}.\n *\n * @return {?}\n */\n\n\nfunction createAction(type, config) {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n\n  if (typeof config === 'function') {\n    return defineType(type,\n    /**\n    * @param {...?} args\n    * @return {?}\n    */\n    function () {\n      return Object.assign(Object.assign({}, config.apply(void 0, arguments)), {\n        type: type\n      });\n    });\n  }\n  /** @type {?} */\n\n\n  var as = config ? config._as : 'empty';\n\n  switch (as) {\n    case 'empty':\n      return defineType(type,\n      /**\n      * @return {?}\n      */\n      function () {\n        return {\n          type: type\n        };\n      });\n\n    case 'props':\n      return defineType(type,\n      /**\n      * @param {?} props\n      * @return {?}\n      */\n      function (props) {\n        return Object.assign(Object.assign({}, props), {\n          type: type\n        });\n      });\n\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n/**\n * @template P\n * @return {?}\n */\n\n\nfunction props() {\n  return {\n    _as: 'props',\n    _p:\n    /** @type {?} */\n    undefined\n  };\n}\n/**\n * @template C\n * @param {?} creators\n * @return {?}\n */\n\n\nfunction union(creators) {\n  return (\n    /** @type {?} */\n    undefined\n  );\n}\n/**\n * @template T\n * @param {?} type\n * @param {?} creator\n * @return {?}\n */\n\n\nfunction defineType(type, creator) {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false\n  });\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/actions_subject.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar INIT =\n/** @type {?} */\n'@ngrx/store/init';\n\nvar ActionsSubject = /*#__PURE__*/function (_BehaviorSubject) {\n  _inherits(ActionsSubject, _BehaviorSubject);\n\n  var _super = _createSuper(ActionsSubject);\n\n  function ActionsSubject() {\n    _classCallCheck(this, ActionsSubject);\n\n    return _super.call(this, {\n      type: INIT\n    });\n  }\n  /**\n   * @param {?} action\n   * @return {?}\n   */\n\n\n  _createClass(ActionsSubject, [{\n    key: \"next\",\n    value: function next(action) {\n      if (typeof action === 'function') {\n        throw new TypeError(\"\\n        Dispatch expected an object, instead it received a function.\\n        If you're using the createAction function, make sure to invoke the function\\n        before dispatching the action. For example, someAction should be someAction().\");\n      } else if (typeof action === 'undefined') {\n        throw new TypeError(\"Actions must be objects\");\n      } else if (typeof action.type === 'undefined') {\n        throw new TypeError(\"Actions must have a type property\");\n      }\n\n      _get(_getPrototypeOf(ActionsSubject.prototype), \"next\", this).call(this, action);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      /* noop */\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(ActionsSubject.prototype), \"complete\", this).call(this);\n    }\n  }]);\n\n  return ActionsSubject;\n}(BehaviorSubject);\n\nActionsSubject.ɵfac = function ActionsSubject_Factory(t) {\n  return new (t || ActionsSubject)();\n};\n\nActionsSubject.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ActionsSubject,\n  factory: ActionsSubject.ɵfac\n});\n/** @nocollapse */\n\nActionsSubject.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ActionsSubject, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/** @type {?} */\n\n\nvar ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n/**\n * @fileoverview added by tsickle\n * Generated from: src/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\n/** @type {?} */\n\n\nvar _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\n/** @type {?} */\n\n\nvar INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\n/** @type {?} */\n\nvar REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\n/** @type {?} */\n\nvar _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\n/** @type {?} */\n\n\nvar INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\n/** @type {?} */\n\nvar _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\n/** @type {?} */\n\n\nvar STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\n/** @type {?} */\n\nvar _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\n/** @type {?} */\n\n\nvar _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\n/** @type {?} */\n\n\nvar _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\n/** @type {?} */\n\n\nvar _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\n/** @type {?} */\n\n\nvar _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\n/** @type {?} */\n\n\nvar FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n * @type {?}\n */\n\nvar USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by \\@ngrx/store or by library authors\n * @type {?}\n */\n\nvar META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n * @type {?}\n */\n\nvar _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n * @type {?}\n */\n\n\nvar USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n * @type {?}\n */\n\nvar _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n * @type {?}\n */\n\n\nvar _ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\n/** @type {?} */\n\n\nvar _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n/**\n * @fileoverview added by tsickle\n * Generated from: src/utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * \\@usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n * @param {?} reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param {?=} initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @return {?} A reducer function.\n *\n */\n\n\nfunction combineReducers(reducers) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  /** @type {?} */\n  var reducerKeys = Object.keys(reducers);\n  /** @type {?} */\n\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    /** @type {?} */\n    var key = reducerKeys[i];\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  /** @type {?} */\n\n\n  var finalReducerKeys = Object.keys(finalReducers);\n  return (\n    /**\n    * @param {?} state\n    * @param {?} action\n    * @return {?}\n    */\n    function combination(state, action) {\n      state = state === undefined ? initialState : state;\n      /** @type {?} */\n\n      var hasChanged = false;\n      /** @type {?} */\n\n      var nextState = {};\n\n      for (var _i2 = 0; _i2 < finalReducerKeys.length; _i2++) {\n        /** @type {?} */\n        var _key = finalReducerKeys[_i2];\n        /** @type {?} */\n\n        var reducer = finalReducers[_key];\n        /** @type {?} */\n\n        var previousStateForKey = state[_key];\n        /** @type {?} */\n\n        var nextStateForKey = reducer(previousStateForKey, action);\n        nextState[_key] = nextStateForKey;\n        hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n      }\n\n      return hasChanged ? nextState : state;\n    }\n  );\n}\n/**\n * @template T\n * @param {?} object\n * @param {?} keyToRemove\n * @return {?}\n */\n\n\nfunction omit(object, keyToRemove) {\n  return Object.keys(object).filter(\n  /**\n  * @param {?} key\n  * @return {?}\n  */\n  function (key) {\n    return key !== keyToRemove;\n  }).reduce(\n  /**\n  * @param {?} result\n  * @param {?} key\n  * @return {?}\n  */\n  function (result, key) {\n    return Object.assign(result, _defineProperty({}, key, object[key]));\n  }, {});\n}\n/**\n * @param {...?} functions\n * @return {?}\n */\n\n\nfunction compose() {\n  for (var _len = arguments.length, functions = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n    functions[_key2] = arguments[_key2];\n  }\n\n  return (\n    /**\n    * @param {?} arg\n    * @return {?}\n    */\n    function (arg) {\n      if (functions.length === 0) {\n        return arg;\n      }\n      /** @type {?} */\n\n\n      var last = functions[functions.length - 1];\n      /** @type {?} */\n\n      var rest = functions.slice(0, -1);\n      return rest.reduceRight(\n      /**\n      * @param {?} composed\n      * @param {?} fn\n      * @return {?}\n      */\n      function (composed, fn) {\n        return fn(composed);\n      }, last(arg));\n    }\n  );\n}\n/**\n * @template T, V\n * @param {?} reducerFactory\n * @param {?=} metaReducers\n * @return {?}\n */\n\n\nfunction createReducerFactory(reducerFactory, metaReducers) {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    /** @type {?} */\n    reducerFactory = compose.apply(null, [].concat(_toConsumableArray(metaReducers), [reducerFactory]));\n  }\n\n  return (\n    /**\n    * @param {?} reducers\n    * @param {?=} initialState\n    * @return {?}\n    */\n    function (reducers, initialState) {\n      /** @type {?} */\n      var reducer = reducerFactory(reducers);\n      return (\n        /**\n        * @param {?} state\n        * @param {?} action\n        * @return {?}\n        */\n        function (state, action) {\n          state = state === undefined ?\n          /** @type {?} */\n          initialState : state;\n          return reducer(state, action);\n        }\n      );\n    }\n  );\n}\n/**\n * @template T, V\n * @param {?=} metaReducers\n * @return {?}\n */\n\n\nfunction createFeatureReducerFactory(metaReducers) {\n  /** @type {?} */\n  var reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0 ? compose.apply(void 0, _toConsumableArray(metaReducers)) :\n  /**\n  * @param {?} r\n  * @return {?}\n  */\n  function (r) {\n    return r;\n  };\n  return (\n    /**\n    * @param {?} reducer\n    * @param {?=} initialState\n    * @return {?}\n    */\n    function (reducer, initialState) {\n      reducer = reducerFactory(reducer);\n      return (\n        /**\n        * @param {?} state\n        * @param {?} action\n        * @return {?}\n        */\n        function (state, action) {\n          state = state === undefined ? initialState : state;\n          return reducer(state, action);\n        }\n      );\n    }\n  );\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/reducer_manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n */\n\n\nvar ReducerObservable = /*#__PURE__*/function (_Observable) {\n  _inherits(ReducerObservable, _Observable);\n\n  var _super2 = _createSuper(ReducerObservable);\n\n  function ReducerObservable() {\n    _classCallCheck(this, ReducerObservable);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return _createClass(ReducerObservable);\n}(Observable);\n/**\n * @abstract\n */\n\n\nvar ReducerManagerDispatcher = /*#__PURE__*/function (_ActionsSubject) {\n  _inherits(ReducerManagerDispatcher, _ActionsSubject);\n\n  var _super3 = _createSuper(ReducerManagerDispatcher);\n\n  function ReducerManagerDispatcher() {\n    _classCallCheck(this, ReducerManagerDispatcher);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return _createClass(ReducerManagerDispatcher);\n}(ActionsSubject);\n/** @type {?} */\n\n\nvar UPDATE =\n/** @type {?} */\n'@ngrx/store/update-reducers';\n\nvar ReducerManager = /*#__PURE__*/function (_BehaviorSubject2) {\n  _inherits(ReducerManager, _BehaviorSubject2);\n\n  var _super4 = _createSuper(ReducerManager);\n\n  /**\n   * @param {?} dispatcher\n   * @param {?} initialState\n   * @param {?} reducers\n   * @param {?} reducerFactory\n   */\n  function ReducerManager(dispatcher, initialState, reducers, reducerFactory) {\n    var _this;\n\n    _classCallCheck(this, ReducerManager);\n\n    _this = _super4.call(this, reducerFactory(reducers, initialState));\n    _this.dispatcher = dispatcher;\n    _this.initialState = initialState;\n    _this.reducers = reducers;\n    _this.reducerFactory = reducerFactory;\n    return _this;\n  }\n  /**\n   * @param {?} feature\n   * @return {?}\n   */\n\n\n  _createClass(ReducerManager, [{\n    key: \"addFeature\",\n    value: function addFeature(feature) {\n      this.addFeatures([feature]);\n    }\n    /**\n     * @param {?} features\n     * @return {?}\n     */\n\n  }, {\n    key: \"addFeatures\",\n    value: function addFeatures(features) {\n      /** @type {?} */\n      var reducers = features.reduce(\n      /**\n      * @param {?} reducerDict\n      * @param {?} __1\n      * @return {?}\n      */\n      function (reducerDict, _ref) {\n        var reducers = _ref.reducers,\n            reducerFactory = _ref.reducerFactory,\n            metaReducers = _ref.metaReducers,\n            initialState = _ref.initialState,\n            key = _ref.key;\n\n        /** @type {?} */\n        var reducer = typeof reducers === 'function' ? createFeatureReducerFactory(metaReducers)(reducers, initialState) : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n        reducerDict[key] = reducer;\n        return reducerDict;\n      },\n      /** @type {?} */\n      {});\n      this.addReducers(reducers);\n    }\n    /**\n     * @param {?} feature\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeFeature\",\n    value: function removeFeature(feature) {\n      this.removeFeatures([feature]);\n    }\n    /**\n     * @param {?} features\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeFeatures\",\n    value: function removeFeatures(features) {\n      this.removeReducers(features.map(\n      /**\n      * @param {?} p\n      * @return {?}\n      */\n      function (p) {\n        return p.key;\n      }));\n    }\n    /**\n     * @param {?} key\n     * @param {?} reducer\n     * @return {?}\n     */\n\n  }, {\n    key: \"addReducer\",\n    value: function addReducer(key, reducer) {\n      this.addReducers(_defineProperty({}, key, reducer));\n    }\n    /**\n     * @param {?} reducers\n     * @return {?}\n     */\n\n  }, {\n    key: \"addReducers\",\n    value: function addReducers(reducers) {\n      this.reducers = Object.assign(Object.assign({}, this.reducers), reducers);\n      this.updateReducers(Object.keys(reducers));\n    }\n    /**\n     * @param {?} featureKey\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeReducer\",\n    value: function removeReducer(featureKey) {\n      this.removeReducers([featureKey]);\n    }\n    /**\n     * @param {?} featureKeys\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeReducers\",\n    value: function removeReducers(featureKeys) {\n      var _this2 = this;\n\n      featureKeys.forEach(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      function (key) {\n        _this2.reducers =\n        /** @type {?} */\n        omit(_this2.reducers, key)\n        /*TODO(#823)*/\n        ;\n      });\n      this.updateReducers(featureKeys);\n    }\n    /**\n     * @private\n     * @param {?} featureKeys\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateReducers\",\n    value: function updateReducers(featureKeys) {\n      this.next(this.reducerFactory(this.reducers, this.initialState));\n      this.dispatcher.next(\n      /** @type {?} */\n      {\n        type: UPDATE,\n        features: featureKeys\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.complete();\n    }\n  }]);\n\n  return ReducerManager;\n}(BehaviorSubject);\n\nReducerManager.ɵfac = function ReducerManager_Factory(t) {\n  return new (t || ReducerManager)(ɵngcc0.ɵɵinject(ReducerManagerDispatcher), ɵngcc0.ɵɵinject(INITIAL_STATE), ɵngcc0.ɵɵinject(INITIAL_REDUCERS), ɵngcc0.ɵɵinject(REDUCER_FACTORY));\n};\n\nReducerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ReducerManager,\n  factory: ReducerManager.ɵfac\n});\n/** @nocollapse */\n\nReducerManager.ctorParameters = function () {\n  return [{\n    type: ReducerManagerDispatcher\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [INITIAL_STATE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [INITIAL_REDUCERS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [REDUCER_FACTORY]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ReducerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ReducerManagerDispatcher\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_REDUCERS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [REDUCER_FACTORY]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  ReducerManager.prototype.dispatcher;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ReducerManager.prototype.initialState;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ReducerManager.prototype.reducers;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ReducerManager.prototype.reducerFactory;\n}\n/** @type {?} */\n\n\nvar REDUCER_MANAGER_PROVIDERS = [ReducerManager, {\n  provide: ReducerObservable,\n  useExisting: ReducerManager\n}, {\n  provide: ReducerManagerDispatcher,\n  useExisting: ActionsSubject\n}];\n/**\n * @fileoverview added by tsickle\n * Generated from: src/scanned_actions_subject.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar ScannedActionsSubject = /*#__PURE__*/function (_Subject) {\n  _inherits(ScannedActionsSubject, _Subject);\n\n  var _super5 = _createSuper(ScannedActionsSubject);\n\n  function ScannedActionsSubject() {\n    _classCallCheck(this, ScannedActionsSubject);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(ScannedActionsSubject, [{\n    key: \"ngOnDestroy\",\n    value:\n    /**\n     * @return {?}\n     */\n    function ngOnDestroy() {\n      this.complete();\n    }\n  }]);\n\n  return ScannedActionsSubject;\n}(Subject);\n\nScannedActionsSubject.ɵfac = function ScannedActionsSubject_Factory(t) {\n  return ɵScannedActionsSubject_BaseFactory(t || ScannedActionsSubject);\n};\n\nScannedActionsSubject.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ScannedActionsSubject,\n  factory: ScannedActionsSubject.ɵfac\n});\nvar ɵScannedActionsSubject_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(ScannedActionsSubject);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScannedActionsSubject, [{\n    type: Injectable\n  }], null, null);\n})();\n/** @type {?} */\n\n\nvar SCANNED_ACTIONS_SUBJECT_PROVIDERS = [ScannedActionsSubject];\n/**\n * @fileoverview added by tsickle\n * Generated from: src/state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n */\n\nvar StateObservable = /*#__PURE__*/function (_Observable2) {\n  _inherits(StateObservable, _Observable2);\n\n  var _super6 = _createSuper(StateObservable);\n\n  function StateObservable() {\n    _classCallCheck(this, StateObservable);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return _createClass(StateObservable);\n}(Observable);\n/**\n * @template T\n */\n\n\nvar State = /*#__PURE__*/function (_BehaviorSubject3) {\n  _inherits(State, _BehaviorSubject3);\n\n  var _super7 = _createSuper(State);\n\n  /**\n   * @param {?} actions$\n   * @param {?} reducer$\n   * @param {?} scannedActions\n   * @param {?} initialState\n   */\n  function State(actions$, reducer$, scannedActions, initialState) {\n    var _this3;\n\n    _classCallCheck(this, State);\n\n    _this3 = _super7.call(this, initialState);\n    /** @type {?} */\n\n    var actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n    /** @type {?} */\n\n    var withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n    /** @type {?} */\n\n    var seed = {\n      state: initialState\n    };\n    /** @type {?} */\n\n    var stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n    _this3.stateSubscription = stateAndAction$.subscribe(\n    /**\n    * @param {?} __0\n    * @return {?}\n    */\n    function (_ref2) {\n      var state = _ref2.state,\n          action = _ref2.action;\n\n      _this3.next(state);\n\n      scannedActions.next(\n      /** @type {?} */\n      action);\n    });\n    return _this3;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(State, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.stateSubscription.unsubscribe();\n      this.complete();\n    }\n  }]);\n\n  return State;\n}(BehaviorSubject);\n\nState.ɵfac = function State_Factory(t) {\n  return new (t || State)(ɵngcc0.ɵɵinject(ActionsSubject), ɵngcc0.ɵɵinject(ReducerObservable), ɵngcc0.ɵɵinject(ScannedActionsSubject), ɵngcc0.ɵɵinject(INITIAL_STATE));\n};\n\nState.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: State,\n  factory: State.ɵfac\n});\nState.INIT = INIT;\n/** @nocollapse */\n\nState.ctorParameters = function () {\n  return [{\n    type: ActionsSubject\n  }, {\n    type: ReducerObservable\n  }, {\n    type: ScannedActionsSubject\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [INITIAL_STATE]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(State, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  State.INIT;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  State.prototype.stateSubscription;\n}\n/**\n * @template T, V\n * @param {?=} stateActionPair\n * @param {?=} __1\n * @return {?}\n */\n\n\nfunction reduceState() {\n  var stateActionPair = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    state: undefined\n  };\n\n  var _ref3 = arguments.length > 1 ? arguments[1] : undefined,\n      _ref4 = _slicedToArray(_ref3, 2),\n      action = _ref4[0],\n      reducer = _ref4[1];\n\n  var state = stateActionPair.state;\n  return {\n    state: reducer(state, action),\n    action: action\n  };\n}\n/** @type {?} */\n\n\nvar STATE_PROVIDERS = [State, {\n  provide: StateObservable,\n  useExisting: State\n}];\n/**\n * @fileoverview added by tsickle\n * Generated from: src/store.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n */\n\nvar Store = /*#__PURE__*/function (_Observable3) {\n  _inherits(Store, _Observable3);\n\n  var _super8 = _createSuper(Store);\n\n  /**\n   * @param {?} state$\n   * @param {?} actionsObserver\n   * @param {?} reducerManager\n   */\n  function Store(state$, actionsObserver, reducerManager) {\n    var _this4;\n\n    _classCallCheck(this, Store);\n\n    _this4 = _super8.call(this);\n    _this4.actionsObserver = actionsObserver;\n    _this4.reducerManager = reducerManager;\n    _this4.source = state$;\n    return _this4;\n  }\n  /**\n   * @template Props, K\n   * @param {?} pathOrMapFn\n   * @param {...?} paths\n   * @return {?}\n   */\n\n\n  _createClass(Store, [{\n    key: \"select\",\n    value: function select(pathOrMapFn) {\n      for (var _len2 = arguments.length, paths = new Array(_len2 > 1 ? _len2 - 1 : 0), _key3 = 1; _key3 < _len2; _key3++) {\n        paths[_key3 - 1] = arguments[_key3];\n      }\n\n      return (\n        /** @type {?} */\n        _select.call.apply(\n        /** @type {?} */\n        _select, [null, pathOrMapFn].concat(paths))(this)\n      );\n    }\n    /**\n     * @template R\n     * @param {?} operator\n     * @return {?}\n     */\n\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      /** @type {?} */\n      var store = new Store(this, this.actionsObserver, this.reducerManager);\n      store.operator = operator;\n      return store;\n    }\n    /**\n     * @template V\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(action) {\n      this.actionsObserver.next(action);\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"next\",\n    value: function next(action) {\n      this.actionsObserver.next(action);\n    }\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      this.actionsObserver.error(err);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.actionsObserver.complete();\n    }\n    /**\n     * @template State, Actions\n     * @param {?} key\n     * @param {?} reducer\n     * @return {?}\n     */\n\n  }, {\n    key: \"addReducer\",\n    value: function addReducer(key, reducer) {\n      this.reducerManager.addReducer(key, reducer);\n    }\n    /**\n     * @template Key\n     * @param {?} key\n     * @return {?}\n     */\n\n  }, {\n    key: \"removeReducer\",\n    value: function removeReducer(key) {\n      this.reducerManager.removeReducer(key);\n    }\n  }]);\n\n  return Store;\n}(Observable);\n\nStore.ɵfac = function Store_Factory(t) {\n  return new (t || Store)(ɵngcc0.ɵɵinject(StateObservable), ɵngcc0.ɵɵinject(ActionsSubject), ɵngcc0.ɵɵinject(ReducerManager));\n};\n\nStore.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: Store,\n  factory: Store.ɵfac\n});\n/** @nocollapse */\n\nStore.ctorParameters = function () {\n  return [{\n    type: StateObservable\n  }, {\n    type: ActionsSubject\n  }, {\n    type: ReducerManager\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Store, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StateObservable\n    }, {\n      type: ActionsSubject\n    }, {\n      type: ReducerManager\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  Store.prototype.actionsObserver;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Store.prototype.reducerManager;\n}\n/** @type {?} */\n\n\nvar STORE_PROVIDERS = [Store];\n/**\n * @template T, Props, K\n * @param {?} pathOrMapFn\n * @param {?=} propsOrPath\n * @param {...?} paths\n * @return {?}\n */\n\nfunction _select(pathOrMapFn, propsOrPath) {\n  for (var _len3 = arguments.length, paths = new Array(_len3 > 2 ? _len3 - 2 : 0), _key4 = 2; _key4 < _len3; _key4++) {\n    paths[_key4 - 2] = arguments[_key4];\n  }\n\n  return (\n    /**\n    * @param {?} source$\n    * @return {?}\n    */\n    function selectOperator(source$) {\n      /** @type {?} */\n      var mapped$;\n\n      if (typeof pathOrMapFn === 'string') {\n        /** @type {?} */\n        var pathSlices = [\n        /** @type {?} */\n        propsOrPath].concat(paths).filter(Boolean);\n        mapped$ = source$.pipe(pluck.apply(void 0, [pathOrMapFn].concat(_toConsumableArray(pathSlices))));\n      } else if (typeof pathOrMapFn === 'function') {\n        mapped$ = source$.pipe(map(\n        /**\n        * @param {?} source\n        * @return {?}\n        */\n        function (source) {\n          return pathOrMapFn(source,\n          /** @type {?} */\n          propsOrPath);\n        }));\n      } else {\n        throw new TypeError(\"Unexpected type '\".concat(typeof pathOrMapFn, \"' in select operator,\") + \" expected 'string' or 'function'\");\n      }\n\n      return mapped$.pipe(distinctUntilChanged());\n    }\n  );\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/flags.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar _ngrxMockEnvironment = false;\n/**\n * @param {?} value\n * @return {?}\n */\n\nfunction setNgrxMockEnvironment(value) {\n  _ngrxMockEnvironment = value;\n}\n/**\n * @return {?}\n */\n\n\nfunction isNgrxMockEnvironment() {\n  return _ngrxMockEnvironment;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/selector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n * @template State, Result, ProjectorFn\n */\n\n\nfunction MemoizedSelector() {}\n\nif (false) {\n  /** @type {?} */\n  MemoizedSelector.prototype.projector;\n  /** @type {?} */\n\n  MemoizedSelector.prototype.setResult;\n  /** @type {?} */\n\n  MemoizedSelector.prototype.clearResult;\n  /**\n   * @return {?}\n   */\n\n  MemoizedSelector.prototype.release = function () {};\n}\n/**\n * @record\n * @template State, Props, Result, ProjectorFn\n */\n\n\nfunction MemoizedSelectorWithProps() {}\n\nif (false) {\n  /** @type {?} */\n  MemoizedSelectorWithProps.prototype.projector;\n  /** @type {?} */\n\n  MemoizedSelectorWithProps.prototype.setResult;\n  /** @type {?} */\n\n  MemoizedSelectorWithProps.prototype.clearResult;\n  /**\n   * @return {?}\n   */\n\n  MemoizedSelectorWithProps.prototype.release = function () {};\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction isEqualCheck(a, b) {\n  return a === b;\n}\n/**\n * @param {?} args\n * @param {?} lastArguments\n * @param {?} comparator\n * @return {?}\n */\n\n\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n  for (var i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * @param {?} projectionFn\n * @param {?} isResultEqual\n * @return {?}\n */\n\n\nfunction resultMemoize(projectionFn, isResultEqual) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n/**\n * @param {?} projectionFn\n * @param {?=} isArgumentsEqual\n * @param {?=} isResultEqual\n * @return {?}\n */\n\n\nfunction defaultMemoize(projectionFn) {\n  var isArgumentsEqual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isEqualCheck;\n  var isResultEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : isEqualCheck;\n\n  /** @type {?} */\n  var lastArguments = null; // tslint:disable-next-line:no-any anything could be the result.\n\n  /** @type {?} */\n\n  var lastResult = null;\n  /** @type {?} */\n\n  var overrideResult;\n  /**\n   * @return {?}\n   */\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n  /**\n   * @param {?=} result\n   * @return {?}\n   */\n\n\n  function setResult() {\n    var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    overrideResult = {\n      result: result\n    };\n  }\n  /**\n   * @return {?}\n   */\n\n\n  function clearResult() {\n    overrideResult = undefined;\n  } // tslint:disable-next-line:no-any anything could be the result.\n\n  /**\n   * @return {?}\n   */\n\n\n  function memoized() {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null,\n      /** @type {?} */\n      arguments);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n    /** @type {?} */\n\n\n    var newResult = projectionFn.apply(null,\n    /** @type {?} */\n    arguments);\n    lastArguments = arguments;\n\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n    return newResult;\n  }\n\n  return {\n    memoized: memoized,\n    reset: reset,\n    setResult: setResult,\n    clearResult: clearResult\n  };\n}\n/**\n * @param {...?} input\n * @return {?}\n */\n\n\nfunction createSelector() {\n  return createSelectorFactory(defaultMemoize).apply(void 0, arguments);\n}\n/**\n * @param {?} state\n * @param {?} selectors\n * @param {?} props\n * @param {?} memoizedProjector\n * @return {?}\n */\n\n\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n  if (props === undefined) {\n    /** @type {?} */\n    var _args =\n    /** @type {?} */\n    selectors.map(\n    /**\n    * @param {?} fn\n    * @return {?}\n    */\n    function (fn) {\n      return fn(state);\n    });\n\n    return memoizedProjector.memoized.apply(null, _args);\n  }\n  /** @type {?} */\n\n\n  var args =\n  /** @type {?} */\n  selectors.map(\n  /**\n  * @param {?} fn\n  * @return {?}\n  */\n  function (fn) {\n    return fn(state, props);\n  });\n  return memoizedProjector.memoized.apply(null, [].concat(_toConsumableArray(args), [props]));\n}\n/**\n * @param {?} memoize\n * @param {?=} options\n * @return {?}\n */\n\n\nfunction createSelectorFactory(memoize) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    stateFn: defaultStateFn\n  };\n  return (\n    /**\n    * @param {...?} input\n    * @return {?}\n    */\n    function () {\n      for (var _len4 = arguments.length, input = new Array(_len4), _key5 = 0; _key5 < _len4; _key5++) {\n        input[_key5] = arguments[_key5];\n      }\n\n      /** @type {?} */\n      var args = input;\n\n      if (Array.isArray(args[0])) {\n        var _args2 = args,\n            _args3 = _toArray(_args2),\n            head = _args3[0],\n            tail = _args3.slice(1);\n\n        args = [].concat(_toConsumableArray(head), _toConsumableArray(tail));\n      }\n      /** @type {?} */\n\n\n      var selectors = args.slice(0, args.length - 1);\n      /** @type {?} */\n\n      var projector = args[args.length - 1];\n      /** @type {?} */\n\n      var memoizedSelectors = selectors.filter(\n      /**\n      * @param {?} selector\n      * @return {?}\n      */\n      function (selector) {\n        return selector.release && typeof selector.release === 'function';\n      });\n      /** @type {?} */\n\n      var memoizedProjector = memoize(\n      /**\n      * @param {...?} selectors\n      * @return {?}\n      */\n      function () {\n        for (var _len5 = arguments.length, selectors = new Array(_len5), _key6 = 0; _key6 < _len5; _key6++) {\n          selectors[_key6] = arguments[_key6];\n        }\n\n        return projector.apply(null, selectors);\n      });\n      /** @type {?} */\n\n      var memoizedState = defaultMemoize(\n      /**\n      * @param {?} state\n      * @param {?} props\n      * @return {?}\n      */\n      function (state, props) {\n        return options.stateFn.apply(null, [state, selectors, props, memoizedProjector]);\n      });\n      /**\n       * @return {?}\n       */\n\n      function release() {\n        memoizedState.reset();\n        memoizedProjector.reset();\n        memoizedSelectors.forEach(\n        /**\n        * @param {?} selector\n        * @return {?}\n        */\n        function (selector) {\n          return selector.release();\n        });\n      }\n\n      return Object.assign(memoizedState.memoized, {\n        release: release,\n        projector: memoizedProjector.memoized,\n        setResult: memoizedState.setResult,\n        clearResult: memoizedState.clearResult\n      });\n    }\n  );\n}\n/**\n * @param {?} featureName\n * @return {?}\n */\n\n\nfunction createFeatureSelector(featureName) {\n  return createSelector(\n  /**\n  * @param {?} state\n  * @return {?}\n  */\n  function (state) {\n    /** @type {?} */\n    var featureState = state[featureName];\n\n    if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n      console.warn(\"@ngrx/store: The feature name \\\"\".concat(featureName, \"\\\" does \") + 'not exist in the state, therefore createFeatureSelector ' + 'cannot access it.  Be sure it is imported in a loaded module ' + \"using StoreModule.forRoot('\".concat(featureName, \"', ...) or \") + \"StoreModule.forFeature('\".concat(featureName, \"', ...).  If the default \") + 'state is intended to be undefined, as is the case with router ' + 'state, this development-only warning message can be ignored.');\n    }\n\n    return featureState;\n  },\n  /**\n  * @param {?} featureState\n  * @return {?}\n  */\n  function (featureState) {\n    return featureState;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/meta-reducers/utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\n/**\n * @param {?} target\n * @return {?}\n */\n\nfunction isUndefined(target) {\n  return target === undefined;\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isNull(target) {\n  return target === null;\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isArray(target) {\n  return Array.isArray(target);\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isString(target) {\n  return typeof target === 'string';\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isBoolean(target) {\n  return typeof target === 'boolean';\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isNumber(target) {\n  return typeof target === 'number';\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isObjectLike(target) {\n  return typeof target === 'object' && target !== null;\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isObject(target) {\n  return isObjectLike(target) && !isArray(target);\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isPlainObject(target) {\n  if (!isObject(target)) {\n    return false;\n  }\n  /** @type {?} */\n\n\n  var targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction isComponent(target) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\n/**\n * @param {?} target\n * @param {?} propertyName\n * @return {?}\n */\n\n\nfunction hasOwnProperty(target, propertyName) {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/meta-reducers/immutability_reducer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} reducer\n * @param {?} checks\n * @return {?}\n */\n\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n  return (\n    /**\n    * @param {?} state\n    * @param {?} action\n    * @return {?}\n    */\n    function (state, action) {\n      /** @type {?} */\n      var act = checks.action(action) ? freeze(action) : action;\n      /** @type {?} */\n\n      var nextState = reducer(state, act);\n      return checks.state() ? freeze(nextState) : nextState;\n    }\n  );\n}\n/**\n * @param {?} target\n * @return {?}\n */\n\n\nfunction freeze(target) {\n  Object.freeze(target);\n  /** @type {?} */\n\n  var targetIsFunction = isFunction(target);\n  Object.getOwnPropertyNames(target).forEach(\n  /**\n  * @param {?} prop\n  * @return {?}\n  */\n  function (prop) {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n\n    if (hasOwnProperty(target, prop) && (targetIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)) {\n      /** @type {?} */\n      var propValue = target[prop];\n\n      if ((isObjectLike(propValue) || isFunction(propValue)) && !Object.isFrozen(propValue)) {\n        freeze(propValue);\n      }\n    }\n  });\n  return target;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/meta-reducers/serialization_reducer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} reducer\n * @param {?} checks\n * @return {?}\n */\n\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n  return (\n    /**\n    * @param {?} state\n    * @param {?} action\n    * @return {?}\n    */\n    function (state, action) {\n      if (checks.action(action)) {\n        /** @type {?} */\n        var unserializableAction = getUnserializable(action);\n        throwIfUnserializable(unserializableAction, 'action');\n      }\n      /** @type {?} */\n\n\n      var nextState = reducer(state, action);\n\n      if (checks.state()) {\n        /** @type {?} */\n        var unserializableState = getUnserializable(nextState);\n        throwIfUnserializable(unserializableState, 'state');\n      }\n\n      return nextState;\n    }\n  );\n}\n/**\n * @param {?=} target\n * @param {?=} path\n * @return {?}\n */\n\n\nfunction getUnserializable(target) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target\n    };\n  }\n  /** @type {?} */\n\n\n  var keys = Object.keys(target);\n  return keys.reduce(\n  /**\n  * @param {?} result\n  * @param {?} key\n  * @return {?}\n  */\n  function (result, key) {\n    if (result) {\n      return result;\n    }\n    /** @type {?} */\n\n\n    var value =\n    /** @type {?} */\n    target[key]; // Ignore Ivy components\n\n    if (isComponent(value)) {\n      return result;\n    }\n\n    if (isUndefined(value) || isNull(value) || isNumber(value) || isBoolean(value) || isString(value) || isArray(value)) {\n      return false;\n    }\n\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [].concat(_toConsumableArray(path), [key]));\n    }\n\n    return {\n      path: [].concat(_toConsumableArray(path), [key]),\n      value: value\n    };\n  }, false);\n}\n/**\n * @param {?} unserializable\n * @param {?} context\n * @return {?}\n */\n\n\nfunction throwIfUnserializable(unserializable, context) {\n  if (unserializable === false) {\n    return;\n  }\n  /** @type {?} */\n\n\n  var unserializablePath = unserializable.path.join('.');\n  /** @type {?} */\n\n  var error = new Error(\"Detected unserializable \".concat(context, \" at \\\"\").concat(unserializablePath, \"\\\". \").concat(RUNTIME_CHECK_URL, \"#strict\").concat(context, \"serializability\"));\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/meta-reducers/inNgZoneAssert_reducer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} reducer\n * @param {?} checks\n * @return {?}\n */\n\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n  return (\n    /**\n    * @param {?} state\n    * @param {?} action\n    * @return {?}\n    */\n    function (state, action) {\n      if (checks.action(action) && !NgZone.isInAngularZone()) {\n        throw new Error(\"Action '\".concat(action.type, \"' running outside NgZone. \").concat(RUNTIME_CHECK_URL, \"#strictactionwithinngzone\"));\n      }\n\n      return reducer(state, action);\n    }\n  );\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/meta-reducers/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/runtime_checks.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?=} runtimeChecks\n * @return {?}\n */\n\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n  if (isDevMode()) {\n    return Object.assign({\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false\n    }, runtimeChecks);\n  }\n\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false\n  };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction createSerializationCheckMetaReducer(_ref5) {\n  var strictActionSerializability = _ref5.strictActionSerializability,\n      strictStateSerializability = _ref5.strictStateSerializability;\n  return (\n    /**\n    * @param {?} reducer\n    * @return {?}\n    */\n    function (reducer) {\n      return strictActionSerializability || strictStateSerializability ? serializationCheckMetaReducer(reducer, {\n        action:\n        /**\n        * @param {?} action\n        * @return {?}\n        */\n        function action(_action) {\n          return strictActionSerializability && !ignoreNgrxAction(_action);\n        },\n        state:\n        /**\n        * @return {?}\n        */\n        function state() {\n          return strictStateSerializability;\n        }\n      }) : reducer;\n    }\n  );\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction createImmutabilityCheckMetaReducer(_ref6) {\n  var strictActionImmutability = _ref6.strictActionImmutability,\n      strictStateImmutability = _ref6.strictStateImmutability;\n  return (\n    /**\n    * @param {?} reducer\n    * @return {?}\n    */\n    function (reducer) {\n      return strictActionImmutability || strictStateImmutability ? immutabilityCheckMetaReducer(reducer, {\n        action:\n        /**\n        * @param {?} action\n        * @return {?}\n        */\n        function action(_action2) {\n          return strictActionImmutability && !ignoreNgrxAction(_action2);\n        },\n        state:\n        /**\n        * @return {?}\n        */\n        function state() {\n          return strictStateImmutability;\n        }\n      }) : reducer;\n    }\n  );\n}\n/**\n * @param {?} action\n * @return {?}\n */\n\n\nfunction ignoreNgrxAction(action) {\n  return action.type.startsWith('@ngrx');\n}\n/**\n * @param {?} __0\n * @return {?}\n */\n\n\nfunction createInNgZoneCheckMetaReducer(_ref7) {\n  var strictActionWithinNgZone = _ref7.strictActionWithinNgZone;\n  return (\n    /**\n    * @param {?} reducer\n    * @return {?}\n    */\n    function (reducer) {\n      return strictActionWithinNgZone ? inNgZoneAssertMetaReducer(reducer, {\n        action:\n        /**\n        * @param {?} action\n        * @return {?}\n        */\n        function action(_action3) {\n          return strictActionWithinNgZone && !ignoreNgrxAction(_action3);\n        }\n      }) : reducer;\n    }\n  );\n}\n/**\n * @param {?=} runtimeChecks\n * @return {?}\n */\n\n\nfunction provideRuntimeChecks(runtimeChecks) {\n  return [{\n    provide: _USER_RUNTIME_CHECKS,\n    useValue: runtimeChecks\n  }, {\n    provide: USER_RUNTIME_CHECKS,\n    useFactory: _runtimeChecksFactory,\n    deps: [_USER_RUNTIME_CHECKS]\n  }, {\n    provide: _ACTIVE_RUNTIME_CHECKS,\n    deps: [USER_RUNTIME_CHECKS],\n    useFactory: createActiveRuntimeChecks\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [_ACTIVE_RUNTIME_CHECKS],\n    useFactory: createImmutabilityCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [_ACTIVE_RUNTIME_CHECKS],\n    useFactory: createSerializationCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [_ACTIVE_RUNTIME_CHECKS],\n    useFactory: createInNgZoneCheckMetaReducer\n  }];\n}\n/**\n * @return {?}\n */\n\n\nfunction checkForActionTypeUniqueness() {\n  return [{\n    provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n    multi: true,\n    deps: [_ACTIVE_RUNTIME_CHECKS],\n    useFactory: _actionTypeUniquenessCheck\n  }];\n}\n/**\n * @param {?} runtimeChecks\n * @return {?}\n */\n\n\nfunction _runtimeChecksFactory(runtimeChecks) {\n  return runtimeChecks;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction _actionTypeUniquenessCheck(config) {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n  /** @type {?} */\n\n\n  var duplicates = Object.entries(REGISTERED_ACTION_TYPES).filter(\n  /**\n  * @param {?} __0\n  * @return {?}\n  */\n  function (_ref8) {\n    var _ref9 = _slicedToArray(_ref8, 2),\n        registrations = _ref9[1];\n\n    return registrations > 1;\n  }).map(\n  /**\n  * @param {?} __0\n  * @return {?}\n  */\n  function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 1),\n        type = _ref11[0];\n\n    return type;\n  });\n\n  if (duplicates.length) {\n    throw new Error(\"Action types are registered more than once, \".concat(duplicates.map(\n    /**\n    * @param {?} type\n    * @return {?}\n    */\n    function (type) {\n      return \"\\\"\".concat(type, \"\\\"\");\n    }).join(', '), \". \").concat(RUNTIME_CHECK_URL, \"#strictactiontypeuniqueness\"));\n  }\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/store_module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar StoreRootModule = /*#__PURE__*/_createClass(\n/**\n * @param {?} actions$\n * @param {?} reducer$\n * @param {?} scannedActions$\n * @param {?} store\n * @param {?} guard\n * @param {?} actionCheck\n */\nfunction StoreRootModule(actions$, reducer$, scannedActions$, store, guard, actionCheck) {\n  _classCallCheck(this, StoreRootModule);\n});\n\nStoreRootModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: StoreRootModule\n});\nStoreRootModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function StoreRootModule_Factory(t) {\n    return new (t || StoreRootModule)(ɵngcc0.ɵɵinject(ActionsSubject), ɵngcc0.ɵɵinject(ReducerObservable), ɵngcc0.ɵɵinject(ScannedActionsSubject), ɵngcc0.ɵɵinject(Store), ɵngcc0.ɵɵinject(_ROOT_STORE_GUARD, 8), ɵngcc0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n  }\n});\n/** @nocollapse */\n\nStoreRootModule.ctorParameters = function () {\n  return [{\n    type: ActionsSubject\n  }, {\n    type: ReducerObservable\n  }, {\n    type: ScannedActionsSubject\n  }, {\n    type: Store\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [_ROOT_STORE_GUARD]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(StoreRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: Store\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ROOT_STORE_GUARD]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\n\nvar StoreFeatureModule = /*#__PURE__*/function () {\n  /**\n   * @param {?} features\n   * @param {?} featureReducers\n   * @param {?} reducerManager\n   * @param {?} root\n   * @param {?} actionCheck\n   */\n  function StoreFeatureModule(features, featureReducers, reducerManager, root, actionCheck) {\n    _classCallCheck(this, StoreFeatureModule);\n\n    this.features = features;\n    this.featureReducers = featureReducers;\n    this.reducerManager = reducerManager;\n    /** @type {?} */\n\n    var feats = features.map(\n    /**\n    * @param {?} feature\n    * @param {?} index\n    * @return {?}\n    */\n    function (feature, index) {\n      /** @type {?} */\n      var featureReducerCollection = featureReducers.shift();\n      /** @type {?} */\n\n      var reducers =\n      /** @type {?} */\n      featureReducerCollection\n      /*TODO(#823)*/\n      [index];\n      return Object.assign(Object.assign({}, feature), {\n        reducers: reducers,\n        initialState: _initialStateFactory(feature.initialState)\n      });\n    });\n    reducerManager.addFeatures(feats);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(StoreFeatureModule, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.reducerManager.removeFeatures(this.features);\n    }\n  }]);\n\n  return StoreFeatureModule;\n}();\n\nStoreFeatureModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: StoreFeatureModule\n});\nStoreFeatureModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function StoreFeatureModule_Factory(t) {\n    return new (t || StoreFeatureModule)(ɵngcc0.ɵɵinject(_STORE_FEATURES), ɵngcc0.ɵɵinject(FEATURE_REDUCERS), ɵngcc0.ɵɵinject(ReducerManager), ɵngcc0.ɵɵinject(StoreRootModule), ɵngcc0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n  }\n});\n/** @nocollapse */\n\nStoreFeatureModule.ctorParameters = function () {\n  return [{\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [_STORE_FEATURES]\n    }]\n  }, {\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [FEATURE_REDUCERS]\n    }]\n  }, {\n    type: ReducerManager\n  }, {\n    type: StoreRootModule\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(StoreFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [_STORE_FEATURES]\n      }]\n    }, {\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [FEATURE_REDUCERS]\n      }]\n    }, {\n      type: ReducerManager\n    }, {\n      type: StoreRootModule\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  StoreFeatureModule.prototype.features;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  StoreFeatureModule.prototype.featureReducers;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  StoreFeatureModule.prototype.reducerManager;\n}\n/**\n * @record\n * @template T, V\n */\n\n\nfunction StoreConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  StoreConfig.prototype.initialState;\n  /** @type {?|undefined} */\n\n  StoreConfig.prototype.reducerFactory;\n  /** @type {?|undefined} */\n\n  StoreConfig.prototype.metaReducers;\n}\n/**\n * @record\n * @template T, V\n */\n\n\nfunction RootStoreConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  RootStoreConfig.prototype.runtimeChecks;\n}\n\nvar StoreModule = /*#__PURE__*/function () {\n  function StoreModule() {\n    _classCallCheck(this, StoreModule);\n  }\n\n  _createClass(StoreModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @param {?} reducers\n     * @param {?=} config\n     * @return {?}\n     */\n    function forRoot(reducers) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return {\n        ngModule: StoreRootModule,\n        providers: [{\n          provide: _ROOT_STORE_GUARD,\n          useFactory: _provideForRootGuard,\n          deps: [[Store, new Optional(), new SkipSelf()]]\n        }, {\n          provide: _INITIAL_STATE,\n          useValue: config.initialState\n        }, {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE]\n        }, {\n          provide: _INITIAL_REDUCERS,\n          useValue: reducers\n        }, {\n          provide: _STORE_REDUCERS,\n          useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS\n        }, {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers\n        }, {\n          provide: USER_PROVIDED_META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : []\n        }, {\n          provide: _RESOLVED_META_REDUCERS,\n          deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n          useFactory: _concatMetaReducers\n        }, {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory ? config.reducerFactory : combineReducers\n        }, {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n          useFactory: createReducerFactory\n        }, ACTIONS_SUBJECT_PROVIDERS, REDUCER_MANAGER_PROVIDERS, SCANNED_ACTIONS_SUBJECT_PROVIDERS, STATE_PROVIDERS, STORE_PROVIDERS, provideRuntimeChecks(config.runtimeChecks), checkForActionTypeUniqueness()]\n      };\n    }\n    /**\n     * @param {?} featureName\n     * @param {?} reducers\n     * @param {?=} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"forFeature\",\n    value: function forFeature(featureName, reducers) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return {\n        ngModule: StoreFeatureModule,\n        providers: [{\n          provide: _FEATURE_CONFIGS,\n          multi: true,\n          useValue: config\n        }, {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: {\n            key: featureName,\n            reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory ? config.reducerFactory : combineReducers,\n            metaReducers: !(config instanceof InjectionToken) && config.metaReducers ? config.metaReducers : [],\n            initialState: !(config instanceof InjectionToken) && config.initialState ? config.initialState : undefined\n          }\n        }, {\n          provide: _STORE_FEATURES,\n          deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n          useFactory: _createFeatureStore\n        }, {\n          provide: _FEATURE_REDUCERS,\n          multi: true,\n          useValue: reducers\n        }, {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS\n        }, {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [Injector, _FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n          useFactory: _createFeatureReducers\n        }, checkForActionTypeUniqueness()]\n      };\n    }\n  }]);\n\n  return StoreModule;\n}();\n\nStoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: StoreModule\n});\nStoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function StoreModule_Factory(t) {\n    return new (t || StoreModule)();\n  }\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(StoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n/**\n * @param {?} injector\n * @param {?} reducers\n * @return {?}\n */\n\n\nfunction _createStoreReducers(injector, reducers) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n/**\n * @param {?} injector\n * @param {?} configs\n * @param {?} featureStores\n * @return {?}\n */\n\n\nfunction _createFeatureStore(injector, configs, featureStores) {\n  return featureStores.map(\n  /**\n  * @param {?} feat\n  * @param {?} index\n  * @return {?}\n  */\n  function (feat, index) {\n    if (configs[index] instanceof InjectionToken) {\n      /** @type {?} */\n      var conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory ? conf.reducerFactory : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState\n      };\n    }\n\n    return feat;\n  });\n}\n/**\n * @param {?} injector\n * @param {?} reducerCollection\n * @return {?}\n */\n\n\nfunction _createFeatureReducers(injector, reducerCollection) {\n  /** @type {?} */\n  var reducers = reducerCollection.map(\n  /**\n  * @param {?} reducer\n  * @return {?}\n  */\n  function (reducer) {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n  return reducers;\n}\n/**\n * @param {?} initialState\n * @return {?}\n */\n\n\nfunction _initialStateFactory(initialState) {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n/**\n * @param {?} metaReducers\n * @param {?} userProvidedMetaReducers\n * @return {?}\n */\n\n\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\n/**\n * @param {?} store\n * @return {?}\n */\n\n\nfunction _provideForRootGuard(store) {\n  if (store) {\n    throw new TypeError(\"StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.\");\n  }\n\n  return 'guarded';\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/reducer_creator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n * @template S\n */\n\n\nfunction On() {}\n\nif (false) {\n  /** @type {?} */\n  On.prototype.reducer;\n  /** @type {?} */\n\n  On.prototype.types;\n}\n/**\n * @record\n * @template S, C\n */\n\n\nfunction OnReducer() {}\n/**\n * \\@description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param {...?} args `ActionCreator`'s followed by a state change function.\n *\n * **To maintain type-safety**: pass 10 or less `ActionCreator`'s.\n * @return {?} an association of action types with a state change function.\n */\n\n\nfunction on() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key7 = 0; _key7 < _len6; _key7++) {\n    args[_key7] = arguments[_key7];\n  }\n\n  /** @type {?} */\n  var reducer =\n  /** @type {?} */\n  args.pop();\n  /** @type {?} */\n\n  var types = args.reduce(\n  /**\n  * @param {?} result\n  * @param {?} creator\n  * @return {?}\n  */\n  function (result, creator) {\n    return [].concat(_toConsumableArray(result), [\n    /** @type {?} */\n    creator.type]);\n  },\n  /** @type {?} */\n  []);\n  return {\n    reducer: reducer,\n    types: types\n  };\n}\n/**\n * \\@description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * \\@usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be wrapped with another function, if you are using View Engine AOT.\n * In case you are using Ivy (or only JIT View Engine) the extra wrapper function is not required.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n *\n * **Declaring a reducer creator using a wrapper function (Only needed if using View Engine AOT)**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n * @template S, A\n * @param {?} initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param {...?} ons Associations between actions and state changes.\n * @return {?} A reducer function.\n *\n */\n\n\nfunction createReducer(initialState) {\n  /** @type {?} */\n  var map = new Map();\n\n  for (var _len7 = arguments.length, ons = new Array(_len7 > 1 ? _len7 - 1 : 0), _key8 = 1; _key8 < _len7; _key8++) {\n    ons[_key8 - 1] = arguments[_key8];\n  }\n\n  var _loop = function _loop() {\n    var on = _ons[_i3];\n\n    var _iterator = _createForOfIteratorHelper(on.types),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var type = _step.value;\n\n        if (map.has(type)) {\n          (function () {\n            /** @type {?} */\n            var existingReducer =\n            /** @type {?} */\n            map.get(type);\n            /** @type {?} */\n\n            var newReducer =\n            /**\n            * @param {?} state\n            * @param {?} action\n            * @return {?}\n            */\n            function newReducer(state, action) {\n              return on.reducer(existingReducer(state, action), action);\n            };\n\n            map.set(type, newReducer);\n          })();\n        } else {\n          map.set(type, on.reducer);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n\n  for (var _i3 = 0, _ons = ons; _i3 < _ons.length; _i3++) {\n    _loop();\n  }\n\n  return (\n    /**\n    * @param {?=} state\n    * @param {?=} action\n    * @return {?}\n    */\n    function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      var action = arguments.length > 1 ? arguments[1] : undefined;\n\n      /** @type {?} */\n      var reducer = map.get(action.type);\n      return reducer ? reducer(state, action) : state;\n    }\n  );\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngrx-store.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { ActionsSubject, FEATURE_REDUCERS, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, isNgrxMockEnvironment, on, props, reduceState, resultMemoize, _select as select, setNgrxMockEnvironment, union, STORE_PROVIDERS as ɵb, createActiveRuntimeChecks as ɵba, createSerializationCheckMetaReducer as ɵbb, createImmutabilityCheckMetaReducer as ɵbc, createInNgZoneCheckMetaReducer as ɵbd, provideRuntimeChecks as ɵbe, checkForActionTypeUniqueness as ɵbf, _runtimeChecksFactory as ɵbg, _actionTypeUniquenessCheck as ɵbh, ACTIONS_SUBJECT_PROVIDERS as ɵc, REDUCER_MANAGER_PROVIDERS as ɵd, SCANNED_ACTIONS_SUBJECT_PROVIDERS as ɵe, isEqualCheck as ɵf, STATE_PROVIDERS as ɵg, _ROOT_STORE_GUARD as ɵh, _INITIAL_STATE as ɵi, _REDUCER_FACTORY as ɵj, _INITIAL_REDUCERS as ɵk, _STORE_REDUCERS as ɵl, _FEATURE_REDUCERS as ɵm, _FEATURE_CONFIGS as ɵn, _STORE_FEATURES as ɵo, _FEATURE_REDUCERS_TOKEN as ɵp, _RESOLVED_META_REDUCERS as ɵq, _USER_RUNTIME_CHECKS as ɵr, _ACTIVE_RUNTIME_CHECKS as ɵs, _ACTION_TYPE_UNIQUENESS_CHECK as ɵt, _createStoreReducers as ɵu, _createFeatureStore as ɵv, _createFeatureReducers as ɵw, _initialStateFactory as ɵx, _concatMetaReducers as ɵy, _provideForRootGuard as ɵz };","map":{"version":3,"sources":["../../../../modules/store/src/globals.ts","../../../../modules/store/src/action_creator.ts","../../../../modules/store/src/actions_subject.ts","../../../../modules/store/src/tokens.ts","../../../../modules/store/src/utils.ts","../../../../modules/store/src/reducer_manager.ts","../../../../modules/store/src/scanned_actions_subject.ts","../../../../modules/store/src/state.ts","../../../../modules/store/src/store.ts","../../../../modules/store/src/flags.ts","../../../../modules/store/src/selector.ts","../../../../modules/store/src/meta-reducers/utils.ts","../../../../modules/store/src/meta-reducers/immutability_reducer.ts","../../../../modules/store/src/meta-reducers/serialization_reducer.ts","../../../../modules/store/src/meta-reducers/inNgZoneAssert_reducer.ts","../../../../modules/store/src/runtime_checks.ts","../../../../modules/store/src/store_module.ts","../../../../modules/store/src/reducer_creator.ts"],"names":["ngCore.NgZone"],"mappings":"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","sourcesContent":["export const REGISTERED_ACTION_TYPES: { [actionType: string]: number } = {};\n\nexport function resetRegisteredActionTypes() {\n  for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n    delete REGISTERED_ACTION_TYPES[key];\n  }\n}\n","import {\n  Creator,\n  ActionCreator,\n  TypedAction,\n  FunctionWithParametersType,\n  NotAllowedCheck,\n  Props,\n} from './models';\nimport { REGISTERED_ACTION_TYPES } from './globals';\n\n// Action creators taken from ts-action library and modified a bit to better\n// fit current NgRx usage. Thank you Nicholas Jamieson (@cartant).\n\nexport function createAction<T extends string>(\n  type: T\n): ActionCreator<T, () => TypedAction<T>>;\nexport function createAction<T extends string, P extends object>(\n  type: T,\n  config: Props<P> & NotAllowedCheck<P>\n): ActionCreator<T, (props: P & NotAllowedCheck<P>) => P & TypedAction<T>>;\nexport function createAction<\n  T extends string,\n  P extends any[],\n  R extends object\n>(\n  type: T,\n  creator: Creator<P, R> & NotAllowedCheck<R>\n): FunctionWithParametersType<P, R & TypedAction<T>> & TypedAction<T>;\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nexport function createAction<T extends string, C extends Creator>(\n  type: T,\n  config?: { _as: 'props' } | C\n): ActionCreator<T> {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n\n  if (typeof config === 'function') {\n    return defineType(type, (...args: any[]) => ({\n      ...config(...args),\n      type,\n    }));\n  }\n  const as = config ? config._as : 'empty';\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({ type }));\n    case 'props':\n      return defineType(type, (props: object) => ({\n        ...props,\n        type,\n      }));\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n\nexport function props<P extends object>(): Props<P> {\n  return { _as: 'props', _p: undefined! };\n}\n\nexport function union<\n  C extends { [key: string]: ActionCreator<string, Creator> }\n>(creators: C): ReturnType<C[keyof C]> {\n  return undefined!;\n}\n\nfunction defineType<T extends string>(\n  type: T,\n  creator: Creator\n): ActionCreator<T> {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false,\n  });\n}\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action } from './models';\n\nexport const INIT = '@ngrx/store/init' as '@ngrx/store/init';\n\n@Injectable()\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\n  constructor() {\n    super({ type: INIT });\n  }\n\n  next(action: Action): void {\n    if (typeof action === 'function') {\n      throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n    } else if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n\nexport const ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n","import { InjectionToken } from '@angular/core';\nimport { RuntimeChecks, MetaReducer } from './models';\n\nexport const _ROOT_STORE_GUARD = new InjectionToken<void>(\n  '@ngrx/store Internal Root Guard'\n);\nexport const _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Internal Reducer Factory Provider'\n);\nexport const INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\n\nexport const _FEATURE_CONFIGS = new InjectionToken(\n  '@ngrx/store Internal Feature Configs'\n);\n\nexport const _STORE_FEATURES = new InjectionToken(\n  '@ngrx/store Internal Store Features'\n);\n\nexport const _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nexport const USER_PROVIDED_META_REDUCERS = new InjectionToken<MetaReducer[]>(\n  '@ngrx/store User Provided Meta Reducers'\n);\n\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nexport const META_REDUCERS = new InjectionToken<MetaReducer[]>(\n  '@ngrx/store Meta Reducers'\n);\n\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nexport const _RESOLVED_META_REDUCERS = new InjectionToken<MetaReducer>(\n  '@ngrx/store Internal Resolved Meta Reducers'\n);\n\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nexport const USER_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store User Runtime Checks Config'\n);\n\n/**\n * Runtime checks defined by the user via forRoot()\n */\nexport const _USER_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store Internal User Runtime Checks Config'\n);\n\n/**\n * Runtime checks currently in use\n */\nexport const _ACTIVE_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store Internal Runtime Checks'\n);\n\nexport const _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken<void>(\n  '@ngrx/store Check if Action types are unique'\n);\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerFactory,\n  ActionReducerMap,\n  MetaReducer,\n  InitialState,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: any = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState: any = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer: any = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter((key) => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\nexport function compose<A = any, F = any>(...functions: any[]): (i: A) => F;\nexport function compose(...functions: any[]) {\n  return function (arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    (reducerFactory as any) = compose.apply(null, [\n      ...metaReducers,\n      reducerFactory,\n    ]);\n  }\n\n  return (reducers: ActionReducerMap<T, V>, initialState?: InitialState<T>) => {\n    const reducer = reducerFactory(reducers);\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? (initialState as T) : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nexport function createFeatureReducerFactory<T, V extends Action = Action>(\n  metaReducers?: MetaReducer<T, V>[]\n): (reducer: ActionReducer<T, V>, initialState?: T) => ActionReducer<T, V> {\n  const reducerFactory =\n    Array.isArray(metaReducers) && metaReducers.length > 0\n      ? compose<ActionReducer<T, V>>(...metaReducers)\n      : (r: ActionReducer<T, V>) => r;\n\n  return (reducer: ActionReducer<T, V>, initialState?: T) => {\n    reducer = reducerFactory(reducer);\n\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { ActionsSubject } from './actions_subject';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerFactory,\n  ActionReducerMap,\n  StoreFeature,\n} from './models';\nimport { INITIAL_REDUCERS, INITIAL_STATE, REDUCER_FACTORY } from './tokens';\nimport {\n  createFeatureReducerFactory,\n  createReducerFactory,\n  omit,\n} from './utils';\n\nexport abstract class ReducerObservable extends Observable<\n  ActionReducer<any, any>\n> {}\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\n\n@Injectable()\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\n  implements OnDestroy {\n  constructor(\n    private dispatcher: ReducerManagerDispatcher,\n    @Inject(INITIAL_STATE) private initialState: any,\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\n    @Inject(REDUCER_FACTORY)\n    private reducerFactory: ActionReducerFactory<any, any>\n  ) {\n    super(reducerFactory(reducers, initialState));\n  }\n\n  addFeature(feature: StoreFeature<any, any>) {\n    this.addFeatures([feature]);\n  }\n\n  addFeatures(features: StoreFeature<any, any>[]) {\n    const reducers = features.reduce(\n      (\n        reducerDict,\n        { reducers, reducerFactory, metaReducers, initialState, key }\n      ) => {\n        const reducer =\n          typeof reducers === 'function'\n            ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n            : createReducerFactory(reducerFactory, metaReducers)(\n                reducers,\n                initialState\n              );\n\n        reducerDict[key] = reducer;\n        return reducerDict;\n      },\n      {} as { [key: string]: ActionReducer<any, any> }\n    );\n\n    this.addReducers(reducers);\n  }\n\n  removeFeature(feature: StoreFeature<any, any>) {\n    this.removeFeatures([feature]);\n  }\n\n  removeFeatures(features: StoreFeature<any, any>[]) {\n    this.removeReducers(features.map((p) => p.key));\n  }\n\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\n    this.addReducers({ [key]: reducer });\n  }\n\n  addReducers(reducers: { [key: string]: ActionReducer<any, any> }) {\n    this.reducers = { ...this.reducers, ...reducers };\n    this.updateReducers(Object.keys(reducers));\n  }\n\n  removeReducer(featureKey: string) {\n    this.removeReducers([featureKey]);\n  }\n\n  removeReducers(featureKeys: string[]) {\n    featureKeys.forEach((key) => {\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/ as any;\n    });\n    this.updateReducers(featureKeys);\n  }\n\n  private updateReducers(featureKeys: string[]) {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next(<Action>{\n      type: UPDATE,\n      features: featureKeys,\n    });\n  }\n\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\n  ReducerManager,\n  { provide: ReducerObservable, useExisting: ReducerManager },\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Action } from './models';\n\n@Injectable()\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  queueScheduler,\n  Subscription,\n} from 'rxjs';\nimport { observeOn, scan, withLatestFrom } from 'rxjs/operators';\n\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\nimport { INITIAL_STATE } from './tokens';\n\nexport abstract class StateObservable extends Observable<any> {}\n\n@Injectable()\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\n\n  private stateSubscription: Subscription;\n\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n    @Inject(INITIAL_STATE) initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = actions$.pipe(\n      observeOn(queueScheduler)\n    );\n    const withLatestReducer$: Observable<[\n      Action,\n      ActionReducer<any, Action>\n    ]> = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n\n    const seed: StateActionPair<T> = { state: initialState };\n    const stateAndAction$: Observable<{\n      state: any;\n      action?: Action;\n    }> = withLatestReducer$.pipe(\n      scan<[Action, ActionReducer<T, Action>], StateActionPair<T>>(\n        reduceState,\n        seed\n      )\n    );\n\n    this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n      this.next(state);\n      scannedActions.next(action!);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n","import { Injectable, Provider } from '@angular/core';\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer, FunctionIsNotAllowed } from './models';\nimport { ReducerManager } from './reducer_manager';\nimport { StateObservable } from './state';\n\n@Injectable()\nexport class Store<T = object> extends Observable<T>\n  implements Observer<Action> {\n  constructor(\n    state$: StateObservable,\n    private actionsObserver: ActionsSubject,\n    private reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Observable<K>;\n  select<K, Props = any>(\n    mapFn: (state: T, props: Props) => K,\n    props: Props\n  ): Observable<K>;\n  select<a extends keyof T>(key: a): Observable<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Observable<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Observable<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Observable<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Observable<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Observable<T[a][b][c][d][e][f]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e],\n    K = any\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f,\n    ...paths: string[]\n  ): Observable<K>;\n  select<Props = any, K = any>(\n    pathOrMapFn: ((state: T, props?: Props) => K) | string,\n    ...paths: string[]\n  ): Observable<any> {\n    return (select as any).call(null, pathOrMapFn, ...paths)(this);\n  }\n\n  lift<R>(operator: Operator<T, R>): Store<R> {\n    const store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch<V extends Action = Action>(\n    action: V &\n      FunctionIsNotAllowed<\n        V,\n        'Functions are not allowed to be dispatched. Did you forget to call the action creator function?'\n      >\n  ) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action: Action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err: any) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer<Key extends Extract<keyof T, string>>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n\nexport const STORE_PROVIDERS: Provider[] = [Store];\n\nexport function select<T, Props, K>(\n  mapFn: (state: T, props: Props) => K,\n  props?: Props\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, a extends keyof T>(\n  key: a\n): (source$: Observable<T>) => Observable<T[a]>;\nexport function select<T, a extends keyof T, b extends keyof T[a]>(\n  key1: a,\n  key2: b\n): (source$: Observable<T>) => Observable<T[a][b]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b]\n>(\n  key1: a,\n  key2: b,\n  key3: c\n): (source$: Observable<T>) => Observable<T[a][b][c]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d\n): (source$: Observable<T>) => Observable<T[a][b][c][d]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e][f]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e],\n  K = any\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f,\n  ...paths: string[]\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, Props, K>(\n  pathOrMapFn: ((state: T, props?: Props) => any) | string,\n  propsOrPath?: Props | string,\n  ...paths: string[]\n) {\n  return function selectOperator(source$: Observable<T>): Observable<K> {\n    let mapped$: Observable<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [<string>propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(\n        map((source) => pathOrMapFn(source, <Props>propsOrPath))\n      );\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\n","let _ngrxMockEnvironment = false;\nexport function setNgrxMockEnvironment(value: boolean): void {\n  _ngrxMockEnvironment = value;\n}\nexport function isNgrxMockEnvironment(): boolean {\n  return _ngrxMockEnvironment;\n}\n","import { Selector, SelectorWithProps } from './models';\nimport { isDevMode } from '@angular/core';\nimport { isNgrxMockEnvironment } from './flags';\n\nexport type AnyFn = (...args: any[]) => any;\n\nexport type MemoizedProjection = {\n  memoized: AnyFn;\n  reset: () => void;\n  setResult: (result?: any) => void;\n  clearResult: () => void;\n};\n\nexport type MemoizeFn = (t: AnyFn) => MemoizedProjection;\n\nexport type ComparatorFn = (a: any, b: any) => boolean;\n\nexport type DefaultProjectorFn<T> = (...args: any[]) => T;\n\nexport interface MemoizedSelector<\n  State,\n  Result,\n  ProjectorFn = DefaultProjectorFn<Result>\n> extends Selector<State, Result> {\n  release(): void;\n  projector: ProjectorFn;\n  setResult: (result?: Result) => void;\n  clearResult: () => void;\n}\n\nexport interface MemoizedSelectorWithProps<\n  State,\n  Props,\n  Result,\n  ProjectorFn = DefaultProjectorFn<Result>\n> extends SelectorWithProps<State, Props, Result> {\n  release(): void;\n  projector: ProjectorFn;\n  setResult: (result?: Result) => void;\n  clearResult: () => void;\n}\n\nexport function isEqualCheck(a: any, b: any): boolean {\n  return a === b;\n}\n\nfunction isArgumentsChanged(\n  args: IArguments,\n  lastArguments: IArguments,\n  comparator: ComparatorFn\n) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function resultMemoize(\n  projectionFn: AnyFn,\n  isResultEqual: ComparatorFn\n) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n\nexport function defaultMemoize(\n  projectionFn: AnyFn,\n  isArgumentsEqual = isEqualCheck,\n  isResultEqual = isEqualCheck\n): MemoizedProjection {\n  let lastArguments: null | IArguments = null;\n  // tslint:disable-next-line:no-any anything could be the result.\n  let lastResult: any = null;\n  let overrideResult: any;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  function setResult(result: any = undefined) {\n    overrideResult = { result };\n  }\n\n  function clearResult() {\n    overrideResult = undefined;\n  }\n\n  // tslint:disable-next-line:no-any anything could be the result.\n  function memoized(): any {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments as any);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n\n    const newResult = projectionFn.apply(null, arguments as any);\n    lastArguments = arguments;\n\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n\n    return newResult;\n  }\n\n  return { memoized, reset, setResult, clearResult };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, Result>(\n  selectors: [Selector<State, S1>],\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  selectors: [SelectorWithProps<State, Props, S1>],\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>],\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>\n  ],\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>, Selector<State, S3>],\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  s8: SelectorWithProps<State, Props, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>,\n    Selector<State, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>,\n    SelectorWithProps<State, Props, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector(\n  ...input: any[]\n): MemoizedSelector<any, any> | MemoizedSelectorWithProps<any, any, any> {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nexport function defaultStateFn(\n  state: any,\n  selectors: Selector<any, any>[] | SelectorWithProps<any, any, any>[],\n  props: any,\n  memoizedProjector: MemoizedProjection\n): any {\n  if (props === undefined) {\n    const args = (<Selector<any, any>[]>selectors).map((fn) => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n\n  const args = (<SelectorWithProps<any, any, any>[]>selectors).map((fn) =>\n    fn(state, props)\n  );\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n\nexport type SelectorFactoryConfig<T = any, V = any> = {\n  stateFn: (\n    state: T,\n    selectors: Selector<any, any>[],\n    props: any,\n    memoizedProjector: MemoizedProjection\n  ) => V;\n};\n\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => MemoizedSelector<T, V>;\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => MemoizedSelector<T, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => MemoizedSelectorWithProps<T, Props, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => MemoizedSelectorWithProps<T, Props, V>;\nexport function createSelectorFactory(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<any, any> = {\n    stateFn: defaultStateFn,\n  }\n) {\n  return function (\n    ...input: any[]\n  ): MemoizedSelector<any, any> | MemoizedSelectorWithProps<any, any, any> {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(\n      (selector: any) =>\n        selector.release && typeof selector.release === 'function'\n    );\n\n    const memoizedProjector = memoize(function (...selectors: any[]) {\n      return projector.apply(null, selectors);\n    });\n\n    const memoizedState = defaultMemoize(function (state: any, props: any) {\n      return options.stateFn.apply(null, [\n        state,\n        selectors,\n        props,\n        memoizedProjector,\n      ]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n\n      memoizedSelectors.forEach((selector) => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n      setResult: memoizedState.setResult,\n      clearResult: memoizedState.clearResult,\n    });\n  };\n}\n\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T>;\nexport function createFeatureSelector<T, V>(\n  featureName: keyof T\n): MemoizedSelector<T, V>;\nexport function createFeatureSelector(\n  featureName: any\n): MemoizedSelector<any, any> {\n  return createSelector(\n    (state: any) => {\n      const featureState = state[featureName];\n      if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n        console.warn(\n          `@ngrx/store: The feature name \\\"${featureName}\\\" does ` +\n            'not exist in the state, therefore createFeatureSelector ' +\n            'cannot access it.  Be sure it is imported in a loaded module ' +\n            `using StoreModule.forRoot('${featureName}', ...) or ` +\n            `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n            'state is intended to be undefined, as is the case with router ' +\n            'state, this development-only warning message can be ignored.'\n        );\n      }\n      return featureState;\n    },\n    (featureState: any) => featureState\n  );\n}\n","export const RUNTIME_CHECK_URL =\n  'https://ngrx.io/guide/store/configuration/runtime-checks';\n\nexport function isUndefined(target: any): target is undefined {\n  return target === undefined;\n}\n\nexport function isNull(target: any): target is null {\n  return target === null;\n}\n\nexport function isArray(target: any): target is Array<any> {\n  return Array.isArray(target);\n}\n\nexport function isString(target: any): target is string {\n  return typeof target === 'string';\n}\n\nexport function isBoolean(target: any): target is boolean {\n  return typeof target === 'boolean';\n}\n\nexport function isNumber(target: any): target is number {\n  return typeof target === 'number';\n}\n\nexport function isObjectLike(target: any): target is object {\n  return typeof target === 'object' && target !== null;\n}\n\nexport function isObject(target: any): target is object {\n  return isObjectLike(target) && !isArray(target);\n}\n\nexport function isPlainObject(target: any): target is object {\n  if (!isObject(target)) {\n    return false;\n  }\n\n  const targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\n\nexport function isFunction(target: any): target is Function {\n  return typeof target === 'function';\n}\n\nexport function isComponent(target: any) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\n\nexport function hasOwnProperty(target: object, propertyName: string): boolean {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n","import { ActionReducer, Action } from '../models';\nimport { isFunction, hasOwnProperty, isObjectLike } from './utils';\n\nexport function immutabilityCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function (state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n\n    const nextState = reducer(state, act);\n\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\n\nfunction freeze(target: any) {\n  Object.freeze(target);\n\n  const targetIsFunction = isFunction(target);\n\n  Object.getOwnPropertyNames(target).forEach((prop) => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n\n    if (\n      hasOwnProperty(target, prop) &&\n      (targetIsFunction\n        ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n        : true)\n    ) {\n      const propValue = target[prop];\n\n      if (\n        (isObjectLike(propValue) || isFunction(propValue)) &&\n        !Object.isFrozen(propValue)\n      ) {\n        freeze(propValue);\n      }\n    }\n  });\n\n  return target;\n}\n","import { ActionReducer, Action } from '../models';\nimport {\n  isPlainObject,\n  isUndefined,\n  isNull,\n  isNumber,\n  isBoolean,\n  isString,\n  isArray,\n  RUNTIME_CHECK_URL,\n  isComponent,\n} from './utils';\n\nexport function serializationCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function (state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n\n    const nextState = reducer(state, action);\n\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n\n    return nextState;\n  };\n}\n\nfunction getUnserializable(\n  target?: any,\n  path: string[] = []\n): false | { path: string[]; value: any } {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target,\n    };\n  }\n\n  const keys = Object.keys(target);\n  return keys.reduce<false | { path: string[]; value: any }>((result, key) => {\n    if (result) {\n      return result;\n    }\n\n    const value = (target as any)[key];\n\n    // Ignore Ivy components\n    if (isComponent(value)) {\n      return result;\n    }\n\n    if (\n      isUndefined(value) ||\n      isNull(value) ||\n      isNumber(value) ||\n      isBoolean(value) ||\n      isString(value) ||\n      isArray(value)\n    ) {\n      return false;\n    }\n\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n\n    return {\n      path: [...path, key],\n      value,\n    };\n  }, false);\n}\n\nfunction throwIfUnserializable(\n  unserializable: false | { path: string[]; value: any },\n  context: 'state' | 'action'\n) {\n  if (unserializable === false) {\n    return;\n  }\n\n  const unserializablePath = unserializable.path.join('.');\n  const error: any = new Error(\n    `Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`\n  );\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\n","import * as ngCore from '@angular/core';\nimport { Action, ActionReducer } from '../models';\nimport { RUNTIME_CHECK_URL } from './utils';\n\nexport function inNgZoneAssertMetaReducer(\n  reducer: ActionReducer<any, Action>,\n  checks: { action: (action: Action) => boolean }\n) {\n  return function (state: any, action: Action) {\n    if (checks.action(action) && !ngCore.NgZone.isInAngularZone()) {\n      throw new Error(\n        `Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`\n      );\n    }\n    return reducer(state, action);\n  };\n}\n","import { isDevMode, Provider } from '@angular/core';\nimport {\n  serializationCheckMetaReducer,\n  immutabilityCheckMetaReducer,\n  inNgZoneAssertMetaReducer,\n} from './meta-reducers';\nimport { RuntimeChecks, MetaReducer, Action } from './models';\nimport {\n  _USER_RUNTIME_CHECKS,\n  _ACTIVE_RUNTIME_CHECKS,\n  META_REDUCERS,\n  USER_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { REGISTERED_ACTION_TYPES } from './globals';\nimport { RUNTIME_CHECK_URL } from './meta-reducers/utils';\n\nexport function createActiveRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): RuntimeChecks {\n  if (isDevMode()) {\n    return {\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false,\n      ...runtimeChecks,\n    };\n  }\n\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false,\n  };\n}\n\nexport function createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionSerializability || strictStateSerializability\n      ? serializationCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionSerializability && !ignoreNgrxAction(action),\n          state: () => strictStateSerializability,\n        })\n      : reducer;\n}\n\nexport function createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionImmutability || strictStateImmutability\n      ? immutabilityCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionImmutability && !ignoreNgrxAction(action),\n          state: () => strictStateImmutability,\n        })\n      : reducer;\n}\n\nfunction ignoreNgrxAction(action: Action) {\n  return action.type.startsWith('@ngrx');\n}\n\nexport function createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionWithinNgZone\n      ? inNgZoneAssertMetaReducer(reducer, {\n          action: (action) =>\n            strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n      : reducer;\n}\n\nexport function provideRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): Provider[] {\n  return [\n    {\n      provide: _USER_RUNTIME_CHECKS,\n      useValue: runtimeChecks,\n    },\n    {\n      provide: USER_RUNTIME_CHECKS,\n      useFactory: _runtimeChecksFactory,\n      deps: [_USER_RUNTIME_CHECKS],\n    },\n    {\n      provide: _ACTIVE_RUNTIME_CHECKS,\n      deps: [USER_RUNTIME_CHECKS],\n      useFactory: createActiveRuntimeChecks,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createImmutabilityCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createSerializationCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createInNgZoneCheckMetaReducer,\n    },\n  ];\n}\n\nexport function checkForActionTypeUniqueness(): Provider[] {\n  return [\n    {\n      provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: _actionTypeUniquenessCheck,\n    },\n  ];\n}\n\nexport function _runtimeChecksFactory(\n  runtimeChecks: RuntimeChecks\n): RuntimeChecks {\n  return runtimeChecks;\n}\n\nexport function _actionTypeUniquenessCheck(config: RuntimeChecks): void {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n    .filter(([, registrations]) => registrations > 1)\n    .map(([type]) => type);\n\n  if (duplicates.length) {\n    throw new Error(\n      `Action types are registered more than once, ${duplicates\n        .map((type) => `\"${type}\"`)\n        .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`\n    );\n  }\n}\n","import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n  RuntimeChecks,\n} from './models';\nimport { combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n  _STORE_FEATURES,\n  _FEATURE_CONFIGS,\n  USER_PROVIDED_META_REDUCERS,\n  _RESOLVED_META_REDUCERS,\n  _ROOT_STORE_GUARD,\n  _ACTIVE_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS, Store } from './store';\nimport {\n  provideRuntimeChecks,\n  checkForActionTypeUniqueness,\n} from './runtime_checks';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject,\n    store: Store<any>,\n    @Optional()\n    @Inject(_ROOT_STORE_GUARD)\n    guard: any,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(_STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager,\n    root: StoreRootModule,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      const reducers = featureReducerCollection /*TODO(#823)*/![index];\n\n      return {\n        ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState),\n      };\n    });\n\n    reducerManager.addFeatures(feats);\n  }\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n}\n\nexport interface StoreConfig<T, V extends Action = Action> {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n}\n\nexport interface RootStoreConfig<T, V extends Action = Action>\n  extends StoreConfig<T, V> {\n  runtimeChecks?: Partial<RuntimeChecks>;\n}\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: RootStoreConfig<T, V>\n  ): ModuleWithProviders<StoreRootModule>;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: RootStoreConfig<any, any> = {}\n  ): ModuleWithProviders<StoreRootModule> {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        {\n          provide: _ROOT_STORE_GUARD,\n          useFactory: _provideForRootGuard,\n          deps: [[Store, new Optional(), new SkipSelf()]],\n        },\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: USER_PROVIDED_META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _RESOLVED_META_REDUCERS,\n          deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n          useFactory: _concatMetaReducers,\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n        provideRuntimeChecks(config.runtimeChecks),\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> | InjectionToken<StoreConfig<any, any>> = {}\n  ): ModuleWithProviders<StoreFeatureModule> {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: _FEATURE_CONFIGS,\n          multi: true,\n          useValue: config,\n        },\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: {\n            key: featureName,\n            reducerFactory:\n              !(config instanceof InjectionToken) && config.reducerFactory\n                ? config.reducerFactory\n                : combineReducers,\n            metaReducers:\n              !(config instanceof InjectionToken) && config.metaReducers\n                ? config.metaReducers\n                : [],\n            initialState:\n              !(config instanceof InjectionToken) && config.initialState\n                ? config.initialState\n                : undefined,\n          },\n        },\n        {\n          provide: _STORE_FEATURES,\n          deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n          useFactory: _createFeatureStore,\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureStore(\n  injector: Injector,\n  configs: StoreConfig<any, any>[] | InjectionToken<StoreConfig<any, any>>[],\n  featureStores: StoreFeature<any, any>[]\n) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory\n          ? conf.reducerFactory\n          : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState,\n      };\n    }\n    return feat;\n  });\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map((reducer) => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\nexport function _concatMetaReducers(\n  metaReducers: MetaReducer[],\n  userProvidedMetaReducers: MetaReducer[]\n): MetaReducer[] {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\n\nexport function _provideForRootGuard(store: Store<any>): any {\n  if (store) {\n    throw new TypeError(\n      `StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`\n    );\n  }\n  return 'guarded';\n}\n","import { ActionCreator, ActionReducer, ActionType, Action } from './models';\n\n// Return type of the `on` fn.\nexport interface On<S> {\n  reducer: ActionReducer<S>;\n  types: string[];\n}\n\n// Specialized Reducer that is aware of the Action type it needs to handle\nexport interface OnReducer<S, C extends ActionCreator[]> {\n  (state: S, action: ActionType<C[number]>): S;\n}\n\nexport function on<C1 extends ActionCreator, S>(\n  creator1: C1,\n  reducer: OnReducer<S, [C1]>\n): On<S>;\nexport function on<C1 extends ActionCreator, C2 extends ActionCreator, S>(\n  creator1: C1,\n  creator2: C2,\n  reducer: OnReducer<S, [C1, C2]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  reducer: OnReducer<S, [C1, C2, C3]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  reducer: OnReducer<S, [C1, C2, C3, C4]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  C9 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  creator9: C9,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8, C9]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  C9 extends ActionCreator,\n  C10 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  creator9: C9,\n  creator10: C10,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10]>\n): On<S>;\nexport function on<S>(\n  creator: ActionCreator,\n  ...rest: (ActionCreator | OnReducer<S, [ActionCreator]>)[]\n): On<S>;\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * **To maintain type-safety**: pass 10 or less `ActionCreator`'s.\n * @returns an association of action types with a state change function.\n */\nexport function on(\n  ...args: (ActionCreator | Function)[]\n): { reducer: Function; types: string[] } {\n  const reducer = args.pop() as Function;\n  const types = args.reduce(\n    (result, creator) => [...result, (creator as ActionCreator).type],\n    [] as string[]\n  );\n  return { reducer, types };\n}\n\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be wrapped with another function, if you are using View Engine AOT.\n * In case you are using Ivy (or only JIT View Engine) the extra wrapper function is not required.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n *\n * **Declaring a reducer creator using a wrapper function (Only needed if using View Engine AOT)**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n */\nexport function createReducer<S, A extends Action = Action>(\n  initialState: S,\n  ...ons: On<S>[]\n): ActionReducer<S, A> {\n  const map = new Map<string, ActionReducer<S, A>>();\n  for (let on of ons) {\n    for (let type of on.types) {\n      if (map.has(type)) {\n        const existingReducer = map.get(type) as ActionReducer<S, A>;\n        const newReducer: ActionReducer<S, A> = (state, action) =>\n          on.reducer(existingReducer(state, action), action);\n        map.set(type, newReducer);\n      } else {\n        map.set(type, on.reducer);\n      }\n    }\n  }\n\n  return function (state: S = initialState, action: A): S {\n    const reducer = map.get(action.type);\n    return reducer ? reducer(state, action) : state;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}