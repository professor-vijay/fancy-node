{"ast":null,"code":"import _classCallCheck from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/master-sp-new/Biz1Maket_Single_Store/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { Directive, ElementRef, Renderer2, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Optional, Host, ContentChild, SkipSelf, NgModule } from '@angular/core';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { AbstractControl, NgModel, FormControlName, FormControlDirective, NgControl } from '@angular/forms';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Subject, Subscription } from 'rxjs';\nimport { filter, map, tap, startWith, takeUntil } from 'rxjs/operators';\nimport { __decorate, __metadata } from 'tslib';\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\n/**\n * @fileoverview added by tsickle\n * Generated from: form.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ng-zorro-antd/core/config';\nimport * as ɵngcc2 from 'ng-zorro-antd/i18n';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from 'ng-zorro-antd/icon';\nimport * as ɵngcc5 from 'ng-zorro-antd/core/outlet';\nvar _c0 = [\"*\"];\n\nfunction NzFormControlComponent_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"nzType\", ctx_r0.iconType);\n  }\n}\n\nfunction NzFormControlComponent_div_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.innerTip);\n  }\n}\n\nvar _c1 = function _c1(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NzFormControlComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(1, \"div\");\n    ɵngcc0.ɵɵtemplate(2, NzFormControlComponent_div_5_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@helpMotion\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r1.innerTip)(\"nzStringTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c1, ctx_r1.validateControl));\n  }\n}\n\nfunction NzFormControlComponent_div_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.nzExtra);\n  }\n}\n\nfunction NzFormControlComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, NzFormControlComponent_div_6_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r2.nzExtra);\n  }\n}\n\nvar NZ_CONFIG_COMPONENT_NAME = 'form';\n\nvar NzFormDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} nzConfigService\n   * @param {?} elementRef\n   * @param {?} renderer\n   */\n  function NzFormDirective(nzConfigService, elementRef, renderer) {\n    _classCallCheck(this, NzFormDirective);\n\n    this.nzConfigService = nzConfigService;\n    this.renderer = renderer;\n    this.nzLayout = 'horizontal';\n    this.nzNoColon = false;\n    this.nzAutoTips = {};\n    this.nzDisableAutoTips = false;\n    this.destroy$ = new Subject();\n    this.inputChanges$ = new Subject();\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\n  }\n  /**\n   * @template K\n   * @param {?} changeType\n   * @return {?}\n   */\n\n\n  _createClass(NzFormDirective, [{\n    key: \"getInputObservable\",\n    value: function getInputObservable(changeType) {\n      return this.inputChanges$.pipe(filter(\n      /**\n      * @param {?} changes\n      * @return {?}\n      */\n      function (changes) {\n        return changeType in changes;\n      }), map(\n      /**\n      * @param {?} value\n      * @return {?}\n      */\n      function (value) {\n        return value[\n        /** @type {?} */\n        changeType];\n      }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.inputChanges$.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzFormDirective;\n}();\n\nNzFormDirective.ɵfac = function NzFormDirective_Factory(t) {\n  return new (t || NzFormDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NzConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNzFormDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NzFormDirective,\n  selectors: [[\"\", \"nz-form\", \"\"]],\n  hostVars: 6,\n  hostBindings: function NzFormDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-form-horizontal\", ctx.nzLayout === \"horizontal\")(\"ant-form-vertical\", ctx.nzLayout === \"vertical\")(\"ant-form-inline\", ctx.nzLayout === \"inline\");\n    }\n  },\n  inputs: {\n    nzLayout: \"nzLayout\",\n    nzNoColon: \"nzNoColon\",\n    nzAutoTips: \"nzAutoTips\",\n    nzDisableAutoTips: \"nzDisableAutoTips\"\n  },\n  exportAs: [\"nzForm\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nNzFormDirective.ctorParameters = function () {\n  return [{\n    type: NzConfigService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nNzFormDirective.propDecorators = {\n  nzLayout: [{\n    type: Input\n  }],\n  nzNoColon: [{\n    type: Input\n  }],\n  nzAutoTips: [{\n    type: Input\n  }],\n  nzDisableAutoTips: [{\n    type: Input\n  }]\n};\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), InputBoolean(), __metadata(\"design:type\", Boolean)], NzFormDirective.prototype, \"nzNoColon\", void 0);\n\n__decorate([WithConfig(NZ_CONFIG_COMPONENT_NAME), __metadata(\"design:type\", Object)], NzFormDirective.prototype, \"nzAutoTips\", void 0);\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzFormDirective.prototype, \"nzDisableAutoTips\", void 0);\n\nif (false) {\n  /** @type {?} */\n  NzFormDirective.ngAcceptInputType_nzNoColon;\n  /** @type {?} */\n\n  NzFormDirective.ngAcceptInputType_nzDisableAutoTips;\n  /** @type {?} */\n\n  NzFormDirective.prototype.nzLayout;\n  /** @type {?} */\n\n  NzFormDirective.prototype.nzNoColon;\n  /** @type {?} */\n\n  NzFormDirective.prototype.nzAutoTips;\n  /** @type {?} */\n\n  NzFormDirective.prototype.nzDisableAutoTips;\n  /** @type {?} */\n\n  NzFormDirective.prototype.destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormDirective.prototype.inputChanges$;\n  /** @type {?} */\n\n  NzFormDirective.prototype.nzConfigService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormDirective.prototype.renderer;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: form-item.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 *\n */\n\n\nvar NzFormItemComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} renderer\n   * @param {?} cdr\n   */\n  function NzFormItemComponent(elementRef, renderer, cdr) {\n    _classCallCheck(this, NzFormItemComponent);\n\n    this.cdr = cdr;\n    this.status = null;\n    this.hasFeedback = false;\n    this.withHelpClass = false;\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\n  }\n  /**\n   * @deprecated 10.0.0. 'nzFlex' is deprecated and going to be removed in 10.0.0.\n   * @param {?} _\n   * @return {?}\n   */\n\n\n  _createClass(NzFormItemComponent, [{\n    key: \"nzFlex\",\n    set: function set(_) {\n      warnDeprecation(\"'nzFlex' is deprecated and going to be removed in 10.0.0.\");\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"setWithHelpViaTips\",\n    value: function setWithHelpViaTips(value) {\n      this.withHelpClass = value;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} status\n     * @return {?}\n     */\n\n  }, {\n    key: \"setStatus\",\n    value: function setStatus(status) {\n      this.status = status;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} hasFeedback\n     * @return {?}\n     */\n\n  }, {\n    key: \"setHasFeedback\",\n    value: function setHasFeedback(hasFeedback) {\n      this.hasFeedback = hasFeedback;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzFormItemComponent;\n}();\n\nNzFormItemComponent.ɵfac = function NzFormItemComponent_Factory(t) {\n  return new (t || NzFormItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNzFormItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzFormItemComponent,\n  selectors: [[\"nz-form-item\"]],\n  hostVars: 12,\n  hostBindings: function NzFormItemComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-form-item-has-success\", ctx.status === \"success\")(\"ant-form-item-has-warning\", ctx.status === \"warning\")(\"ant-form-item-has-error\", ctx.status === \"error\")(\"ant-form-item-is-validating\", ctx.status === \"validating\")(\"ant-form-item-has-feedback\", ctx.hasFeedback && ctx.status)(\"ant-form-item-with-help\", ctx.withHelpClass);\n    }\n  },\n  inputs: {\n    nzFlex: \"nzFlex\"\n  },\n  exportAs: [\"nzFormItem\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzFormItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzFormItemComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nNzFormItemComponent.propDecorators = {\n  nzFlex: [{\n    type: Input\n  }]\n};\n\nif (false) {\n  /** @type {?} */\n  NzFormItemComponent.prototype.status;\n  /** @type {?} */\n\n  NzFormItemComponent.prototype.hasFeedback;\n  /** @type {?} */\n\n  NzFormItemComponent.prototype.withHelpClass;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormItemComponent.prototype.destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormItemComponent.prototype.cdr;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: form-control.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar iconTypeMap =\n/** @type {?} */\n{\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n};\n\nvar NzFormControlComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} nzFormItemComponent\n   * @param {?} cdr\n   * @param {?} renderer\n   * @param {?} i18n\n   * @param {?} nzFormDirective\n   */\n  function NzFormControlComponent(elementRef, nzFormItemComponent, cdr, renderer, i18n, nzFormDirective) {\n    var _this = this;\n\n    _classCallCheck(this, NzFormControlComponent);\n\n    var _a, _b;\n\n    this.nzFormItemComponent = nzFormItemComponent;\n    this.cdr = cdr;\n    this.nzFormDirective = nzFormDirective;\n    this._hasFeedback = false;\n    this.validateChanges = Subscription.EMPTY;\n    this.validateString = null;\n    this.status = null;\n    this.destroyed$ = new Subject();\n    this.validateControl = null;\n    this.iconType = null;\n    this.innerTip = null;\n    this.nzAutoTips = {};\n    this.nzDisableAutoTips = 'default';\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control');\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(\n    /**\n    * @param {?} locale\n    * @return {?}\n    */\n    function (locale) {\n      return _this.localeId = locale.locale;\n    })));\n    this.subscribeAutoTips((_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips((_b = this.nzFormDirective) === null || _b === void 0 ? void 0 : _b.getInputObservable('nzDisableAutoTips').pipe(filter(\n    /**\n    * @return {?}\n    */\n    function () {\n      return _this.nzDisableAutoTips === 'default';\n    })));\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  _createClass(NzFormControlComponent, [{\n    key: \"disableAutoTips\",\n    get: function get() {\n      var _a;\n\n      return this.nzDisableAutoTips !== 'default' ? toBoolean(this.nzDisableAutoTips) : (_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzDisableAutoTips;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"nzHasFeedback\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      return this._hasFeedback;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._hasFeedback = toBoolean(value);\n\n      if (this.nzFormItemComponent) {\n        this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n      }\n    }\n  }, {\n    key: \"nzValidateStatus\",\n    set: function set(value) {\n      if (value instanceof AbstractControl || value instanceof NgModel) {\n        this.validateControl = value;\n        this.validateString = null;\n        this.watchControl();\n      } else if (value instanceof FormControlName) {\n        this.validateControl = value.control;\n        this.validateString = null;\n        this.watchControl();\n      } else {\n        this.validateString = value;\n        this.validateControl = null;\n        this.setStatus();\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"watchControl\",\n    value: function watchControl() {\n      var _this2 = this;\n\n      this.validateChanges.unsubscribe();\n      /** miss detect https://github.com/angular/angular/issues/10887 **/\n\n      if (this.validateControl && this.validateControl.statusChanges) {\n        this.validateChanges = this.validateControl.statusChanges.pipe(startWith(null), takeUntil(this.destroyed$)).subscribe(\n        /**\n        * @param {?} _\n        * @return {?}\n        */\n        function (_) {\n          if (!_this2.disableAutoTips) {\n            _this2.updateAutoErrorTip();\n          }\n\n          _this2.setStatus();\n\n          _this2.cdr.markForCheck();\n        });\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"setStatus\",\n    value: function setStatus() {\n      this.status = this.getControlStatus(this.validateString);\n      this.iconType = this.status ? iconTypeMap[this.status] : null;\n      this.innerTip = this.getInnerTip(this.status);\n\n      if (this.nzFormItemComponent) {\n        this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n        this.nzFormItemComponent.setStatus(this.status);\n      }\n    }\n    /**\n     * @private\n     * @param {?} validateString\n     * @return {?}\n     */\n\n  }, {\n    key: \"getControlStatus\",\n    value: function getControlStatus(validateString) {\n      /** @type {?} */\n      var status;\n\n      if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n        status = 'warning';\n      } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n        status = 'error';\n      } else if (validateString === 'validating' || validateString === 'pending' || this.validateControlStatus('PENDING')) {\n        status = 'validating';\n      } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n        status = 'success';\n      } else {\n        status = null;\n      }\n\n      return status;\n    }\n    /**\n     * @private\n     * @param {?} validStatus\n     * @param {?=} statusType\n     * @return {?}\n     */\n\n  }, {\n    key: \"validateControlStatus\",\n    value: function validateControlStatus(validStatus, statusType) {\n      if (!this.validateControl) {\n        return false;\n      } else {\n        var _this$validateControl = this.validateControl,\n            dirty = _this$validateControl.dirty,\n            touched = _this$validateControl.touched,\n            status = _this$validateControl.status;\n        return (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus);\n      }\n    }\n    /**\n     * @private\n     * @param {?} status\n     * @return {?}\n     */\n\n  }, {\n    key: \"getInnerTip\",\n    value: function getInnerTip(status) {\n      switch (status) {\n        case 'error':\n          return !this.disableAutoTips && this.autoErrorTip || this.nzErrorTip || null;\n\n        case 'validating':\n          return this.nzValidatingTip || null;\n\n        case 'success':\n          return this.nzSuccessTip || null;\n\n        case 'warning':\n          return this.nzWarningTip || null;\n\n        default:\n          return null;\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateAutoErrorTip\",\n    value: function updateAutoErrorTip() {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      if (this.validateControl) {\n        /** @type {?} */\n        var errors = this.validateControl.errors || {};\n        /** @type {?} */\n\n        var autoErrorTip = '';\n\n        for (var key in errors) {\n          if (errors.hasOwnProperty(key)) {\n            autoErrorTip = (_d = (_a = errors[key][this.localeId]) !== null && _a !== void 0 ? _a : (_c = (_b = this.nzAutoTips) === null || _b === void 0 ? void 0 : _b[this.localeId]) === null || _c === void 0 ? void 0 : _c[key]) !== null && _d !== void 0 ? _d : (_g = (_f = (_e = this.nzFormDirective) === null || _e === void 0 ? void 0 : _e.nzAutoTips) === null || _f === void 0 ? void 0 : _f[this.localeId]) === null || _g === void 0 ? void 0 : _g[key];\n          }\n\n          if (!!autoErrorTip) {\n            break;\n          }\n        }\n\n        this.autoErrorTip = autoErrorTip;\n      }\n    }\n    /**\n     * @private\n     * @param {?} observable\n     * @return {?}\n     */\n\n  }, {\n    key: \"subscribeAutoTips\",\n    value: function subscribeAutoTips(observable) {\n      var _this3 = this;\n\n      observable === null || observable === void 0 ? void 0 : observable.pipe(takeUntil(this.destroyed$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        if (!_this3.disableAutoTips) {\n          _this3.updateAutoErrorTip();\n\n          _this3.setStatus();\n\n          _this3.cdr.markForCheck();\n        }\n      });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var nzDisableAutoTips = changes.nzDisableAutoTips,\n          nzAutoTips = changes.nzAutoTips,\n          nzSuccessTip = changes.nzSuccessTip,\n          nzWarningTip = changes.nzWarningTip,\n          nzErrorTip = changes.nzErrorTip,\n          nzValidatingTip = changes.nzValidatingTip;\n\n      if (nzDisableAutoTips || nzAutoTips) {\n        this.updateAutoErrorTip();\n        this.setStatus();\n      } else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n        this.setStatus();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.setStatus();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyed$.next();\n      this.destroyed$.complete();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (!this.validateControl && !this.validateString) {\n        if (this.defaultValidateControl instanceof FormControlDirective) {\n          this.nzValidateStatus = this.defaultValidateControl.control;\n        } else {\n          this.nzValidateStatus =\n          /** @type {?} */\n          this.defaultValidateControl;\n        }\n      }\n    }\n  }]);\n\n  return NzFormControlComponent;\n}();\n\nNzFormControlComponent.ɵfac = function NzFormControlComponent_Factory(t) {\n  return new (t || NzFormControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NzFormItemComponent, 9), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NzI18nService), ɵngcc0.ɵɵdirectiveInject(NzFormDirective, 9));\n};\n\nNzFormControlComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzFormControlComponent,\n  selectors: [[\"nz-form-control\"]],\n  contentQueries: function NzFormControlComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgControl, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.defaultValidateControl = _t.first);\n    }\n  },\n  inputs: {\n    nzAutoTips: \"nzAutoTips\",\n    nzDisableAutoTips: \"nzDisableAutoTips\",\n    nzHasFeedback: \"nzHasFeedback\",\n    nzValidateStatus: \"nzValidateStatus\",\n    nzSuccessTip: \"nzSuccessTip\",\n    nzWarningTip: \"nzWarningTip\",\n    nzErrorTip: \"nzErrorTip\",\n    nzValidatingTip: \"nzValidatingTip\",\n    nzExtra: \"nzExtra\"\n  },\n  exportAs: [\"nzFormControl\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"ant-form-item-control-input\"], [1, \"ant-form-item-control-input-content\"], [1, \"ant-form-item-children-icon\"], [\"nz-icon\", \"\", 3, \"nzType\", 4, \"ngIf\"], [\"class\", \"ant-form-item-explain\", 4, \"ngIf\"], [\"class\", \"ant-form-item-extra\", 4, \"ngIf\"], [\"nz-icon\", \"\", 3, \"nzType\"], [1, \"ant-form-item-explain\"], [4, \"nzStringTemplateOutlet\", \"nzStringTemplateOutletContext\"], [1, \"ant-form-item-extra\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzFormControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n      ɵngcc0.ɵɵtemplate(4, NzFormControlComponent_i_4_Template, 1, 1, \"i\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, NzFormControlComponent_div_5_Template, 3, 5, \"div\", 4);\n      ɵngcc0.ɵɵtemplate(6, NzFormControlComponent_div_6_Template, 2, 1, \"div\", 5);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzHasFeedback && ctx.iconType);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.innerTip);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.nzExtra);\n    }\n  },\n  directives: [ɵngcc3.NgIf, ɵngcc4.NzIconDirective, ɵngcc5.NzStringTemplateOutletDirective],\n  encapsulation: 2,\n  data: {\n    animation: [helpMotion]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzFormControlComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NzFormItemComponent,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NzI18nService\n  }, {\n    type: NzFormDirective,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }];\n};\n\nNzFormControlComponent.propDecorators = {\n  defaultValidateControl: [{\n    type: ContentChild,\n    args: [NgControl, {\n      static: false\n    }]\n  }],\n  nzSuccessTip: [{\n    type: Input\n  }],\n  nzWarningTip: [{\n    type: Input\n  }],\n  nzErrorTip: [{\n    type: Input\n  }],\n  nzValidatingTip: [{\n    type: Input\n  }],\n  nzExtra: [{\n    type: Input\n  }],\n  nzAutoTips: [{\n    type: Input\n  }],\n  nzDisableAutoTips: [{\n    type: Input\n  }],\n  nzHasFeedback: [{\n    type: Input\n  }],\n  nzValidateStatus: [{\n    type: Input\n  }]\n};\n\nif (false) {\n  /** @type {?} */\n  NzFormControlComponent.ngAcceptInputType_nzHasFeedback;\n  /** @type {?} */\n\n  NzFormControlComponent.ngAcceptInputType_nzRequired;\n  /** @type {?} */\n\n  NzFormControlComponent.ngAcceptInputType_nzNoColon;\n  /** @type {?} */\n\n  NzFormControlComponent.ngAcceptInputType_nzDisableAutoTips;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype._hasFeedback;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.validateChanges;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.validateString;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.status;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.destroyed$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.localeId;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.autoErrorTip;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.validateControl;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.iconType;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.innerTip;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.defaultValidateControl;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.nzSuccessTip;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.nzWarningTip;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.nzErrorTip;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.nzValidatingTip;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.nzExtra;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.nzAutoTips;\n  /** @type {?} */\n\n  NzFormControlComponent.prototype.nzDisableAutoTips;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.nzFormItemComponent;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.cdr;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormControlComponent.prototype.nzFormDirective;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: form-label.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzFormLabelComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} renderer\n   * @param {?} cdr\n   * @param {?} nzFormDirective\n   */\n  function NzFormLabelComponent(elementRef, renderer, cdr, nzFormDirective) {\n    var _this4 = this;\n\n    _classCallCheck(this, NzFormLabelComponent);\n\n    this.cdr = cdr;\n    this.nzFormDirective = nzFormDirective;\n    this.nzRequired = false;\n    this.noColon = 'default';\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\n\n    if (this.nzFormDirective) {\n      this.nzFormDirective.getInputObservable('nzNoColon').pipe(filter(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this4.noColon === 'default';\n      }), takeUntil(this.destroy$)).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        return _this4.cdr.markForCheck();\n      });\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  _createClass(NzFormLabelComponent, [{\n    key: \"nzNoColon\",\n    get:\n    /**\n     * @return {?}\n     */\n    function get() {\n      var _a;\n\n      return this.noColon !== 'default' ? this.noColon : (_a = this.nzFormDirective) === null || _a === void 0 ? void 0 : _a.nzNoColon;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this.noColon = toBoolean(value);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n  }]);\n\n  return NzFormLabelComponent;\n}();\n\nNzFormLabelComponent.ɵfac = function NzFormLabelComponent_Factory(t) {\n  return new (t || NzFormLabelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NzFormDirective, 12));\n};\n\nNzFormLabelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzFormLabelComponent,\n  selectors: [[\"nz-form-label\"]],\n  inputs: {\n    nzRequired: \"nzRequired\",\n    nzNoColon: \"nzNoColon\",\n    nzFor: \"nzFor\"\n  },\n  exportAs: [\"nzFormLabel\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 5,\n  template: function NzFormLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"label\");\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ant-form-item-no-colon\", ctx.nzNoColon)(\"ant-form-item-required\", ctx.nzRequired);\n      ɵngcc0.ɵɵattribute(\"for\", ctx.nzFor);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzFormLabelComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NzFormDirective,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }]\n  }];\n};\n\nNzFormLabelComponent.propDecorators = {\n  nzFor: [{\n    type: Input\n  }],\n  nzRequired: [{\n    type: Input\n  }],\n  nzNoColon: [{\n    type: Input\n  }]\n};\n\n__decorate([InputBoolean(), __metadata(\"design:type\", Object)], NzFormLabelComponent.prototype, \"nzRequired\", void 0);\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFormDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[nz-form]',\n      exportAs: 'nzForm',\n      host: {\n        '[class.ant-form-horizontal]': \"nzLayout === 'horizontal'\",\n        '[class.ant-form-vertical]': \"nzLayout === 'vertical'\",\n        '[class.ant-form-inline]': \"nzLayout === 'inline'\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.NzConfigService\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    nzLayout: [{\n      type: Input\n    }],\n    nzNoColon: [{\n      type: Input\n    }],\n    nzAutoTips: [{\n      type: Input\n    }],\n    nzDisableAutoTips: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFormItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-item',\n      exportAs: 'nzFormItem',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.ant-form-item-has-success]': 'status === \"success\"',\n        '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n        '[class.ant-form-item-has-error]': 'status === \"error\"',\n        '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n        '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n        '[class.ant-form-item-with-help]': 'withHelpClass'\n      },\n      template: \" <ng-content></ng-content> \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    nzFlex: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFormControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-control',\n      exportAs: 'nzFormControl',\n      preserveWhitespaces: false,\n      animations: [helpMotion],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <div class=\\\"ant-form-item-control-input\\\">\\n      <div class=\\\"ant-form-item-control-input-content\\\">\\n        <ng-content></ng-content>\\n      </div>\\n      <span class=\\\"ant-form-item-children-icon\\\">\\n        <i *ngIf=\\\"nzHasFeedback && iconType\\\" nz-icon [nzType]=\\\"iconType\\\"></i>\\n      </span>\\n    </div>\\n    <div class=\\\"ant-form-item-explain\\\" *ngIf=\\\"innerTip\\\">\\n      <div @helpMotion>\\n        <ng-container *nzStringTemplateOutlet=\\\"innerTip; context: { $implicit: validateControl }\\\">{{ innerTip }}</ng-container>\\n      </div>\\n    </div>\\n    <div class=\\\"ant-form-item-extra\\\" *ngIf=\\\"nzExtra\\\">\\n      <ng-container *nzStringTemplateOutlet=\\\"nzExtra\\\">{{ nzExtra }}</ng-container>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NzFormItemComponent,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc2.NzI18nService\n    }, {\n      type: NzFormDirective,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    nzAutoTips: [{\n      type: Input\n    }],\n    nzDisableAutoTips: [{\n      type: Input\n    }],\n    nzHasFeedback: [{\n      type: Input\n    }],\n    nzValidateStatus: [{\n      type: Input\n    }],\n    defaultValidateControl: [{\n      type: ContentChild,\n      args: [NgControl, {\n        static: false\n      }]\n    }],\n    nzSuccessTip: [{\n      type: Input\n    }],\n    nzWarningTip: [{\n      type: Input\n    }],\n    nzErrorTip: [{\n      type: Input\n    }],\n    nzValidatingTip: [{\n      type: Input\n    }],\n    nzExtra: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFormLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-label',\n      exportAs: 'nzFormLabel',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"\\n    <label [attr.for]=\\\"nzFor\\\" [class.ant-form-item-no-colon]=\\\"nzNoColon\\\" [class.ant-form-item-required]=\\\"nzRequired\\\">\\n      <ng-content></ng-content>\\n    </label>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NzFormDirective,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }];\n  }, {\n    nzRequired: [{\n      type: Input\n    }],\n    nzNoColon: [{\n      type: Input\n    }],\n    nzFor: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  NzFormLabelComponent.ngAcceptInputType_nzRequired;\n  /** @type {?} */\n\n  NzFormLabelComponent.ngAcceptInputType_nzNoColon;\n  /** @type {?} */\n\n  NzFormLabelComponent.prototype.nzFor;\n  /** @type {?} */\n\n  NzFormLabelComponent.prototype.nzRequired;\n  /** @type {?} */\n\n  NzFormLabelComponent.prototype.noColon;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormLabelComponent.prototype.destroy$;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormLabelComponent.prototype.cdr;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormLabelComponent.prototype.nzFormDirective;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: form-split.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzFormSplitComponent = /*#__PURE__*/_createClass(\n/**\n * @param {?} elementRef\n * @param {?} renderer\n */\nfunction NzFormSplitComponent(elementRef, renderer) {\n  _classCallCheck(this, NzFormSplitComponent);\n\n  this.elementRef = elementRef;\n  this.renderer = renderer;\n  this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\n});\n\nNzFormSplitComponent.ɵfac = function NzFormSplitComponent_Factory(t) {\n  return new (t || NzFormSplitComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNzFormSplitComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzFormSplitComponent,\n  selectors: [[\"nz-form-split\"]],\n  exportAs: [\"nzFormSplit\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzFormSplitComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzFormSplitComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFormSplitComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-split',\n      exportAs: 'nzFormSplit',\n      preserveWhitespaces: false,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \" <ng-content></ng-content> \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  NzFormSplitComponent.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormSplitComponent.prototype.renderer;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: form-text.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzFormTextComponent = /*#__PURE__*/_createClass(\n/**\n * @param {?} elementRef\n * @param {?} renderer\n */\nfunction NzFormTextComponent(elementRef, renderer) {\n  _classCallCheck(this, NzFormTextComponent);\n\n  this.elementRef = elementRef;\n  this.renderer = renderer;\n  this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\n});\n\nNzFormTextComponent.ɵfac = function NzFormTextComponent_Factory(t) {\n  return new (t || NzFormTextComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNzFormTextComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NzFormTextComponent,\n  selectors: [[\"nz-form-text\"]],\n  exportAs: [\"nzFormText\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NzFormTextComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNzFormTextComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFormTextComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-form-text',\n      exportAs: 'nzFormText',\n      preserveWhitespaces: false,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \" <ng-content></ng-content> \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  NzFormTextComponent.prototype.elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  NzFormTextComponent.prototype.renderer;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: form.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar NzFormModule = /*#__PURE__*/_createClass(function NzFormModule() {\n  _classCallCheck(this, NzFormModule);\n});\n\nNzFormModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NzFormModule\n});\nNzFormModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NzFormModule_Factory(t) {\n    return new (t || NzFormModule)();\n  },\n  imports: [[CommonModule, NzGridModule, NzIconModule, LayoutModule, PlatformModule, NzOutletModule], NzGridModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NzFormModule, {\n    declarations: function declarations() {\n      return [NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormControlComponent, NzFormTextComponent, NzFormSplitComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, NzGridModule, NzIconModule, LayoutModule, PlatformModule, NzOutletModule];\n    },\n    exports: function exports() {\n      return [NzGridModule, NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormControlComponent, NzFormTextComponent, NzFormSplitComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzFormModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormControlComponent, NzFormTextComponent, NzFormSplitComponent],\n      exports: [NzGridModule, NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormControlComponent, NzFormTextComponent, NzFormSplitComponent],\n      imports: [CommonModule, NzGridModule, NzIconModule, LayoutModule, PlatformModule, NzOutletModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-form.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NzFormControlComponent, NzFormDirective, NzFormItemComponent, NzFormLabelComponent, NzFormModule, NzFormSplitComponent, NzFormTextComponent };","map":{"version":3,"sources":["ng-zorro-antd/form/form.directive.ts","ng-zorro-antd/form/form-item.component.ts","ng-zorro-antd/form/form-control.component.ts","ng-zorro-antd/form/form-label.component.ts","ng-zorro-antd/form/form-split.component.ts","ng-zorro-antd/form/form-text.component.ts","ng-zorro-antd/form/form.module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, OnChanges, OnDestroy, Renderer2, SimpleChange, SimpleChanges } from '@angular/core';\n\nimport { NzConfigService, WithConfig } from 'ng-zorro-antd/core/config';\nimport { BooleanInput, InputObservable } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'form';\n\n@Directive({\n  selector: '[nz-form]',\n  exportAs: 'nzForm',\n  host: {\n    '[class.ant-form-horizontal]': `nzLayout === 'horizontal'`,\n    '[class.ant-form-vertical]': `nzLayout === 'vertical'`,\n    '[class.ant-form-inline]': `nzLayout === 'inline'`\n  }\n})\nexport class NzFormDirective implements OnChanges, OnDestroy, InputObservable {\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  @Input() nzLayout: 'horizontal' | 'vertical' | 'inline' = 'horizontal';\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzNoColon: boolean = false;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() @InputBoolean() nzDisableAutoTips = false;\n\n  destroy$ = new Subject();\n  private inputChanges$ = new Subject<SimpleChanges>();\n\n  getInputObservable<K extends keyof this>(changeType: K): Observable<SimpleChange> {\n    return this.inputChanges$.pipe(\n      filter(changes => changeType in changes),\n      map(value => value[changeType as string])\n    );\n  }\n\n  constructor(public nzConfigService: NzConfigService, elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-form');\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.inputChanges$.next(changes);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { warnDeprecation } from 'ng-zorro-antd/core/logger';\nimport { Subject } from 'rxjs';\n\nexport type NzFormControlStatusType = 'success' | 'error' | 'warning' | 'validating' | null;\n\n/** should add nz-row directive to host, track https://github.com/angular/angular/issues/8785 **/\n@Component({\n  selector: 'nz-form-item',\n  exportAs: 'nzFormItem',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '[class.ant-form-item-has-success]': 'status === \"success\"',\n    '[class.ant-form-item-has-warning]': 'status === \"warning\"',\n    '[class.ant-form-item-has-error]': 'status === \"error\"',\n    '[class.ant-form-item-is-validating]': 'status === \"validating\"',\n    '[class.ant-form-item-has-feedback]': 'hasFeedback && status',\n    '[class.ant-form-item-with-help]': 'withHelpClass'\n  },\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormItemComponent implements OnDestroy, OnDestroy {\n  /**\n   * @deprecated 10.0.0. 'nzFlex' is deprecated and going to be removed in 10.0.0.\n   */\n  @Input() set nzFlex(_: boolean) {\n    warnDeprecation(`'nzFlex' is deprecated and going to be removed in 10.0.0.`);\n  }\n\n  status: NzFormControlStatusType = null;\n  hasFeedback = false;\n  withHelpClass = false;\n\n  private destroy$ = new Subject();\n\n  setWithHelpViaTips(value: boolean): void {\n    this.withHelpClass = value;\n    this.cdr.markForCheck();\n  }\n\n  setStatus(status: NzFormControlStatusType): void {\n    this.status = status;\n    this.cdr.markForCheck();\n  }\n\n  setHasFeedback(hasFeedback: boolean): void {\n    this.hasFeedback = hasFeedback;\n    this.cdr.markForCheck();\n  }\n\n  constructor(elementRef: ElementRef, renderer: Renderer2, private cdr: ChangeDetectorRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';\nimport { helpMotion } from 'ng-zorro-antd/core/animation';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\n\nimport { toBoolean } from 'ng-zorro-antd/core/util';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { NzFormDirective } from './form.directive';\n\nimport { NzFormControlStatusType, NzFormItemComponent } from './form-item.component';\n\nconst iconTypeMap = {\n  error: 'close-circle-fill',\n  validating: 'loading',\n  success: 'check-circle-fill',\n  warning: 'exclamation-circle-fill'\n} as const;\n\n@Component({\n  selector: 'nz-form-control',\n  exportAs: 'nzFormControl',\n  preserveWhitespaces: false,\n  animations: [helpMotion],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"ant-form-item-control-input\">\n      <div class=\"ant-form-item-control-input-content\">\n        <ng-content></ng-content>\n      </div>\n      <span class=\"ant-form-item-children-icon\">\n        <i *ngIf=\"nzHasFeedback && iconType\" nz-icon [nzType]=\"iconType\"></i>\n      </span>\n    </div>\n    <div class=\"ant-form-item-explain\" *ngIf=\"innerTip\">\n      <div @helpMotion>\n        <ng-container *nzStringTemplateOutlet=\"innerTip; context: { $implicit: validateControl }\">{{ innerTip }}</ng-container>\n      </div>\n    </div>\n    <div class=\"ant-form-item-extra\" *ngIf=\"nzExtra\">\n      <ng-container *nzStringTemplateOutlet=\"nzExtra\">{{ nzExtra }}</ng-container>\n    </div>\n  `\n})\nexport class NzFormControlComponent implements OnChanges, OnDestroy, OnInit, AfterContentInit, OnDestroy {\n  static ngAcceptInputType_nzHasFeedback: BooleanInput;\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n  static ngAcceptInputType_nzDisableAutoTips: BooleanInput;\n\n  private _hasFeedback = false;\n  private validateChanges: Subscription = Subscription.EMPTY;\n  private validateString: string | null = null;\n  private status: NzFormControlStatusType = null;\n  private destroyed$ = new Subject<void>();\n  private localeId!: string;\n  private autoErrorTip?: string;\n\n  private get disableAutoTips(): boolean {\n    return this.nzDisableAutoTips !== 'default' ? toBoolean(this.nzDisableAutoTips) : this.nzFormDirective?.nzDisableAutoTips;\n  }\n\n  validateControl: AbstractControl | NgModel | null = null;\n  iconType: typeof iconTypeMap[keyof typeof iconTypeMap] | null = null;\n  innerTip: string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null = null;\n\n  @ContentChild(NgControl, { static: false }) defaultValidateControl?: FormControlName | FormControlDirective;\n  @Input() nzSuccessTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzWarningTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzErrorTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzValidatingTip?: string | TemplateRef<{ $implicit: AbstractControl | NgModel }>;\n  @Input() nzExtra?: string | TemplateRef<void>;\n  @Input() nzAutoTips: Record<string, Record<string, string>> = {};\n  @Input() nzDisableAutoTips: boolean | 'default' = 'default';\n\n  @Input()\n  set nzHasFeedback(value: boolean) {\n    this._hasFeedback = toBoolean(value);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setHasFeedback(this._hasFeedback);\n    }\n  }\n\n  get nzHasFeedback(): boolean {\n    return this._hasFeedback;\n  }\n\n  @Input()\n  set nzValidateStatus(value: string | AbstractControl | FormControlName | NgModel) {\n    if (value instanceof AbstractControl || value instanceof NgModel) {\n      this.validateControl = value;\n      this.validateString = null;\n      this.watchControl();\n    } else if (value instanceof FormControlName) {\n      this.validateControl = value.control;\n      this.validateString = null;\n      this.watchControl();\n    } else {\n      this.validateString = value;\n      this.validateControl = null;\n      this.setStatus();\n    }\n  }\n\n  private watchControl(): void {\n    this.validateChanges.unsubscribe();\n    /** miss detect https://github.com/angular/angular/issues/10887 **/\n    if (this.validateControl && this.validateControl.statusChanges) {\n      this.validateChanges = this.validateControl.statusChanges.pipe(startWith(null), takeUntil(this.destroyed$)).subscribe(_ => {\n        if (!this.disableAutoTips) {\n          this.updateAutoErrorTip();\n        }\n        this.setStatus();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  private setStatus(): void {\n    this.status = this.getControlStatus(this.validateString);\n    this.iconType = this.status ? iconTypeMap[this.status] : null;\n    this.innerTip = this.getInnerTip(this.status);\n    if (this.nzFormItemComponent) {\n      this.nzFormItemComponent.setWithHelpViaTips(!!this.innerTip);\n      this.nzFormItemComponent.setStatus(this.status);\n    }\n  }\n\n  private getControlStatus(validateString: string | null): NzFormControlStatusType {\n    let status: NzFormControlStatusType;\n\n    if (validateString === 'warning' || this.validateControlStatus('INVALID', 'warning')) {\n      status = 'warning';\n    } else if (validateString === 'error' || this.validateControlStatus('INVALID')) {\n      status = 'error';\n    } else if (validateString === 'validating' || validateString === 'pending' || this.validateControlStatus('PENDING')) {\n      status = 'validating';\n    } else if (validateString === 'success' || this.validateControlStatus('VALID')) {\n      status = 'success';\n    } else {\n      status = null;\n    }\n\n    return status;\n  }\n\n  private validateControlStatus(validStatus: string, statusType?: NzFormControlStatusType): boolean {\n    if (!this.validateControl) {\n      return false;\n    } else {\n      const { dirty, touched, status } = this.validateControl;\n      return (!!dirty || !!touched) && (statusType ? this.validateControl.hasError(statusType) : status === validStatus);\n    }\n  }\n\n  private getInnerTip(status: NzFormControlStatusType): string | TemplateRef<{ $implicit: AbstractControl | NgModel }> | null {\n    switch (status) {\n      case 'error':\n        return (!this.disableAutoTips && this.autoErrorTip) || this.nzErrorTip || null;\n      case 'validating':\n        return this.nzValidatingTip || null;\n      case 'success':\n        return this.nzSuccessTip || null;\n      case 'warning':\n        return this.nzWarningTip || null;\n      default:\n        return null;\n    }\n  }\n\n  private updateAutoErrorTip(): void {\n    if (this.validateControl) {\n      const errors = this.validateControl.errors || {};\n      let autoErrorTip = '';\n      for (const key in errors) {\n        if (errors.hasOwnProperty(key)) {\n          autoErrorTip =\n            errors[key][this.localeId] ??\n            this.nzAutoTips?.[this.localeId]?.[key] ??\n            this.nzFormDirective?.nzAutoTips?.[this.localeId]?.[key];\n        }\n        if (!!autoErrorTip) {\n          break;\n        }\n      }\n      this.autoErrorTip = autoErrorTip;\n    }\n  }\n\n  private subscribeAutoTips(observable: Observable<NzSafeAny>): void {\n    observable?.pipe(takeUntil(this.destroyed$)).subscribe(() => {\n      if (!this.disableAutoTips) {\n        this.updateAutoErrorTip();\n        this.setStatus();\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  constructor(\n    elementRef: ElementRef,\n    @Optional() @Host() private nzFormItemComponent: NzFormItemComponent,\n    private cdr: ChangeDetectorRef,\n    renderer: Renderer2,\n    i18n: NzI18nService,\n    @Optional() @Host() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-control');\n\n    this.subscribeAutoTips(i18n.localeChange.pipe(tap(locale => (this.localeId = locale.locale))));\n    this.subscribeAutoTips(this.nzFormDirective?.getInputObservable('nzAutoTips'));\n    this.subscribeAutoTips(\n      this.nzFormDirective?.getInputObservable('nzDisableAutoTips').pipe(filter(() => this.nzDisableAutoTips === 'default'))\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzDisableAutoTips, nzAutoTips, nzSuccessTip, nzWarningTip, nzErrorTip, nzValidatingTip } = changes;\n\n    if (nzDisableAutoTips || nzAutoTips) {\n      this.updateAutoErrorTip();\n      this.setStatus();\n    } else if (nzSuccessTip || nzWarningTip || nzErrorTip || nzValidatingTip) {\n      this.setStatus();\n    }\n  }\n\n  ngOnInit(): void {\n    this.setStatus();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.validateControl && !this.validateString) {\n      if (this.defaultValidateControl instanceof FormControlDirective) {\n        this.nzValidateStatus = this.defaultValidateControl.control;\n      } else {\n        this.nzValidateStatus = this.defaultValidateControl!;\n      }\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SkipSelf,\n  ViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from 'ng-zorro-antd/core/types';\n\nimport { InputBoolean, toBoolean } from 'ng-zorro-antd/core/util';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { NzFormDirective } from './form.directive';\n\n@Component({\n  selector: 'nz-form-label',\n  exportAs: 'nzFormLabel',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <label [attr.for]=\"nzFor\" [class.ant-form-item-no-colon]=\"nzNoColon\" [class.ant-form-item-required]=\"nzRequired\">\n      <ng-content></ng-content>\n    </label>\n  `\n})\nexport class NzFormLabelComponent implements OnDestroy {\n  static ngAcceptInputType_nzRequired: BooleanInput;\n  static ngAcceptInputType_nzNoColon: BooleanInput;\n\n  @Input() nzFor?: string;\n  @Input() @InputBoolean() nzRequired = false;\n  @Input()\n  set nzNoColon(value: boolean) {\n    this.noColon = toBoolean(value);\n  }\n  get nzNoColon(): boolean {\n    return this.noColon !== 'default' ? this.noColon : this.nzFormDirective?.nzNoColon;\n  }\n\n  noColon: boolean | 'default' = 'default';\n\n  private destroy$ = new Subject();\n\n  constructor(\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n    @Optional() @SkipSelf() private nzFormDirective: NzFormDirective\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-form-item-label');\n\n    if (this.nzFormDirective) {\n      this.nzFormDirective\n        .getInputObservable('nzNoColon')\n        .pipe(\n          filter(() => this.noColon === 'default'),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => this.cdr.markForCheck());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-split',\n  exportAs: 'nzFormSplit',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormSplitComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-split');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Renderer2, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'nz-form-text',\n  exportAs: 'nzFormText',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: ` <ng-content></ng-content> `\n})\nexport class NzFormTextComponent {\n  constructor(public elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-form-text');\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { NzGridModule } from 'ng-zorro-antd/grid';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzFormControlComponent } from './form-control.component';\nimport { NzFormItemComponent } from './form-item.component';\nimport { NzFormLabelComponent } from './form-label.component';\nimport { NzFormSplitComponent } from './form-split.component';\nimport { NzFormTextComponent } from './form-text.component';\nimport { NzFormDirective } from './form.directive';\n\n@NgModule({\n  declarations: [\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  exports: [\n    NzGridModule,\n    NzFormDirective,\n    NzFormItemComponent,\n    NzFormLabelComponent,\n    NzFormControlComponent,\n    NzFormTextComponent,\n    NzFormSplitComponent\n  ],\n  imports: [CommonModule, NzGridModule, NzIconModule, LayoutModule, PlatformModule, NzOutletModule]\n})\nexport class NzFormModule {}\n"]},"metadata":{},"sourceType":"module"}