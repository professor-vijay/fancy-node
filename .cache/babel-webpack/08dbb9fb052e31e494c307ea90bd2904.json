{"ast":null,"code":"import _classCallCheck from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Biz1-Market-0.01/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken, Injectable, Optional, Inject, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, mapTo } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nfunction NzConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  NzConfig.prototype.affix;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.select;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.alert;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.anchor;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.avatar;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.backTop;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.badge;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.button;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.card;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.carousel;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.cascader;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.codeEditor;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.collapse;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.collapsePanel;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.datePicker;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.descriptions;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.drawer;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.empty;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.form;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.icon;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.message;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.modal;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.notification;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.pageHeader;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.progress;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.rate;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.space;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.spin;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.switch;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.table;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.tabs;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.timePicker;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.tree;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.treeSelect;\n  /** @type {?|undefined} */\n\n  NzConfig.prototype.typography;\n}\n/**\n * @record\n */\n\n\nfunction SelectConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  SelectConfig.prototype.nzBorderless;\n  /** @type {?|undefined} */\n\n  SelectConfig.prototype.nzSuffixIcon;\n}\n/**\n * @record\n */\n\n\nfunction AffixConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  AffixConfig.prototype.nzOffsetBottom;\n  /** @type {?|undefined} */\n\n  AffixConfig.prototype.nzOffsetTop;\n}\n/**\n * @record\n */\n\n\nfunction AlertConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  AlertConfig.prototype.nzCloseable;\n  /** @type {?|undefined} */\n\n  AlertConfig.prototype.nzShowIcon;\n}\n/**\n * @record\n */\n\n\nfunction AvatarConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  AvatarConfig.prototype.nzShape;\n  /** @type {?|undefined} */\n\n  AvatarConfig.prototype.nzSize;\n}\n/**\n * @record\n */\n\n\nfunction AnchorConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  AnchorConfig.prototype.nzBounds;\n  /** @type {?|undefined} */\n\n  AnchorConfig.prototype.nzOffsetBottom;\n  /** @type {?|undefined} */\n\n  AnchorConfig.prototype.nzOffsetTop;\n  /** @type {?|undefined} */\n\n  AnchorConfig.prototype.nzShowInkInFixed;\n}\n/**\n * @record\n */\n\n\nfunction BackTopConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  BackTopConfig.prototype.nzVisibilityHeight;\n}\n/**\n * @record\n */\n\n\nfunction BadgeConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  BadgeConfig.prototype.nzColor;\n  /** @type {?|undefined} */\n\n  BadgeConfig.prototype.nzOverflowCount;\n  /** @type {?|undefined} */\n\n  BadgeConfig.prototype.nzShowZero;\n}\n/**\n * @record\n */\n\n\nfunction ButtonConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ButtonConfig.prototype.nzSize;\n}\n/**\n * @record\n */\n\n\nfunction CodeEditorConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  CodeEditorConfig.prototype.assetsRoot;\n  /** @type {?|undefined} */\n\n  CodeEditorConfig.prototype.defaultEditorOption;\n  /** @type {?|undefined} */\n\n  CodeEditorConfig.prototype.useStaticLoading;\n  /**\n   * @return {?}\n   */\n\n  CodeEditorConfig.prototype.onLoad = function () {};\n  /**\n   * @return {?}\n   */\n\n\n  CodeEditorConfig.prototype.onFirstEditorInit = function () {};\n  /**\n   * @return {?}\n   */\n\n\n  CodeEditorConfig.prototype.onInit = function () {};\n}\n/**\n * @record\n */\n\n\nfunction CardConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  CardConfig.prototype.nzSize;\n  /** @type {?|undefined} */\n\n  CardConfig.prototype.nzHoverable;\n  /** @type {?|undefined} */\n\n  CardConfig.prototype.nzBordered;\n}\n/**\n * @record\n */\n\n\nfunction CarouselConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  CarouselConfig.prototype.nzAutoPlay;\n  /** @type {?|undefined} */\n\n  CarouselConfig.prototype.nzAutoPlaySpeed;\n  /** @type {?|undefined} */\n\n  CarouselConfig.prototype.nzDots;\n  /** @type {?|undefined} */\n\n  CarouselConfig.prototype.nzEffect;\n  /** @type {?|undefined} */\n\n  CarouselConfig.prototype.nzEnableSwipe;\n  /** @type {?|undefined} */\n\n  CarouselConfig.prototype.nzVertical;\n}\n/**\n * @record\n */\n\n\nfunction CascaderConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  CascaderConfig.prototype.nzSize;\n}\n/**\n * @record\n */\n\n\nfunction CollapseConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  CollapseConfig.prototype.nzAccordion;\n  /** @type {?|undefined} */\n\n  CollapseConfig.prototype.nzBordered;\n}\n/**\n * @record\n */\n\n\nfunction CollapsePanelConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  CollapsePanelConfig.prototype.nzShowArrow;\n}\n/**\n * @record\n */\n\n\nfunction DatePickerConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  DatePickerConfig.prototype.nzSeparator;\n  /** @type {?|undefined} */\n\n  DatePickerConfig.prototype.nzSuffixIcon;\n}\n/**\n * @record\n */\n\n\nfunction DescriptionsConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  DescriptionsConfig.prototype.nzBorder;\n  /** @type {?|undefined} */\n\n  DescriptionsConfig.prototype.nzColumn;\n  /** @type {?|undefined} */\n\n  DescriptionsConfig.prototype.nzSize;\n  /** @type {?|undefined} */\n\n  DescriptionsConfig.prototype.nzColon;\n}\n/**\n * @record\n */\n\n\nfunction DrawerConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  DrawerConfig.prototype.nzMask;\n  /** @type {?|undefined} */\n\n  DrawerConfig.prototype.nzMaskClosable;\n  /** @type {?|undefined} */\n\n  DrawerConfig.prototype.nzCloseOnNavigation;\n}\n/**\n * @record\n */\n\n\nfunction EmptyConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  EmptyConfig.prototype.nzDefaultEmptyContent;\n}\n/**\n * @record\n */\n\n\nfunction FormConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  FormConfig.prototype.nzNoColon;\n  /** @type {?|undefined} */\n\n  FormConfig.prototype.nzAutoTips;\n}\n/**\n * @record\n */\n\n\nfunction IconConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IconConfig.prototype.nzTheme;\n  /** @type {?|undefined} */\n\n  IconConfig.prototype.nzTwotoneColor;\n}\n/**\n * @record\n */\n\n\nfunction MessageConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  MessageConfig.prototype.nzAnimate;\n  /** @type {?|undefined} */\n\n  MessageConfig.prototype.nzDuration;\n  /** @type {?|undefined} */\n\n  MessageConfig.prototype.nzMaxStack;\n  /** @type {?|undefined} */\n\n  MessageConfig.prototype.nzPauseOnHover;\n  /** @type {?|undefined} */\n\n  MessageConfig.prototype.nzTop;\n}\n/**\n * @record\n */\n\n\nfunction ModalConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ModalConfig.prototype.nzMask;\n  /** @type {?|undefined} */\n\n  ModalConfig.prototype.nzMaskClosable;\n  /** @type {?|undefined} */\n\n  ModalConfig.prototype.nzCloseOnNavigation;\n}\n/**\n * @record\n */\n\n\nfunction NotificationConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  NotificationConfig.prototype.nzTop;\n  /** @type {?|undefined} */\n\n  NotificationConfig.prototype.nzBottom;\n  /** @type {?|undefined} */\n\n  NotificationConfig.prototype.nzPlacement;\n}\n/**\n * @record\n */\n\n\nfunction PageHeaderConfig() {}\n\nif (false) {\n  /** @type {?} */\n  PageHeaderConfig.prototype.nzGhost;\n}\n/**\n * @record\n */\n\n\nfunction ProgressConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  ProgressConfig.prototype.nzGapDegree;\n  /** @type {?|undefined} */\n\n  ProgressConfig.prototype.nzGapPosition;\n  /** @type {?|undefined} */\n\n  ProgressConfig.prototype.nzShowInfo;\n  /** @type {?|undefined} */\n\n  ProgressConfig.prototype.nzStrokeSwitch;\n  /** @type {?|undefined} */\n\n  ProgressConfig.prototype.nzStrokeWidth;\n  /** @type {?|undefined} */\n\n  ProgressConfig.prototype.nzSize;\n  /** @type {?|undefined} */\n\n  ProgressConfig.prototype.nzStrokeLinecap;\n  /** @type {?|undefined} */\n\n  ProgressConfig.prototype.nzStrokeColor;\n}\n/**\n * @record\n */\n\n\nfunction RateConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  RateConfig.prototype.nzAllowClear;\n  /** @type {?|undefined} */\n\n  RateConfig.prototype.nzAllowHalf;\n}\n/**\n * @record\n */\n\n\nfunction SpaceConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  SpaceConfig.prototype.nzSize;\n}\n/**\n * @record\n */\n\n\nfunction SpinConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  SpinConfig.prototype.nzIndicator;\n}\n/**\n * @record\n */\n\n\nfunction SwitchConfig() {}\n\nif (false) {\n  /** @type {?} */\n  SwitchConfig.prototype.nzSize;\n}\n/**\n * @record\n */\n\n\nfunction TableConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TableConfig.prototype.nzBordered;\n  /** @type {?|undefined} */\n\n  TableConfig.prototype.nzSize;\n  /** @type {?|undefined} */\n\n  TableConfig.prototype.nzShowQuickJumper;\n  /** @type {?|undefined} */\n\n  TableConfig.prototype.nzLoadingIndicator;\n  /** @type {?|undefined} */\n\n  TableConfig.prototype.nzShowSizeChanger;\n  /** @type {?|undefined} */\n\n  TableConfig.prototype.nzSimple;\n  /** @type {?|undefined} */\n\n  TableConfig.prototype.nzHideOnSinglePage;\n}\n/**\n * @record\n */\n\n\nfunction TabsConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TabsConfig.prototype.nzAnimated;\n  /** @type {?|undefined} */\n\n  TabsConfig.prototype.nzSize;\n  /** @type {?|undefined} */\n\n  TabsConfig.prototype.nzType;\n  /** @type {?|undefined} */\n\n  TabsConfig.prototype.nzTabBarGutter;\n  /** @type {?|undefined} */\n\n  TabsConfig.prototype.nzShowPagination;\n}\n/**\n * @record\n */\n\n\nfunction TimePickerConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TimePickerConfig.prototype.nzAllowEmpty;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzClearText;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzFormat;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzHourStep;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzMinuteStep;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzSecondStep;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzPopupClassName;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzUse12Hours;\n  /** @type {?|undefined} */\n\n  TimePickerConfig.prototype.nzSuffixIcon;\n}\n/**\n * @record\n */\n\n\nfunction TreeConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TreeConfig.prototype.nzBlockNode;\n  /** @type {?|undefined} */\n\n  TreeConfig.prototype.nzShowIcon;\n  /** @type {?|undefined} */\n\n  TreeConfig.prototype.nzHideUnMatched;\n}\n/**\n * @record\n */\n\n\nfunction TreeSelectConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TreeSelectConfig.prototype.nzShowIcon;\n  /** @type {?|undefined} */\n\n  TreeSelectConfig.prototype.nzShowLine;\n  /** @type {?|undefined} */\n\n  TreeSelectConfig.prototype.nzDropdownMatchSelectWidth;\n  /** @type {?|undefined} */\n\n  TreeSelectConfig.prototype.nzHideUnMatched;\n  /** @type {?|undefined} */\n\n  TreeSelectConfig.prototype.nzSize;\n}\n/**\n * @record\n */\n\n\nfunction TypographyConfig() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  TypographyConfig.prototype.nzEllipsisRows;\n}\n/**\n * User should provide an object implements this interface to set global configurations.\n * @type {?}\n */\n\n\nvar NZ_CONFIG = new InjectionToken('nz-config');\n/**\n * @fileoverview added by tsickle\n * Generated from: config.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar isDefined =\n/**\n* @param {?=} value\n* @return {?}\n*/\nfunction isDefined(value) {\n  return value !== undefined;\n};\n\nvar ɵ0 = isDefined;\n\nvar NzConfigService = /*#__PURE__*/function () {\n  /**\n   * @param {?=} defaultConfig\n   */\n  function NzConfigService(defaultConfig) {\n    _classCallCheck(this, NzConfigService);\n\n    this.configUpdated$ = new Subject();\n    this.config = defaultConfig || {};\n  }\n  /**\n   * @template T\n   * @param {?} componentName\n   * @return {?}\n   */\n\n\n  _createClass(NzConfigService, [{\n    key: \"getConfigForComponent\",\n    value: function getConfigForComponent(componentName) {\n      return this.config[componentName];\n    }\n    /**\n     * @param {?} componentName\n     * @return {?}\n     */\n\n  }, {\n    key: \"getConfigChangeEventForComponent\",\n    value: function getConfigChangeEventForComponent(componentName) {\n      return this.configUpdated$.pipe(filter(\n      /**\n      * @param {?} n\n      * @return {?}\n      */\n      function (n) {\n        return n === componentName;\n      }), mapTo(undefined));\n    }\n    /**\n     * @template T\n     * @param {?} componentName\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(componentName, value) {\n      this.config[componentName] = Object.assign(Object.assign({}, this.config[componentName]), value);\n      this.configUpdated$.next(componentName);\n    }\n  }]);\n\n  return NzConfigService;\n}();\n\nNzConfigService.ɵfac = function NzConfigService_Factory(t) {\n  return new (t || NzConfigService)(ɵngcc0.ɵɵinject(NZ_CONFIG, 8));\n};\n/** @nocollapse */\n\n\nNzConfigService.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [NZ_CONFIG]\n    }]\n  }];\n};\n/** @nocollapse */\n\n\nNzConfigService.ɵprov = ɵɵdefineInjectable({\n  factory: function NzConfigService_Factory() {\n    return new NzConfigService(ɵɵinject(NZ_CONFIG, 8));\n  },\n  token: NzConfigService,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NzConfigService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NZ_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  NzConfigService.prototype.configUpdated$;\n  /**\n   * Global config holding property.\n   * @type {?}\n   * @private\n   */\n\n  NzConfigService.prototype.config;\n} // tslint:disable:no-invalid-this\n\n/**\n * This decorator is used to decorate properties. If a property is decorated, it would try to load default value from\n * config.\n * @template T\n * @param {?} componentName\n * @return {?}\n */\n// tslint:disable-next-line:typedef\n\n\nfunction WithConfig(componentName) {\n  return (\n    /**\n    * @param {?} target\n    * @param {?} propName\n    * @param {?=} originalDescriptor\n    * @return {?}\n    */\n    function ConfigDecorator(target, propName, originalDescriptor) {\n      /** @type {?} */\n      var privatePropName = \"$$__assignedValue__\".concat(propName);\n      Object.defineProperty(target, privatePropName, {\n        configurable: true,\n        writable: true,\n        enumerable: false\n      });\n      return {\n        /**\n         * @return {?}\n         */\n        get: function get() {\n          /** @type {?} */\n          var originalValue = (originalDescriptor === null || originalDescriptor === void 0 ? void 0 : originalDescriptor.get) ? originalDescriptor.get.bind(this)() : this[privatePropName];\n          /** @type {?} */\n\n          var assignedByUser = ((this.assignmentCount || {})[propName] || 0) > 1;\n\n          if (assignedByUser && isDefined(originalValue)) {\n            return originalValue;\n          }\n          /** @type {?} */\n\n\n          var componentConfig = this.nzConfigService.getConfigForComponent(componentName) || {};\n          /** @type {?} */\n\n          var configValue = componentConfig[propName];\n          /** @type {?} */\n\n          var ret = isDefined(configValue) ? configValue : originalValue;\n          return ret;\n        },\n\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        set: function set(value) {\n          // If the value is assigned, we consider the newly assigned value as 'assigned by user'.\n          this.assignmentCount = this.assignmentCount || {};\n          this.assignmentCount[propName] = (this.assignmentCount[propName] || 0) + 1;\n\n          if (originalDescriptor === null || originalDescriptor === void 0 ? void 0 : originalDescriptor.set) {\n            originalDescriptor.set.bind(this)(value);\n          } else {\n            this[privatePropName] = value;\n          }\n        },\n        configurable: true,\n        enumerable: true\n      };\n    }\n  );\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng-zorro-antd-core-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NZ_CONFIG, NzConfigService, WithConfig };","map":{"version":3,"sources":["ng-zorro-antd/core/config/config.ts","ng-zorro-antd/core/config/config.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken, TemplateRef, Type } from '@angular/core';\n\nimport { SafeUrl } from '@angular/platform-browser';\nimport { NzBreakpointEnum } from 'ng-zorro-antd/core/services';\nimport { NzSafeAny, NzShapeSCType, NzSizeDSType, NzSizeLDSType, NzSizeMDSType } from 'ng-zorro-antd/core/types';\n\nexport interface NzConfig {\n  affix?: AffixConfig;\n  select?: SelectConfig;\n  alert?: AlertConfig;\n  anchor?: AnchorConfig;\n  avatar?: AvatarConfig;\n  backTop?: BackTopConfig;\n  badge?: BadgeConfig;\n  button?: ButtonConfig;\n  card?: CardConfig;\n  carousel?: CarouselConfig;\n  cascader?: CascaderConfig;\n  codeEditor?: CodeEditorConfig;\n  collapse?: CollapseConfig;\n  collapsePanel?: CollapsePanelConfig;\n  datePicker?: DatePickerConfig;\n  descriptions?: DescriptionsConfig;\n  drawer?: DrawerConfig;\n  empty?: EmptyConfig;\n  form?: FormConfig;\n  icon?: IconConfig;\n  message?: MessageConfig;\n  modal?: ModalConfig;\n  notification?: NotificationConfig;\n  pageHeader?: PageHeaderConfig;\n  progress?: ProgressConfig;\n  rate?: RateConfig;\n  space?: SpaceConfig;\n  spin?: SpinConfig;\n  switch?: SwitchConfig;\n  table?: TableConfig;\n  tabs?: TabsConfig;\n  timePicker?: TimePickerConfig;\n  tree?: TreeConfig;\n  treeSelect?: TreeSelectConfig;\n  typography?: TypographyConfig;\n}\n\nexport interface SelectConfig {\n  nzBorderless?: boolean;\n  nzSuffixIcon?: TemplateRef<NzSafeAny> | string | null;\n}\n\nexport interface AffixConfig {\n  nzOffsetBottom?: number;\n  nzOffsetTop?: number;\n}\n\nexport interface AlertConfig {\n  nzCloseable?: boolean;\n  nzShowIcon?: boolean;\n}\n\nexport interface AvatarConfig {\n  nzShape?: NzShapeSCType;\n  nzSize?: NzSizeLDSType | number;\n}\n\nexport interface AnchorConfig {\n  nzBounds?: number;\n  nzOffsetBottom?: number;\n  nzOffsetTop?: number;\n  nzShowInkInFixed?: boolean;\n}\n\nexport interface BackTopConfig {\n  nzVisibilityHeight?: number;\n}\n\nexport interface BadgeConfig {\n  nzColor?: number;\n  nzOverflowCount?: number;\n  nzShowZero?: number;\n}\n\nexport interface ButtonConfig {\n  nzSize?: 'large' | 'default' | 'small';\n}\n\nexport interface CodeEditorConfig {\n  assetsRoot?: string | SafeUrl;\n  defaultEditorOption?: NzSafeAny;\n  useStaticLoading?: boolean;\n\n  onLoad?(): void;\n  onFirstEditorInit?(): void;\n  onInit?(): void;\n}\n\nexport interface CardConfig {\n  nzSize?: NzSizeDSType;\n  nzHoverable?: boolean;\n  nzBordered?: boolean;\n}\n\nexport interface CarouselConfig {\n  nzAutoPlay?: boolean;\n  nzAutoPlaySpeed?: boolean;\n  nzDots?: boolean;\n  nzEffect?: 'scrollx' | 'fade' | string;\n  nzEnableSwipe?: boolean;\n  nzVertical?: boolean;\n}\n\nexport interface CascaderConfig {\n  nzSize?: string;\n}\n\nexport interface CollapseConfig {\n  nzAccordion?: boolean;\n  nzBordered?: boolean;\n}\n\nexport interface CollapsePanelConfig {\n  nzShowArrow?: boolean;\n}\n\nexport interface DatePickerConfig {\n  nzSeparator?: string;\n  nzSuffixIcon?: string | TemplateRef<NzSafeAny>;\n}\n\nexport interface DescriptionsConfig {\n  nzBorder?: boolean;\n  nzColumn?: { [key in NzBreakpointEnum]?: number } | number;\n  nzSize?: 'default' | 'middle' | 'small';\n  nzColon?: boolean;\n}\n\nexport interface DrawerConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n  nzCloseOnNavigation?: boolean;\n}\n\nexport interface EmptyConfig {\n  nzDefaultEmptyContent?: Type<NzSafeAny> | TemplateRef<string> | string | undefined;\n}\n\nexport interface FormConfig {\n  nzNoColon?: boolean;\n  nzAutoTips?: Record<string, Record<string, string>>;\n}\n\nexport interface IconConfig {\n  nzTheme?: 'fill' | 'outline' | 'twotone';\n  nzTwotoneColor?: string;\n}\n\nexport interface MessageConfig {\n  nzAnimate?: boolean;\n  nzDuration?: number;\n  nzMaxStack?: number;\n  nzPauseOnHover?: boolean;\n  nzTop?: number | string;\n}\n\nexport interface ModalConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n  nzCloseOnNavigation?: boolean;\n}\n\nexport interface NotificationConfig extends MessageConfig {\n  nzTop?: string | number;\n  nzBottom?: string | number;\n  nzPlacement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n}\n\nexport interface PageHeaderConfig {\n  nzGhost: boolean;\n}\n\nexport interface ProgressConfig {\n  nzGapDegree?: number;\n  nzGapPosition?: 'top' | 'right' | 'bottom' | 'left';\n  nzShowInfo?: boolean;\n  nzStrokeSwitch?: number;\n  nzStrokeWidth?: number;\n  nzSize?: 'default' | 'small';\n  nzStrokeLinecap?: 'round' | 'square';\n  nzStrokeColor?: string;\n}\n\nexport interface RateConfig {\n  nzAllowClear?: boolean;\n  nzAllowHalf?: boolean;\n}\n\nexport interface SpaceConfig {\n  nzSize?: 'small' | 'middle' | 'large' | number;\n}\n\nexport interface SpinConfig {\n  nzIndicator?: TemplateRef<NzSafeAny>;\n}\n\nexport interface SwitchConfig {\n  nzSize: NzSizeDSType;\n}\n\nexport interface TableConfig {\n  nzBordered?: boolean;\n  nzSize?: NzSizeMDSType;\n  nzShowQuickJumper?: boolean;\n  nzLoadingIndicator?: TemplateRef<NzSafeAny>;\n  nzShowSizeChanger?: boolean;\n  nzSimple?: boolean;\n  nzHideOnSinglePage?: boolean;\n}\n\nexport interface TabsConfig {\n  nzAnimated?:\n    | boolean\n    | {\n        inkBar: boolean;\n        tabPane: boolean;\n      };\n  nzSize?: NzSizeLDSType;\n  nzType?: 'line' | 'card';\n  nzTabBarGutter?: number;\n  nzShowPagination?: boolean;\n}\n\nexport interface TimePickerConfig {\n  nzAllowEmpty?: boolean;\n  nzClearText?: string;\n  nzFormat?: string;\n  nzHourStep?: number;\n  nzMinuteStep?: number;\n  nzSecondStep?: number;\n  nzPopupClassName?: string;\n  nzUse12Hours?: string;\n  nzSuffixIcon?: string | TemplateRef<NzSafeAny>;\n}\n\nexport interface TreeConfig {\n  nzBlockNode?: boolean;\n  nzShowIcon?: boolean;\n  nzHideUnMatched?: boolean;\n}\n\nexport interface TreeSelectConfig {\n  nzShowIcon?: string;\n  nzShowLine?: boolean;\n  nzDropdownMatchSelectWidth?: boolean;\n  nzHideUnMatched?: boolean;\n  nzSize?: 'large' | 'small' | 'default';\n}\n\nexport interface TypographyConfig {\n  nzEllipsisRows?: number;\n}\n\nexport type NzConfigKey = keyof NzConfig;\n\n/**\n * User should provide an object implements this interface to set global configurations.\n */\nexport const NZ_CONFIG = new InjectionToken<NzConfig>('nz-config');\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Observable, Subject } from 'rxjs';\n\nimport { filter, mapTo } from 'rxjs/operators';\n\nimport { NZ_CONFIG, NzConfig, NzConfigKey } from './config';\n\nconst isDefined = function (value?: NzSafeAny): boolean {\n  return value !== undefined;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzConfigService {\n  private configUpdated$ = new Subject<keyof NzConfig>();\n\n  /** Global config holding property. */\n  private config: NzConfig;\n\n  constructor(@Optional() @Inject(NZ_CONFIG) defaultConfig?: NzConfig) {\n    this.config = defaultConfig || {};\n  }\n\n  getConfigForComponent<T extends NzConfigKey>(componentName: T): NzConfig[T] {\n    return this.config[componentName];\n  }\n\n  getConfigChangeEventForComponent(componentName: NzConfigKey): Observable<void> {\n    return this.configUpdated$.pipe(\n      filter(n => n === componentName),\n      mapTo(undefined)\n    );\n  }\n\n  set<T extends NzConfigKey>(componentName: T, value: NzConfig[T]): void {\n    this.config[componentName] = { ...this.config[componentName], ...value };\n    this.configUpdated$.next(componentName);\n  }\n}\n\n// tslint:disable:no-invalid-this\n\n/**\n * This decorator is used to decorate properties. If a property is decorated, it would try to load default value from\n * config.\n */\n// tslint:disable-next-line:typedef\nexport function WithConfig<T>(componentName: NzConfigKey) {\n  return function ConfigDecorator(target: NzSafeAny, propName: NzSafeAny, originalDescriptor?: TypedPropertyDescriptor<T>): NzSafeAny {\n    const privatePropName = `$$__assignedValue__${propName}`;\n\n    Object.defineProperty(target, privatePropName, {\n      configurable: true,\n      writable: true,\n      enumerable: false\n    });\n\n    return {\n      get(): T | undefined {\n        const originalValue = originalDescriptor?.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n        const assignedByUser = ((this.assignmentCount || {})[propName] || 0) > 1;\n\n        if (assignedByUser && isDefined(originalValue)) {\n          return originalValue;\n        }\n\n        const componentConfig = this.nzConfigService.getConfigForComponent(componentName) || {};\n        const configValue = componentConfig[propName];\n        const ret = isDefined(configValue) ? configValue : originalValue;\n\n        return ret;\n      },\n      set(value?: T): void {\n        // If the value is assigned, we consider the newly assigned value as 'assigned by user'.\n        this.assignmentCount = this.assignmentCount || {};\n        this.assignmentCount[propName] = (this.assignmentCount[propName] || 0) + 1;\n\n        if (originalDescriptor?.set) {\n          originalDescriptor.set.bind(this)(value);\n        } else {\n          this[privatePropName] = value;\n        }\n      },\n      configurable: true,\n      enumerable: true\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}